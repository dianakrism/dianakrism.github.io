I"iæ<h2 id="project-team-id--ptid-cds-jul21-1171-members---diana-hema-pavithra-and-sophiya">Project Team ID = PTID-CDS-JUL21-1171 (Members - Diana, Hema, Pavithra and Sophiya)</h2>
<h2 id="project-id--prcl-0017-customer-churn-business-case">Project ID = PRCL-0017 Customer Churn Business case</h2>

<hr />

<p><img src="/img/posts/homeloan/-PW.png" alt="png" /> <br />
<a href="https://shorturl.at/cikyU">Image Credit</a></p>
<blockquote>
  <p><strong>Due to the immensely colossal dataset, the whole process is divided into 4 Colabs notebooks (generally speaking), <code class="language-plaintext highlighter-rouge">the rest of it was just additional phase to compare models after reduce 4 features (on Phase 5, which refers to highly correlated to each other).</code></strong>
___</p>
</blockquote>

<h2 id="phases-outline">Phases Outline</h2>
<blockquote>
  <p>Due to the immensely colossal datasets, we were facing difficulties in executing all the commands in a single notebook, so we are utilizing 4 Colab notebooks each executing a particular Phase of the project as noted below:</p>
  <ol>
    <li><strong>Phase 1</strong> â†’ Done in the first notebook to load and merge the <em>bureau</em> and <em>bureau_Balance</em> datasets and then after Data Preparation exporting the merged dataset to GDrive.</li>
    <li><strong>Phase 2</strong> â†’ Load the rest of datasets and then merged dataset from previous phase. After data preparation, merges all the datasets and exports the dataset to GDrive.</li>
    <li><strong>Phase 3</strong> â†’ Do a PCA for the final merged dataset and find the consequential features that are utilizable for modeling, then export that dataset to GDrive.</li>
    <li><strong>Phase 4</strong> â†’ Load the final dataset, EDA, Modeling, and Summary.</li>
    <li>[Optional] <strong>Phase 5</strong> â†’ Additional phase to compare models after reduce 4 features <code class="language-plaintext highlighter-rouge">(refers to highly correlated to each other)</code>.
___</li>
  </ol>
</blockquote>

<h3 id="-preliminary--identify-the-business-case-">â€”â€” Preliminary â†’ Identify The Business Case â€”â€”</h3>
<p><img src="/img/posts/homeloan/home.jpg" alt="jpg" /> <br />
<a href="https://www.deviantart.com/jasmineallen/art/Home-Equity-Conversion-Mortgage-823688249">Image Credit</a> <br /></p>
<blockquote>
  <p>This is a Home Loan Default Data which contains multiple databases and sources to predict how capable each loan applicant is competent in repaying the loan. <code class="language-plaintext highlighter-rouge">The target is to predict their clients repayment abilities.</code> Doing so will ensure that clients capable of repayment are not rejected and that loans are given with a principal, maturity, and repayment calendar that will empower their clients to be successful. Consequently, in order to avoid â€˜the curse of dimensionalityâ€™, weâ€™re gonna involve the top 10 of most influence features and will involve it to be a part of prediction journey (passing 10 selected features into X).<br />The most opportune method to solve this case is by applying <strong>classification <code class="language-plaintext highlighter-rouge">(Logistic Regression, KNN, Decision Tree, Random Forest, XG Boost, SVM Classification).</code></strong></p>
</blockquote>

<hr />
<p><img src="/img/posts/homeloan/Phase 1 Outline.png" alt="png" /> <br />
<a href="https://shorturl.at/doAPY">Image Credit</a></p>

<hr />
<blockquote>
  <p><strong><code class="language-plaintext highlighter-rouge">There are 7 databases that provide data for this project so analysing the databases in 7 steps, given by the workflow below:</code></strong> <br />
<img src="/img/posts/homeloan/merging_method.png" alt="jpg" /> <br />
<a href="https://shorturl.at/sxQR2">Image Credit</a></p>
</blockquote>

<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s">"ignore"</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_columns'</span><span class="p">,</span><span class="mi">999</span><span class="p">)</span> <span class="c1">#set column display number
</span><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_rows'</span><span class="p">,</span><span class="mi">200</span><span class="p">)</span> <span class="c1">#set row display number
</span><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'float_format'</span><span class="p">,</span> <span class="s">'{:f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">)</span> <span class="c1">#set float format
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">google.colab</span> <span class="kn">import</span> <span class="n">drive</span>
<span class="n">drive</span><span class="p">.</span><span class="n">mount</span><span class="p">(</span><span class="s">'/content/grive'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Drive already mounted at /content/grive; to attempt to forcibly remount, call drive.mount("/content/grive", force_remount=True).
</code></pre></div></div>

<h3 id="step-1-loading-and-preparing-the-bureau-data-set">STEP 1: Loading and preparing the <em>bureau</em> data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/bureau.csv'</span><span class="p">)</span>
<span class="n">bureau</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>SK_ID_BUREAU</th>
      <th>CREDIT_ACTIVE</th>
      <th>CREDIT_CURRENCY</th>
      <th>DAYS_CREDIT</th>
      <th>CREDIT_DAY_OVERDUE</th>
      <th>DAYS_CREDIT_ENDDATE</th>
      <th>DAYS_ENDDATE_FACT</th>
      <th>AMT_CREDIT_MAX_OVERDUE</th>
      <th>CNT_CREDIT_PROLONG</th>
      <th>AMT_CREDIT_SUM</th>
      <th>AMT_CREDIT_SUM_DEBT</th>
      <th>AMT_CREDIT_SUM_LIMIT</th>
      <th>AMT_CREDIT_SUM_OVERDUE</th>
      <th>CREDIT_TYPE</th>
      <th>DAYS_CREDIT_UPDATE</th>
      <th>AMT_ANNUITY</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>215354</td>
      <td>5714462</td>
      <td>Closed</td>
      <td>currency 1</td>
      <td>-497</td>
      <td>0</td>
      <td>-153.000000</td>
      <td>-153.000000</td>
      <td>nan</td>
      <td>0</td>
      <td>91323.000000</td>
      <td>0.000000</td>
      <td>nan</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-131</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>1</th>
      <td>215354</td>
      <td>5714463</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-208</td>
      <td>0</td>
      <td>1075.000000</td>
      <td>nan</td>
      <td>nan</td>
      <td>0</td>
      <td>225000.000000</td>
      <td>171342.000000</td>
      <td>nan</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-20</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>2</th>
      <td>215354</td>
      <td>5714464</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-203</td>
      <td>0</td>
      <td>528.000000</td>
      <td>nan</td>
      <td>nan</td>
      <td>0</td>
      <td>464323.500000</td>
      <td>nan</td>
      <td>nan</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-16</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>3</th>
      <td>215354</td>
      <td>5714465</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-203</td>
      <td>0</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>0</td>
      <td>90000.000000</td>
      <td>nan</td>
      <td>nan</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-16</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>4</th>
      <td>215354</td>
      <td>5714466</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-629</td>
      <td>0</td>
      <td>1197.000000</td>
      <td>nan</td>
      <td>77674.500000</td>
      <td>0</td>
      <td>2700000.000000</td>
      <td>nan</td>
      <td>nan</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-21</td>
      <td>nan</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 1716428 entries, 0 to 1716427
Data columns (total 17 columns):
 #   Column                  Dtype  
---  ------                  -----  
 0   SK_ID_CURR              int64  
 1   SK_ID_BUREAU            int64  
 2   CREDIT_ACTIVE           object 
 3   CREDIT_CURRENCY         object 
 4   DAYS_CREDIT             int64  
 5   CREDIT_DAY_OVERDUE      int64  
 6   DAYS_CREDIT_ENDDATE     float64
 7   DAYS_ENDDATE_FACT       float64
 8   AMT_CREDIT_MAX_OVERDUE  float64
 9   CNT_CREDIT_PROLONG      int64  
 10  AMT_CREDIT_SUM          float64
 11  AMT_CREDIT_SUM_DEBT     float64
 12  AMT_CREDIT_SUM_LIMIT    float64
 13  AMT_CREDIT_SUM_OVERDUE  float64
 14  CREDIT_TYPE             object 
 15  DAYS_CREDIT_UPDATE      int64  
 16  AMT_ANNUITY             float64
dtypes: float64(8), int64(6), object(3)
memory usage: 222.6+ MB
</code></pre></div></div>

<p><strong>Description of The Dataset:</strong></p>

<p>SK_ID_CURR â†’	ID of loan in our sample (one loan in our sample can have 0,1,2 or more related previous credits in credit bureau). <br />
SK_ID_BUREAU â†’	Recoded ID of previous Credit Bureau credit related to our loan (unique coding for each loan application). <br />
CREDIT_ACTIVE â†’ Status of the Credit Bureau (CB) reported credits. <br />
CREDIT_CURRENCY â†’	Recoded currency of the Credit Bureau credit. <br />
DAYS_CREDIT â†’	How many days before current application did client apply for Credit Bureau credit. <br />
CREDIT_DAY_OVERDUE â†’	Number of days past due on CB credit at the time of application for related loan in our sample. <br />
DAYS_CREDIT_ENDDATE â†’	Remaining duration of CB credit (in days) at the time of application in Home Credit. <br />
DAYS_ENDDATE_FACT â†’	Days since CB credit ended at the time of application in Home Credit (only for closed credit). <br />
AMT_CREDIT_MAX_OVERDUE â†’	Maximal amount overdue on the Credit Bureau credit so far (at application date of loan in our sample). <br />
CNT_CREDIT_PROLONG â†’	How many times was the Credit Bureau credit prolonged. <br />
AMT_CREDIT_SUM â†’	Current credit amount for the Credit Bureau credit. <br />
AMT_CREDIT_SUM_DEBT â†’	Current debt on Credit Bureau credit. <br />
AMT_CREDIT_SUM_LIMIT â†’	Current credit limit of credit card reported in Credit Bureau. <br />
AMT_CREDIT_SUM_OVERDUE â†’	Current amount overdue on Credit Bureau credit. <br />
CREDIT_TYPE â†’	Type of Credit Bureau credit (Car, cash,â€¦). <br />
DAYS_CREDIT_UPDATE â†’	How many days before loan application did last information about the Credit Bureau credit come. <br />
AMT_ANNUITY â†’	Loan annuity. <br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking if the columns have null values
</span>
<span class="n">bureau</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0
SK_ID_BUREAU                    0
CREDIT_ACTIVE                   0
CREDIT_CURRENCY                 0
DAYS_CREDIT                     0
CREDIT_DAY_OVERDUE              0
DAYS_CREDIT_ENDDATE        105553
DAYS_ENDDATE_FACT          633653
AMT_CREDIT_MAX_OVERDUE    1124488
CNT_CREDIT_PROLONG              0
AMT_CREDIT_SUM                 13
AMT_CREDIT_SUM_DEBT        257669
AMT_CREDIT_SUM_LIMIT       591780
AMT_CREDIT_SUM_OVERDUE          0
CREDIT_TYPE                     0
DAYS_CREDIT_UPDATE              0
AMT_ANNUITY               1226791
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Finding the % of missing values in each column
</span>
<span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                0.000000
SK_ID_BUREAU              0.000000
CREDIT_ACTIVE             0.000000
CREDIT_CURRENCY           0.000000
DAYS_CREDIT               0.000000
CREDIT_DAY_OVERDUE        0.000000
DAYS_CREDIT_ENDDATE       6.150000
DAYS_ENDDATE_FACT        36.920000
AMT_CREDIT_MAX_OVERDUE   65.510000
CNT_CREDIT_PROLONG        0.000000
AMT_CREDIT_SUM            0.000000
AMT_CREDIT_SUM_DEBT      15.010000
AMT_CREDIT_SUM_LIMIT     34.480000
AMT_CREDIT_SUM_OVERDUE    0.000000
CREDIT_TYPE               0.000000
DAYS_CREDIT_UPDATE        0.000000
AMT_ANNUITY              71.470000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Assigning NULL percentage value to a variable
</span><span class="n">bur_null</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># find columns with more than 50% missing values
</span><span class="n">colBur</span> <span class="o">=</span> <span class="n">bur_null</span><span class="p">[</span><span class="n">bur_null</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="p">].</span><span class="n">index</span> 

<span class="c1"># drop columns with high null percentage
</span><span class="n">bureau</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">colBur</span><span class="p">,</span><span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1">#check null percentage after dropping
</span><span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>


</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                0.000000
SK_ID_BUREAU              0.000000
CREDIT_ACTIVE             0.000000
CREDIT_CURRENCY           0.000000
DAYS_CREDIT               0.000000
CREDIT_DAY_OVERDUE        0.000000
DAYS_CREDIT_ENDDATE       6.150000
DAYS_ENDDATE_FACT        36.920000
CNT_CREDIT_PROLONG        0.000000
AMT_CREDIT_SUM            0.000000
AMT_CREDIT_SUM_DEBT      15.010000
AMT_CREDIT_SUM_LIMIT     34.480000
AMT_CREDIT_SUM_OVERDUE    0.000000
CREDIT_TYPE               0.000000
DAYS_CREDIT_UPDATE        0.000000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking the shape after dropping 
</span>
<span class="n">bureau</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(1716428, 15)
</code></pre></div></div>

<p><strong>Remarks â†’ 2 columns were dropped <code class="language-plaintext highlighter-rouge">(they had &gt; 50% of missing values.)</code></strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking the description 
</span>
<span class="n">bureau</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_CURR</th>
      <td>1716428.000000</td>
      <td>278214.933645</td>
      <td>102938.558112</td>
      <td>100001.000000</td>
      <td>188866.750000</td>
      <td>278055.000000</td>
      <td>367426.000000</td>
      <td>456255.000000</td>
    </tr>
    <tr>
      <th>SK_ID_BUREAU</th>
      <td>1716428.000000</td>
      <td>5924434.489032</td>
      <td>532265.728552</td>
      <td>5000000.000000</td>
      <td>5463953.750000</td>
      <td>5926303.500000</td>
      <td>6385681.250000</td>
      <td>6843457.000000</td>
    </tr>
    <tr>
      <th>DAYS_CREDIT</th>
      <td>1716428.000000</td>
      <td>-1142.107685</td>
      <td>795.164928</td>
      <td>-2922.000000</td>
      <td>-1666.000000</td>
      <td>-987.000000</td>
      <td>-474.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>CREDIT_DAY_OVERDUE</th>
      <td>1716428.000000</td>
      <td>0.818167</td>
      <td>36.544428</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2792.000000</td>
    </tr>
    <tr>
      <th>DAYS_CREDIT_ENDDATE</th>
      <td>1610875.000000</td>
      <td>510.517362</td>
      <td>4994.219837</td>
      <td>-42060.000000</td>
      <td>-1138.000000</td>
      <td>-330.000000</td>
      <td>474.000000</td>
      <td>31199.000000</td>
    </tr>
    <tr>
      <th>DAYS_ENDDATE_FACT</th>
      <td>1082775.000000</td>
      <td>-1017.437148</td>
      <td>714.010626</td>
      <td>-42023.000000</td>
      <td>-1489.000000</td>
      <td>-897.000000</td>
      <td>-425.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>CNT_CREDIT_PROLONG</th>
      <td>1716428.000000</td>
      <td>0.006410</td>
      <td>0.096224</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>9.000000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT_SUM</th>
      <td>1716415.000000</td>
      <td>354994.591918</td>
      <td>1149811.343980</td>
      <td>0.000000</td>
      <td>51300.000000</td>
      <td>125518.500000</td>
      <td>315000.000000</td>
      <td>585000000.000000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT_SUM_DEBT</th>
      <td>1458759.000000</td>
      <td>137085.119952</td>
      <td>677401.130952</td>
      <td>-4705600.320000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>40153.500000</td>
      <td>170100000.000000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT_SUM_LIMIT</th>
      <td>1124648.000000</td>
      <td>6229.514980</td>
      <td>45032.031476</td>
      <td>-586406.115000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>4705600.320000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT_SUM_OVERDUE</th>
      <td>1716428.000000</td>
      <td>37.912758</td>
      <td>5937.650035</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>3756681.000000</td>
    </tr>
    <tr>
      <th>DAYS_CREDIT_UPDATE</th>
      <td>1716428.000000</td>
      <td>-593.748320</td>
      <td>720.747312</td>
      <td>-41947.000000</td>
      <td>-908.000000</td>
      <td>-395.000000</td>
      <td>-33.000000</td>
      <td>372.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>Days credit, Days Credit End date, Days Enddate Fact, amt credit sum debt and amt credit sum limit have negative values. <code class="language-plaintext highlighter-rouge">These negative values are noted and accepted as the negative values represent the past data from the date of application.</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Filling the null values with mean of their respective columns
</span>
<span class="n">bureau</span><span class="p">[</span><span class="s">'DAYS_CREDIT_ENDDATE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">bureau</span><span class="p">[</span><span class="s">'DAYS_CREDIT_ENDDATE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">bureau</span><span class="p">[</span><span class="s">'DAYS_ENDDATE_FACT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">bureau</span><span class="p">[</span><span class="s">'DAYS_ENDDATE_FACT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_DEBT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_DEBT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_LIMIT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_LIMIT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">bureau</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking to see if all the null values are filled
</span>
<span class="n">bureau</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                0
SK_ID_BUREAU              0
CREDIT_ACTIVE             0
CREDIT_CURRENCY           0
DAYS_CREDIT               0
CREDIT_DAY_OVERDUE        0
DAYS_CREDIT_ENDDATE       0
DAYS_ENDDATE_FACT         0
CNT_CREDIT_PROLONG        0
AMT_CREDIT_SUM            0
AMT_CREDIT_SUM_DEBT       0
AMT_CREDIT_SUM_LIMIT      0
AMT_CREDIT_SUM_OVERDUE    0
CREDIT_TYPE               0
DAYS_CREDIT_UPDATE        0
dtype: int64
</code></pre></div></div>

<p>The bureau data set is now clean with no missing values and ready to be merged with the other datasets.</p>

<h3 id="step-2-loading-and-preparing-the-bureau_balance-data-set">STEP 2: Loading and preparing the bureau_balance data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/bureau_balance.csv'</span><span class="p">)</span>
<span class="n">bureau_bal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_BUREAU</th>
      <th>MONTHS_BALANCE</th>
      <th>STATUS</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5715448</td>
      <td>0</td>
      <td>C</td>
    </tr>
    <tr>
      <th>1</th>
      <td>5715448</td>
      <td>-1</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5715448</td>
      <td>-2</td>
      <td>C</td>
    </tr>
    <tr>
      <th>3</th>
      <td>5715448</td>
      <td>-3</td>
      <td>C</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5715448</td>
      <td>-4</td>
      <td>C</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 27299925 entries, 0 to 27299924
Data columns (total 3 columns):
 #   Column          Dtype 
---  ------          ----- 
 0   SK_ID_BUREAU    int64 
 1   MONTHS_BALANCE  int64 
 2   STATUS          object
dtypes: int64(2), object(1)
memory usage: 624.8+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values
</span>
<span class="n">bureau_bal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_BUREAU      0
MONTHS_BALANCE    0
STATUS            0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_BUREAU</th>
      <th>MONTHS_BALANCE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>27299925.000000</td>
      <td>27299925.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>6036297.332974</td>
      <td>-30.741687</td>
    </tr>
    <tr>
      <th>std</th>
      <td>492348.856904</td>
      <td>23.864509</td>
    </tr>
    <tr>
      <th>min</th>
      <td>5001709.000000</td>
      <td>-96.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>5730933.000000</td>
      <td>-46.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>6070821.000000</td>
      <td>-25.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>6431951.000000</td>
      <td>-11.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>6842888.000000</td>
      <td>0.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>The MONTHS_BALANCE column has negative values but the team has chosen to <strong><code class="language-plaintext highlighter-rouge">leave the negative values</code></strong> as is because MONTHS_BALANCE describes the Month of balance relative to application date (-1 means the freshest balance date). <br /><br />
<strong>Description of the dataset:</strong></p>

<p>SK_ID_BUREAU â†’	Recoded ID of Credit Bureau credit (unique coding for each application) - <code class="language-plaintext highlighter-rouge">use this to join to CREDIT_BUREAU table.</code> <br />
MONTHS_BALANCE â†’	Month of balance relative to application date (-1 means the freshest balance date). <br />
STATUS â†’	Status of Credit Bureau loan during the month (active, closed, DPD0-30,â€¦ <code class="language-plaintext highlighter-rouge">[C means closed, X means status unknown, 0 means no DPD, 1 means maximal did during month between 1-30, 2 means DPD 31-60,â€¦ 5 means DPD 120+ or sold or written off ]</code>).</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Checking the no. of unique SK_ID_BUREAU values
</span>
<span class="n">countbur</span> <span class="o">=</span> <span class="n">bureau_bal</span><span class="p">[</span><span class="s">"SK_ID_BUREAU"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">countbur</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(817395,)
</code></pre></div></div>

<p>For each unique SK_ID_BUREAU there are duplicate rows that provide the data for multiple dates so we need to keep only that row that has the most recent information and drop the old information. In this dataset we will keep only those rows that have the most recent information about the MONTHS_BALANCE for each applicant relative to the application date (-1 means the freshest balance date) by retaining those rows that have the max value for months balance (given the negative values, max operator will give the most recent info) and delete the other rows for each unique SK_ID_BUREAU.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span> <span class="o">=</span> <span class="n">bureau_bal</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_BUREAU'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">MONTHS_BALANCE</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">bureau_bal</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(817395, 3)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span><span class="p">[</span><span class="s">'index'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bureau_bal</span><span class="p">.</span><span class="n">index</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>SK_ID_BUREAU</th>
      <th>CREDIT_ACTIVE</th>
      <th>CREDIT_CURRENCY</th>
      <th>DAYS_CREDIT</th>
      <th>CREDIT_DAY_OVERDUE</th>
      <th>DAYS_CREDIT_ENDDATE</th>
      <th>DAYS_ENDDATE_FACT</th>
      <th>CNT_CREDIT_PROLONG</th>
      <th>AMT_CREDIT_SUM</th>
      <th>AMT_CREDIT_SUM_DEBT</th>
      <th>AMT_CREDIT_SUM_LIMIT</th>
      <th>AMT_CREDIT_SUM_OVERDUE</th>
      <th>CREDIT_TYPE</th>
      <th>DAYS_CREDIT_UPDATE</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>215354</td>
      <td>5714462</td>
      <td>Closed</td>
      <td>currency 1</td>
      <td>-497</td>
      <td>0</td>
      <td>-153.000000</td>
      <td>-153.000000</td>
      <td>0</td>
      <td>91323.000000</td>
      <td>0.000000</td>
      <td>6229.514980</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-131</td>
    </tr>
    <tr>
      <th>1</th>
      <td>215354</td>
      <td>5714463</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-208</td>
      <td>0</td>
      <td>1075.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>225000.000000</td>
      <td>171342.000000</td>
      <td>6229.514980</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-20</td>
    </tr>
    <tr>
      <th>2</th>
      <td>215354</td>
      <td>5714464</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-203</td>
      <td>0</td>
      <td>528.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>464323.500000</td>
      <td>137085.119952</td>
      <td>6229.514980</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-16</td>
    </tr>
    <tr>
      <th>3</th>
      <td>215354</td>
      <td>5714465</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-203</td>
      <td>0</td>
      <td>510.517362</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>90000.000000</td>
      <td>137085.119952</td>
      <td>6229.514980</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-16</td>
    </tr>
    <tr>
      <th>4</th>
      <td>215354</td>
      <td>5714466</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-629</td>
      <td>0</td>
      <td>1197.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>2700000.000000</td>
      <td>137085.119952</td>
      <td>6229.514980</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-21</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_bal</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<span class="n">bureau_bal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_BUREAU</th>
      <th>MONTHS_BALANCE</th>
      <th>STATUS</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>5001709</th>
      <td>5001709</td>
      <td>0</td>
      <td>C</td>
      <td>5001709</td>
    </tr>
    <tr>
      <th>5001710</th>
      <td>5001710</td>
      <td>0</td>
      <td>C</td>
      <td>5001710</td>
    </tr>
    <tr>
      <th>5001711</th>
      <td>5001711</td>
      <td>0</td>
      <td>X</td>
      <td>5001711</td>
    </tr>
    <tr>
      <th>5001712</th>
      <td>5001712</td>
      <td>0</td>
      <td>C</td>
      <td>5001712</td>
    </tr>
    <tr>
      <th>5001713</th>
      <td>5001713</td>
      <td>0</td>
      <td>X</td>
      <td>5001713</td>
    </tr>
  </tbody>
</table>
</div>

<p>The bureau_balance data set is now clean with no missing values and duplicates and is now ready to be merged with the other datasets.</p>

<h3 id="step-3-merging-the-bureau-and-the-bureau_bal-data-sets">STEP 3: Merging the bureau and the bureau_bal data sets</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Left merge the two datasets
</span>
<span class="n">bureau_merged</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">bureau</span><span class="p">,</span> <span class="n">bureau_bal</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_BUREAU'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">bureau</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">bureau_bal</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">bureau_merged</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(1716428, 15) (817395, 4) (1716428, 18)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># the above results show that there are duplicate rows for each SK_ID_CURR, we must keep only those rows that have the most recent info for applicant 
</span>
<span class="c1"># Checking the no. of unique SK_ID_CURR values
</span>
<span class="n">countmer</span> <span class="o">=</span> <span class="n">bureau_merged</span><span class="p">[</span><span class="s">"SK_ID_CURR"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">countmer</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(305811,)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Keeping only those rows that have the most recent info from the application date and deleting old rows for each SK_ID_CURR
</span>
<span class="n">bureau_merged</span> <span class="o">=</span> <span class="n">bureau_merged</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">DAYS_CREDIT</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">bureau_merged</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(305811, 18)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Dropping SK_ID_BUREAU column as it is no longer needed for further merging of the datasets
</span>
<span class="n">bureau_merged</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_BUREAU'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_merged</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(305811, 17)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Export the file
</span><span class="n">bureau_merged</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">'bureau_merged.csv'</span><span class="p">)</span>
<span class="kn">from</span> <span class="nn">google.colab</span> <span class="kn">import</span> <span class="n">files</span>
<span class="n">files</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="s">"bureau_merged.csv"</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;IPython.core.display.Javascript object&gt;



&lt;IPython.core.display.Javascript object&gt;
</code></pre></div></div>

<hr />
<p><img src="/img/posts/homeloan/Phase 2 Outline.png" alt="png" /> <br />
<a href="https://shorturl.at/bqANV">Image Credit</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="p">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s">"ignore"</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_columns'</span><span class="p">,</span><span class="mi">999</span><span class="p">)</span> <span class="c1">#set column display number
</span><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_rows'</span><span class="p">,</span><span class="mi">200</span><span class="p">)</span> <span class="c1">#set row display number
</span><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'float_format'</span><span class="p">,</span> <span class="s">'{:f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">)</span> <span class="c1">#set float format
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">google.colab</span> <span class="kn">import</span> <span class="n">drive</span>
<span class="n">drive</span><span class="p">.</span><span class="n">mount</span><span class="p">(</span><span class="s">'/content/grive'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mounted at /content/grive
</code></pre></div></div>

<h3 id="step-1-loading-and-cleaning-pos_cashbalance-data-set">STEP 1: Loading and cleaning <em>POS_CashBalance</em> data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Loading the dataset
</span>
<span class="n">POS_cashBal</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/POS_CASH_balance.csv'</span><span class="p">)</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_PREV</th>
      <th>SK_ID_CURR</th>
      <th>MONTHS_BALANCE</th>
      <th>CNT_INSTALMENT</th>
      <th>CNT_INSTALMENT_FUTURE</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>SK_DPD</th>
      <th>SK_DPD_DEF</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1803195</td>
      <td>182943</td>
      <td>-31</td>
      <td>48.000000</td>
      <td>45.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1715348</td>
      <td>367990</td>
      <td>-33</td>
      <td>36.000000</td>
      <td>35.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1784872</td>
      <td>397406</td>
      <td>-32</td>
      <td>12.000000</td>
      <td>9.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1903291</td>
      <td>269225</td>
      <td>-35</td>
      <td>48.000000</td>
      <td>42.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2341044</td>
      <td>334279</td>
      <td>-35</td>
      <td>36.000000</td>
      <td>35.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">POS_cashBal</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 10001358 entries, 0 to 10001357
Data columns (total 8 columns):
 #   Column                 Dtype  
---  ------                 -----  
 0   SK_ID_PREV             int64  
 1   SK_ID_CURR             int64  
 2   MONTHS_BALANCE         int64  
 3   CNT_INSTALMENT         float64
 4   CNT_INSTALMENT_FUTURE  float64
 5   NAME_CONTRACT_STATUS   object 
 6   SK_DPD                 int64  
 7   SK_DPD_DEF             int64  
dtypes: float64(2), int64(5), object(1)
memory usage: 610.4+ MB
</code></pre></div></div>

<p><strong>Description of The Dataset:</strong></p>

<p>SK_ID_PREV â†’	ID of previous credit in Home Credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit). <br />
SK_ID_CURR â†’	ID of loan in our sample. <br />
MONTHS_BALANCE â†’	Month of balance relative to application date (-1 means the freshest balance date). <br />
CNT_INSTALMENT â†’	Term of previous credit (can change over time). <br />
CNT_INSTALMENT_FUTURE â†’	Installments left to pay on the previous credit. <br />
NAME_CONTRACT_STATUS â†’	Contract status during the month. <br />
SK_DPD â†’	DPD (days past due) during the month of previous credit. <br />
SK_DPD_DEF â†’	DPD during the month with tolerance (debts with low loan amounts are ignored) of the previous credit. <br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for the null values in the columns
</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                   0
SK_ID_CURR                   0
MONTHS_BALANCE               0
CNT_INSTALMENT           26071
CNT_INSTALMENT_FUTURE    26087
NAME_CONTRACT_STATUS         0
SK_DPD                       0
SK_DPD_DEF                   0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking to see if there are any negative values
</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_PREV</th>
      <td>10001358.000000</td>
      <td>1903216.598957</td>
      <td>535846.530722</td>
      <td>1000001.000000</td>
      <td>1434405.000000</td>
      <td>1896565.000000</td>
      <td>2368963.000000</td>
      <td>2843499.000000</td>
    </tr>
    <tr>
      <th>SK_ID_CURR</th>
      <td>10001358.000000</td>
      <td>278403.863306</td>
      <td>102763.745090</td>
      <td>100001.000000</td>
      <td>189550.000000</td>
      <td>278654.000000</td>
      <td>367429.000000</td>
      <td>456255.000000</td>
    </tr>
    <tr>
      <th>MONTHS_BALANCE</th>
      <td>10001358.000000</td>
      <td>-35.012588</td>
      <td>26.066570</td>
      <td>-96.000000</td>
      <td>-54.000000</td>
      <td>-28.000000</td>
      <td>-13.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>CNT_INSTALMENT</th>
      <td>9975287.000000</td>
      <td>17.089650</td>
      <td>11.995056</td>
      <td>1.000000</td>
      <td>10.000000</td>
      <td>12.000000</td>
      <td>24.000000</td>
      <td>92.000000</td>
    </tr>
    <tr>
      <th>CNT_INSTALMENT_FUTURE</th>
      <td>9975271.000000</td>
      <td>10.483840</td>
      <td>11.109058</td>
      <td>0.000000</td>
      <td>3.000000</td>
      <td>7.000000</td>
      <td>14.000000</td>
      <td>85.000000</td>
    </tr>
    <tr>
      <th>SK_DPD</th>
      <td>10001358.000000</td>
      <td>11.606928</td>
      <td>132.714043</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>4231.000000</td>
    </tr>
    <tr>
      <th>SK_DPD_DEF</th>
      <td>10001358.000000</td>
      <td>0.654468</td>
      <td>32.762491</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>3595.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>MONTHS_BALANCE is the only column that has negative values. We have chosen to leave the negative signs as is, as it makes sense to have the negative values as it reflects the	Month of balance relative to application date (-1 means the freshest balance date).</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Checking the % of missing values in each column
</span>
<span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">POS_cashBal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">POS_cashBal</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV              0.000000
SK_ID_CURR              0.000000
MONTHS_BALANCE          0.000000
CNT_INSTALMENT          0.260000
CNT_INSTALMENT_FUTURE   0.260000
NAME_CONTRACT_STATUS    0.000000
SK_DPD                  0.000000
SK_DPD_DEF              0.000000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Filling the missing values in the columns with means of the respective columns
</span>
<span class="n">POS_cashBal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">POS_cashBal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">POS_cashBal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_FUTURE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">POS_cashBal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_FUTURE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking if there are any more null values
</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV               0
SK_ID_CURR               0
MONTHS_BALANCE           0
CNT_INSTALMENT           0
CNT_INSTALMENT_FUTURE    0
NAME_CONTRACT_STATUS     0
SK_DPD                   0
SK_DPD_DEF               0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Checking the no. of unique SK_ID_CURR values
</span><span class="n">count</span> <span class="o">=</span> <span class="n">POS_cashBal</span><span class="p">[</span><span class="s">"SK_ID_CURR"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">count</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(337252,)
</code></pre></div></div>

<p>For each unique SK_ID_CURR there are duplicate rows that provide the data for the applicant on multiple dates so we need to keep only that row that has the most recent information and drop the old information. In this dataset we will keep only those rows that have the max MONTHS_BALANCE (least negative values as to the latest Month of balance relative to application date (-1 means the freshest balance date)) and delete the other rows for each unique SK_ID_CURR.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">POS_cashBal</span> <span class="o">=</span> <span class="n">POS_cashBal</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">MONTHS_BALANCE</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(337252, 8)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">POS_cashBal</span><span class="p">[</span><span class="s">'index'</span><span class="p">]</span> <span class="o">=</span> <span class="n">POS_cashBal</span><span class="p">.</span><span class="n">index</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_PREV'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">POS_cashBal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>MONTHS_BALANCE</th>
      <th>CNT_INSTALMENT</th>
      <th>CNT_INSTALMENT_FUTURE</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>SK_DPD</th>
      <th>SK_DPD_DEF</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100001</th>
      <td>100001</td>
      <td>-53</td>
      <td>4.000000</td>
      <td>0.000000</td>
      <td>Completed</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100002</th>
      <td>100002</td>
      <td>-1</td>
      <td>24.000000</td>
      <td>6.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100003</th>
      <td>100003</td>
      <td>-18</td>
      <td>7.000000</td>
      <td>0.000000</td>
      <td>Completed</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100004</th>
      <td>100004</td>
      <td>-24</td>
      <td>3.000000</td>
      <td>0.000000</td>
      <td>Completed</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100005</th>
      <td>100005</td>
      <td>-15</td>
      <td>9.000000</td>
      <td>0.000000</td>
      <td>Completed</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>

<p>The POSitive_cash_balance data set is now clean with no missing values and duplicates and is now ready to be merged with the other datasets.
___</p>

<h3 id="step-2-loading-and-preparing-the-creditcard_balance-data-set">STEP 2: Loading and preparing the <em>creditcard_balance</em> data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/credit_card_balance.csv'</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_PREV</th>
      <th>SK_ID_CURR</th>
      <th>MONTHS_BALANCE</th>
      <th>AMT_BALANCE</th>
      <th>AMT_CREDIT_LIMIT_ACTUAL</th>
      <th>AMT_DRAWINGS_ATM_CURRENT</th>
      <th>AMT_DRAWINGS_CURRENT</th>
      <th>AMT_DRAWINGS_OTHER_CURRENT</th>
      <th>AMT_DRAWINGS_POS_CURRENT</th>
      <th>AMT_INST_MIN_REGULARITY</th>
      <th>AMT_PAYMENT_CURRENT</th>
      <th>AMT_PAYMENT_TOTAL_CURRENT</th>
      <th>AMT_RECEIVABLE_PRINCIPAL</th>
      <th>AMT_RECIVABLE</th>
      <th>AMT_TOTAL_RECEIVABLE</th>
      <th>CNT_DRAWINGS_ATM_CURRENT</th>
      <th>CNT_DRAWINGS_CURRENT</th>
      <th>CNT_DRAWINGS_OTHER_CURRENT</th>
      <th>CNT_DRAWINGS_POS_CURRENT</th>
      <th>CNT_INSTALMENT_MATURE_CUM</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>SK_DPD</th>
      <th>SK_DPD_DEF</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2562384</td>
      <td>378907</td>
      <td>-6</td>
      <td>56.970000</td>
      <td>135000</td>
      <td>0.000000</td>
      <td>877.500000</td>
      <td>0.000000</td>
      <td>877.500000</td>
      <td>1700.325000</td>
      <td>1800.000000</td>
      <td>1800.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>35.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2582071</td>
      <td>363914</td>
      <td>-1</td>
      <td>63975.555000</td>
      <td>45000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>60175.080000</td>
      <td>64875.555000</td>
      <td>64875.555000</td>
      <td>1.000000</td>
      <td>1</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>69.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1740877</td>
      <td>371185</td>
      <td>-7</td>
      <td>31815.225000</td>
      <td>450000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>26926.425000</td>
      <td>31460.085000</td>
      <td>31460.085000</td>
      <td>0.000000</td>
      <td>0</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>30.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1389973</td>
      <td>337855</td>
      <td>-4</td>
      <td>236572.110000</td>
      <td>225000</td>
      <td>2250.000000</td>
      <td>2250.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>11795.760000</td>
      <td>11925.000000</td>
      <td>11925.000000</td>
      <td>224949.285000</td>
      <td>233048.970000</td>
      <td>233048.970000</td>
      <td>1.000000</td>
      <td>1</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>10.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1891521</td>
      <td>126868</td>
      <td>-1</td>
      <td>453919.455000</td>
      <td>450000</td>
      <td>0.000000</td>
      <td>11547.000000</td>
      <td>0.000000</td>
      <td>11547.000000</td>
      <td>22924.890000</td>
      <td>27000.000000</td>
      <td>27000.000000</td>
      <td>443044.395000</td>
      <td>453919.455000</td>
      <td>453919.455000</td>
      <td>0.000000</td>
      <td>1</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>101.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 3840312 entries, 0 to 3840311
Data columns (total 23 columns):
 #   Column                      Dtype  
---  ------                      -----  
 0   SK_ID_PREV                  int64  
 1   SK_ID_CURR                  int64  
 2   MONTHS_BALANCE              int64  
 3   AMT_BALANCE                 float64
 4   AMT_CREDIT_LIMIT_ACTUAL     int64  
 5   AMT_DRAWINGS_ATM_CURRENT    float64
 6   AMT_DRAWINGS_CURRENT        float64
 7   AMT_DRAWINGS_OTHER_CURRENT  float64
 8   AMT_DRAWINGS_POS_CURRENT    float64
 9   AMT_INST_MIN_REGULARITY     float64
 10  AMT_PAYMENT_CURRENT         float64
 11  AMT_PAYMENT_TOTAL_CURRENT   float64
 12  AMT_RECEIVABLE_PRINCIPAL    float64
 13  AMT_RECIVABLE               float64
 14  AMT_TOTAL_RECEIVABLE        float64
 15  CNT_DRAWINGS_ATM_CURRENT    float64
 16  CNT_DRAWINGS_CURRENT        int64  
 17  CNT_DRAWINGS_OTHER_CURRENT  float64
 18  CNT_DRAWINGS_POS_CURRENT    float64
 19  CNT_INSTALMENT_MATURE_CUM   float64
 20  NAME_CONTRACT_STATUS        object 
 21  SK_DPD                      int64  
 22  SK_DPD_DEF                  int64  
dtypes: float64(15), int64(7), object(1)
memory usage: 673.9+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values in the columns
</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                         0
SK_ID_CURR                         0
MONTHS_BALANCE                     0
AMT_BALANCE                        0
AMT_CREDIT_LIMIT_ACTUAL            0
AMT_DRAWINGS_ATM_CURRENT      749816
AMT_DRAWINGS_CURRENT               0
AMT_DRAWINGS_OTHER_CURRENT    749816
AMT_DRAWINGS_POS_CURRENT      749816
AMT_INST_MIN_REGULARITY       305236
AMT_PAYMENT_CURRENT           767988
AMT_PAYMENT_TOTAL_CURRENT          0
AMT_RECEIVABLE_PRINCIPAL           0
AMT_RECIVABLE                      0
AMT_TOTAL_RECEIVABLE               0
CNT_DRAWINGS_ATM_CURRENT      749816
CNT_DRAWINGS_CURRENT               0
CNT_DRAWINGS_OTHER_CURRENT    749816
CNT_DRAWINGS_POS_CURRENT      749816
CNT_INSTALMENT_MATURE_CUM     305236
NAME_CONTRACT_STATUS               0
SK_DPD                             0
SK_DPD_DEF                         0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Finding the % of missing values in the columns  
</span>
<span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                    0.000000
SK_ID_CURR                    0.000000
MONTHS_BALANCE                0.000000
AMT_BALANCE                   0.000000
AMT_CREDIT_LIMIT_ACTUAL       0.000000
AMT_DRAWINGS_ATM_CURRENT     19.520000
AMT_DRAWINGS_CURRENT          0.000000
AMT_DRAWINGS_OTHER_CURRENT   19.520000
AMT_DRAWINGS_POS_CURRENT     19.520000
AMT_INST_MIN_REGULARITY       7.950000
AMT_PAYMENT_CURRENT          20.000000
AMT_PAYMENT_TOTAL_CURRENT     0.000000
AMT_RECEIVABLE_PRINCIPAL      0.000000
AMT_RECIVABLE                 0.000000
AMT_TOTAL_RECEIVABLE          0.000000
CNT_DRAWINGS_ATM_CURRENT     19.520000
CNT_DRAWINGS_CURRENT          0.000000
CNT_DRAWINGS_OTHER_CURRENT   19.520000
CNT_DRAWINGS_POS_CURRENT     19.520000
CNT_INSTALMENT_MATURE_CUM     7.950000
NAME_CONTRACT_STATUS          0.000000
SK_DPD                        0.000000
SK_DPD_DEF                    0.000000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_PREV</th>
      <td>3840312.000000</td>
      <td>1904503.589900</td>
      <td>536469.470563</td>
      <td>1000018.000000</td>
      <td>1434385.000000</td>
      <td>1897122.000000</td>
      <td>2369327.750000</td>
      <td>2843496.000000</td>
    </tr>
    <tr>
      <th>SK_ID_CURR</th>
      <td>3840312.000000</td>
      <td>278324.207289</td>
      <td>102704.475133</td>
      <td>100006.000000</td>
      <td>189517.000000</td>
      <td>278396.000000</td>
      <td>367580.000000</td>
      <td>456250.000000</td>
    </tr>
    <tr>
      <th>MONTHS_BALANCE</th>
      <td>3840312.000000</td>
      <td>-34.521921</td>
      <td>26.667751</td>
      <td>-96.000000</td>
      <td>-55.000000</td>
      <td>-28.000000</td>
      <td>-11.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>AMT_BALANCE</th>
      <td>3840312.000000</td>
      <td>58300.155262</td>
      <td>106307.031025</td>
      <td>-420250.185000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>89046.686250</td>
      <td>1505902.185000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT_LIMIT_ACTUAL</th>
      <td>3840312.000000</td>
      <td>153807.957400</td>
      <td>165145.699523</td>
      <td>0.000000</td>
      <td>45000.000000</td>
      <td>112500.000000</td>
      <td>180000.000000</td>
      <td>1350000.000000</td>
    </tr>
    <tr>
      <th>AMT_DRAWINGS_ATM_CURRENT</th>
      <td>3090496.000000</td>
      <td>5961.324822</td>
      <td>28225.688579</td>
      <td>-6827.310000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2115000.000000</td>
    </tr>
    <tr>
      <th>AMT_DRAWINGS_CURRENT</th>
      <td>3840312.000000</td>
      <td>7433.388179</td>
      <td>33846.077334</td>
      <td>-6211.620000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2287098.315000</td>
    </tr>
    <tr>
      <th>AMT_DRAWINGS_OTHER_CURRENT</th>
      <td>3090496.000000</td>
      <td>288.169582</td>
      <td>8201.989345</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1529847.000000</td>
    </tr>
    <tr>
      <th>AMT_DRAWINGS_POS_CURRENT</th>
      <td>3090496.000000</td>
      <td>2968.804848</td>
      <td>20796.887047</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2239274.160000</td>
    </tr>
    <tr>
      <th>AMT_INST_MIN_REGULARITY</th>
      <td>3535076.000000</td>
      <td>3540.204129</td>
      <td>5600.154122</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>6633.911250</td>
      <td>202882.005000</td>
    </tr>
    <tr>
      <th>AMT_PAYMENT_CURRENT</th>
      <td>3072324.000000</td>
      <td>10280.537702</td>
      <td>36078.084953</td>
      <td>0.000000</td>
      <td>152.370000</td>
      <td>2702.700000</td>
      <td>9000.000000</td>
      <td>4289207.445000</td>
    </tr>
    <tr>
      <th>AMT_PAYMENT_TOTAL_CURRENT</th>
      <td>3840312.000000</td>
      <td>7588.856739</td>
      <td>32005.987768</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>6750.000000</td>
      <td>4278315.690000</td>
    </tr>
    <tr>
      <th>AMT_RECEIVABLE_PRINCIPAL</th>
      <td>3840312.000000</td>
      <td>55965.876905</td>
      <td>102533.616843</td>
      <td>-423305.820000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>85359.240000</td>
      <td>1472316.795000</td>
    </tr>
    <tr>
      <th>AMT_RECIVABLE</th>
      <td>3840312.000000</td>
      <td>58088.811177</td>
      <td>105965.369908</td>
      <td>-420250.185000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>88899.491250</td>
      <td>1493338.185000</td>
    </tr>
    <tr>
      <th>AMT_TOTAL_RECEIVABLE</th>
      <td>3840312.000000</td>
      <td>58098.285489</td>
      <td>105971.801103</td>
      <td>-420250.185000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>88914.510000</td>
      <td>1493338.185000</td>
    </tr>
    <tr>
      <th>CNT_DRAWINGS_ATM_CURRENT</th>
      <td>3090496.000000</td>
      <td>0.309449</td>
      <td>1.100401</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>51.000000</td>
    </tr>
    <tr>
      <th>CNT_DRAWINGS_CURRENT</th>
      <td>3840312.000000</td>
      <td>0.703144</td>
      <td>3.190347</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>165.000000</td>
    </tr>
    <tr>
      <th>CNT_DRAWINGS_OTHER_CURRENT</th>
      <td>3090496.000000</td>
      <td>0.004812</td>
      <td>0.082639</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>12.000000</td>
    </tr>
    <tr>
      <th>CNT_DRAWINGS_POS_CURRENT</th>
      <td>3090496.000000</td>
      <td>0.559479</td>
      <td>3.240649</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>165.000000</td>
    </tr>
    <tr>
      <th>CNT_INSTALMENT_MATURE_CUM</th>
      <td>3535076.000000</td>
      <td>20.825084</td>
      <td>20.051494</td>
      <td>0.000000</td>
      <td>4.000000</td>
      <td>15.000000</td>
      <td>32.000000</td>
      <td>120.000000</td>
    </tr>
    <tr>
      <th>SK_DPD</th>
      <td>3840312.000000</td>
      <td>9.283667</td>
      <td>97.515700</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>3260.000000</td>
    </tr>
    <tr>
      <th>SK_DPD_DEF</th>
      <td>3840312.000000</td>
      <td>0.331622</td>
      <td>21.479231</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>3260.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p><code class="language-plaintext highlighter-rouge">MONTHS_BALANCE, AMT_BALANCE, AMT_DRAWINGS_ATM_CURRENT, AMT_DRAWINGS_CURRENT, AMT_RECEIVABLE_PRINCIPAL, AMT_RECIVABLE, AMT_TOTAL_RECEIVABLE columns have negative values.</code>
___
<strong>Description of The Dataset:</strong> <br />
SK_ID_PREV	ID of previous credit in Home Credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit). <br />
SK_ID_CURR â†’	ID of loan in our sample. <br />
MONTHS_BALANCE â†’	Month of balance relative to application date (-1 means the freshest balance date). <br />
AMT_BALANCE â†’	Balance during the month of previous credit. <br />
AMT_CREDIT_LIMIT_ACTUAL â†’	Credit card limit during the month of the previous credit. <br />
AMT_DRAWINGS_ATM_CURRENT â†’	Amount drawing at ATM during the month of the previous credit. <br />
AMT_DRAWINGS_CURRENT â†’	Amount drawing during the month of the previous credit. <br />
AMT_DRAWINGS_OTHER_CURRENT â†’	Amount of other drawings during the month of the previous credit. <br />
AMT_DRAWINGS_POS_CURRENT â†’	Amount drawing or buying goods during the month of the previous credit. <br />
AMT_INST_MIN_REGULARITY â†’	Minimal installment for this month of the previous credit. <br />
AMT_PAYMENT_CURRENT â†’	How much did the client pay during the month on the previous credit. <br />
AMT_PAYMENT_TOTAL_CURRENT â†’	How much did the client pay during the month in total on the previous credit. <br />
AMT_RECEIVABLE_PRINCIPAL â†’	Amount receivable for principal on the previous credit. <br />
AMT_RECIVABLE â†’	Amount receivable on the previous credit. <br />
AMT_TOTAL_RECEIVABLE â†’	Total amount receivable on the previous credit. <br />
CNT_DRAWINGS_ATM_CURRENT â†’	Number of drawings at ATM during this month on the previous credit. <br />
CNT_DRAWINGS_CURRENT â†’	Number of drawings during this month on the previous credit. <br />
CNT_DRAWINGS_OTHER_CURRENT â†’	Number of other drawings during this month on the previous credit. <br />
CNT_DRAWINGS_POS_CURRENT â†’	Number of drawings for goods during this month on the previous credit. <br />
CNT_INSTALMENT_MATURE_CUM â†’	Number of paid installments on the previous credit. <br />
NAME_CONTRACT_STATUS â†’	Contract status during the month. <br />
SK_DPD â†’	DPD  (days past due) during the month of previous credit. <br />
SK_DPD_DEF â†’	DPD during the month with tolerance (debts with low loan amounts are ignored) of the previous credit.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values with the means of each column
</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_ATM_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_ATM_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_OTHER_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_OTHER_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_POS_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_DRAWINGS_POS_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_INST_MIN_REGULARITY'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_INST_MIN_REGULARITY'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_PAYMENT_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'AMT_PAYMENT_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_ATM_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_ATM_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_OTHER_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_OTHER_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_POS_CURRENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_DRAWINGS_POS_CURRENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_MATURE_CUM'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_MATURE_CUM'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values in the columns
</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                    0
SK_ID_CURR                    0
MONTHS_BALANCE                0
AMT_BALANCE                   0
AMT_CREDIT_LIMIT_ACTUAL       0
AMT_DRAWINGS_ATM_CURRENT      0
AMT_DRAWINGS_CURRENT          0
AMT_DRAWINGS_OTHER_CURRENT    0
AMT_DRAWINGS_POS_CURRENT      0
AMT_INST_MIN_REGULARITY       0
AMT_PAYMENT_CURRENT           0
AMT_PAYMENT_TOTAL_CURRENT     0
AMT_RECEIVABLE_PRINCIPAL      0
AMT_RECIVABLE                 0
AMT_TOTAL_RECEIVABLE          0
CNT_DRAWINGS_ATM_CURRENT      0
CNT_DRAWINGS_CURRENT          0
CNT_DRAWINGS_OTHER_CURRENT    0
CNT_DRAWINGS_POS_CURRENT      0
CNT_INSTALMENT_MATURE_CUM     0
NAME_CONTRACT_STATUS          0
SK_DPD                        0
SK_DPD_DEF                    0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Checking the no. of unique SK_ID_CURR values
</span><span class="n">count1</span> <span class="o">=</span> <span class="n">creditcard_bal</span><span class="p">[</span><span class="s">"SK_ID_CURR"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">count1</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(103558,)
</code></pre></div></div>

<p>For each unique SK_ID_CURR there are duplicate rows that provide the data for multiple dates so we need to keep only that row that has the most recent information and drop the old information. In this dataset we will keep only those rows that have the max MONTHS_BALANCE (least negative values as to the latest Month of balance relative to application date (-1 means the freshest balance date)) and delete the other rows for each unique SK_ID_CURR.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span> <span class="o">=</span> <span class="n">creditcard_bal</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">MONTHS_BALANCE</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(103558, 23)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span><span class="p">[</span><span class="s">'index'</span><span class="p">]</span> <span class="o">=</span> <span class="n">creditcard_bal</span><span class="p">.</span><span class="n">index</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">creditcard_bal</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_PREV'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">creditcard_bal</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>MONTHS_BALANCE</th>
      <th>AMT_BALANCE</th>
      <th>AMT_CREDIT_LIMIT_ACTUAL</th>
      <th>AMT_DRAWINGS_ATM_CURRENT</th>
      <th>AMT_DRAWINGS_CURRENT</th>
      <th>AMT_DRAWINGS_OTHER_CURRENT</th>
      <th>AMT_DRAWINGS_POS_CURRENT</th>
      <th>AMT_INST_MIN_REGULARITY</th>
      <th>AMT_PAYMENT_CURRENT</th>
      <th>AMT_PAYMENT_TOTAL_CURRENT</th>
      <th>AMT_RECEIVABLE_PRINCIPAL</th>
      <th>AMT_RECIVABLE</th>
      <th>AMT_TOTAL_RECEIVABLE</th>
      <th>CNT_DRAWINGS_ATM_CURRENT</th>
      <th>CNT_DRAWINGS_CURRENT</th>
      <th>CNT_DRAWINGS_OTHER_CURRENT</th>
      <th>CNT_DRAWINGS_POS_CURRENT</th>
      <th>CNT_INSTALMENT_MATURE_CUM</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>SK_DPD</th>
      <th>SK_DPD_DEF</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100006</th>
      <td>100006</td>
      <td>-1</td>
      <td>0.000000</td>
      <td>270000</td>
      <td>5961.324822</td>
      <td>0.000000</td>
      <td>288.169582</td>
      <td>2968.804848</td>
      <td>0.000000</td>
      <td>10280.537702</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.309449</td>
      <td>0</td>
      <td>0.004812</td>
      <td>0.559479</td>
      <td>0.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100011</th>
      <td>100011</td>
      <td>-2</td>
      <td>0.000000</td>
      <td>90000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>563.355000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>33.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100013</th>
      <td>100013</td>
      <td>-1</td>
      <td>0.000000</td>
      <td>45000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>274.320000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>22.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100021</th>
      <td>100021</td>
      <td>-2</td>
      <td>0.000000</td>
      <td>675000</td>
      <td>5961.324822</td>
      <td>0.000000</td>
      <td>288.169582</td>
      <td>2968.804848</td>
      <td>0.000000</td>
      <td>10280.537702</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.309449</td>
      <td>0</td>
      <td>0.004812</td>
      <td>0.559479</td>
      <td>0.000000</td>
      <td>Completed</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>100023</th>
      <td>100023</td>
      <td>-4</td>
      <td>0.000000</td>
      <td>225000</td>
      <td>5961.324822</td>
      <td>0.000000</td>
      <td>288.169582</td>
      <td>2968.804848</td>
      <td>0.000000</td>
      <td>10280.537702</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.309449</td>
      <td>0</td>
      <td>0.004812</td>
      <td>0.559479</td>
      <td>0.000000</td>
      <td>Active</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>

<p>The creditcard_balance data set is now clean with no missing values and duplicates and is ready to be merged with the other datasets.
___</p>

<h3 id="step-3-loading-and-preparing-the-installment_payments-data-set">STEP 3: Loading and preparing the <em>installment_payments</em> data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/installments_payments.csv'</span><span class="p">)</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_PREV</th>
      <th>SK_ID_CURR</th>
      <th>NUM_INSTALMENT_VERSION</th>
      <th>NUM_INSTALMENT_NUMBER</th>
      <th>DAYS_INSTALMENT</th>
      <th>DAYS_ENTRY_PAYMENT</th>
      <th>AMT_INSTALMENT</th>
      <th>AMT_PAYMENT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1054186</td>
      <td>161674</td>
      <td>1.000000</td>
      <td>6</td>
      <td>-1180.000000</td>
      <td>-1187.000000</td>
      <td>6948.360000</td>
      <td>6948.360000</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1330831</td>
      <td>151639</td>
      <td>0.000000</td>
      <td>34</td>
      <td>-2156.000000</td>
      <td>-2156.000000</td>
      <td>1716.525000</td>
      <td>1716.525000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2085231</td>
      <td>193053</td>
      <td>2.000000</td>
      <td>1</td>
      <td>-63.000000</td>
      <td>-63.000000</td>
      <td>25425.000000</td>
      <td>25425.000000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2452527</td>
      <td>199697</td>
      <td>1.000000</td>
      <td>3</td>
      <td>-2418.000000</td>
      <td>-2426.000000</td>
      <td>24350.130000</td>
      <td>24350.130000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2714724</td>
      <td>167756</td>
      <td>1.000000</td>
      <td>2</td>
      <td>-1383.000000</td>
      <td>-1366.000000</td>
      <td>2165.040000</td>
      <td>2160.585000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 13605401 entries, 0 to 13605400
Data columns (total 8 columns):
 #   Column                  Dtype  
---  ------                  -----  
 0   SK_ID_PREV              int64  
 1   SK_ID_CURR              int64  
 2   NUM_INSTALMENT_VERSION  float64
 3   NUM_INSTALMENT_NUMBER   int64  
 4   DAYS_INSTALMENT         float64
 5   DAYS_ENTRY_PAYMENT      float64
 6   AMT_INSTALMENT          float64
 7   AMT_PAYMENT             float64
dtypes: float64(5), int64(3)
memory usage: 830.4 MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values in each column
</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                   0
SK_ID_CURR                   0
NUM_INSTALMENT_VERSION       0
NUM_INSTALMENT_NUMBER        0
DAYS_INSTALMENT              0
DAYS_ENTRY_PAYMENT        2905
AMT_INSTALMENT               0
AMT_PAYMENT               2905
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_PREV</th>
      <td>13605401.000000</td>
      <td>1903364.969549</td>
      <td>536202.905546</td>
      <td>1000001.000000</td>
      <td>1434191.000000</td>
      <td>1896520.000000</td>
      <td>2369094.000000</td>
      <td>2843499.000000</td>
    </tr>
    <tr>
      <th>SK_ID_CURR</th>
      <td>13605401.000000</td>
      <td>278444.881738</td>
      <td>102718.310411</td>
      <td>100001.000000</td>
      <td>189639.000000</td>
      <td>278685.000000</td>
      <td>367530.000000</td>
      <td>456255.000000</td>
    </tr>
    <tr>
      <th>NUM_INSTALMENT_VERSION</th>
      <td>13605401.000000</td>
      <td>0.856637</td>
      <td>1.035216</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>178.000000</td>
    </tr>
    <tr>
      <th>NUM_INSTALMENT_NUMBER</th>
      <td>13605401.000000</td>
      <td>18.870896</td>
      <td>26.664067</td>
      <td>1.000000</td>
      <td>4.000000</td>
      <td>8.000000</td>
      <td>19.000000</td>
      <td>277.000000</td>
    </tr>
    <tr>
      <th>DAYS_INSTALMENT</th>
      <td>13605401.000000</td>
      <td>-1042.269992</td>
      <td>800.946284</td>
      <td>-2922.000000</td>
      <td>-1654.000000</td>
      <td>-818.000000</td>
      <td>-361.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>DAYS_ENTRY_PAYMENT</th>
      <td>13602496.000000</td>
      <td>-1051.113684</td>
      <td>800.585883</td>
      <td>-4921.000000</td>
      <td>-1662.000000</td>
      <td>-827.000000</td>
      <td>-370.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>AMT_INSTALMENT</th>
      <td>13605401.000000</td>
      <td>17050.906989</td>
      <td>50570.254429</td>
      <td>0.000000</td>
      <td>4226.085000</td>
      <td>8884.080000</td>
      <td>16710.210000</td>
      <td>3771487.845000</td>
    </tr>
    <tr>
      <th>AMT_PAYMENT</th>
      <td>13602496.000000</td>
      <td>17238.223250</td>
      <td>54735.783981</td>
      <td>0.000000</td>
      <td>3398.265000</td>
      <td>8125.515000</td>
      <td>16108.425000</td>
      <td>3771487.845000</td>
    </tr>
  </tbody>
</table>
</div>

<p><code class="language-plaintext highlighter-rouge">DAYS_INSTALMENT, DAYS_ENTRY_PAYMENT has negative values.</code> <br /><br />
<strong>Description of The Dataset:</strong> <br />
SK_ID_PREV â†’	ID of previous credit in Home Credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit). <br />
SK_ID_CURR â†’	ID of loan in our sample. <br />
NUM_INSTALMENT_VERSION â†’	Version of installment calendar (0 is for credit card) of previous credit. Change of installment version from month to month signifies that some parameter of payment calendar has changed. <br />
NUM_INSTALMENT_NUMBER	â†’ On which installment we observe payment. <br />
DAYS_INSTALMENT â†’	When the installment of previous credit was supposed to be paid (relative to application date of current loan). <br />
DAYS_ENTRY_PAYMENT â†’	When was the installments of previous credit paid actually (relative to application date of current loan). <br />
AMT_INSTALMENT â†’	What was the prescribed installment amount of previous credit on this installment. <br />
AMT_PAYMENT â†’	What the client actually paid on previous credit on this installment. <br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values with the means of each column
</span>
<span class="n">instal_paymt</span><span class="p">[</span><span class="s">'DAYS_ENTRY_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">instal_paymt</span><span class="p">[</span><span class="s">'DAYS_ENTRY_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">instal_paymt</span><span class="p">[</span><span class="s">'AMT_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">instal_paymt</span><span class="p">[</span><span class="s">'AMT_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values in each column
</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                0
SK_ID_CURR                0
NUM_INSTALMENT_VERSION    0
NUM_INSTALMENT_NUMBER     0
DAYS_INSTALMENT           0
DAYS_ENTRY_PAYMENT        0
AMT_INSTALMENT            0
AMT_PAYMENT               0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Checking the no. of unique SK_ID_CURR values
</span><span class="n">count2</span> <span class="o">=</span> <span class="n">instal_paymt</span><span class="p">[</span><span class="s">"SK_ID_CURR"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">count2</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(339587,)
</code></pre></div></div>

<p>For each unique SK_ID_CURR there are duplicate rows that provide the data for multiple dates so we need to keep only that row that has the most recent information and drop the old information. In this dataset we will keep only those rows that have the max DAYS_INSTALMENT When the installment of previous credit was supposed to be paid (relative to application date of current loan, -1 means closer to the application date)) and delete the other rows for each unique SK_ID_CURR.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span> <span class="o">=</span> <span class="n">instal_paymt</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">DAYS_INSTALMENT</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(339587, 8)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span><span class="p">[</span><span class="s">'index'</span><span class="p">]</span> <span class="o">=</span> <span class="n">instal_paymt</span><span class="p">.</span><span class="n">index</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">instal_paymt</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_PREV'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">instal_paymt</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>NUM_INSTALMENT_VERSION</th>
      <th>NUM_INSTALMENT_NUMBER</th>
      <th>DAYS_INSTALMENT</th>
      <th>DAYS_ENTRY_PAYMENT</th>
      <th>AMT_INSTALMENT</th>
      <th>AMT_PAYMENT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100001</th>
      <td>100001.000000</td>
      <td>2.000000</td>
      <td>4.000000</td>
      <td>-1619.000000</td>
      <td>-1628.000000</td>
      <td>17397.900000</td>
      <td>17397.900000</td>
    </tr>
    <tr>
      <th>100002</th>
      <td>100002.000000</td>
      <td>2.000000</td>
      <td>19.000000</td>
      <td>-25.000000</td>
      <td>-49.000000</td>
      <td>53093.745000</td>
      <td>53093.745000</td>
    </tr>
    <tr>
      <th>100003</th>
      <td>100003.000000</td>
      <td>2.000000</td>
      <td>7.000000</td>
      <td>-536.000000</td>
      <td>-544.000000</td>
      <td>560835.360000</td>
      <td>560835.360000</td>
    </tr>
    <tr>
      <th>100004</th>
      <td>100004.000000</td>
      <td>2.000000</td>
      <td>3.000000</td>
      <td>-724.000000</td>
      <td>-727.000000</td>
      <td>10573.965000</td>
      <td>10573.965000</td>
    </tr>
    <tr>
      <th>100005</th>
      <td>100005.000000</td>
      <td>2.000000</td>
      <td>9.000000</td>
      <td>-466.000000</td>
      <td>-470.000000</td>
      <td>17656.245000</td>
      <td>17656.245000</td>
    </tr>
  </tbody>
</table>
</div>

<p>The installment_payments data set is now clean with no missing values and duplicates and is ready to be merged with the other datasets.
___</p>

<h3 id="step-4-loading-and-preparing-the-previous_application-data-set">STEP 4: Loading and preparing the <em>previous_application</em> data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/previous_application.csv'</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_PREV</th>
      <th>SK_ID_CURR</th>
      <th>NAME_CONTRACT_TYPE</th>
      <th>AMT_ANNUITY</th>
      <th>AMT_APPLICATION</th>
      <th>AMT_CREDIT</th>
      <th>AMT_DOWN_PAYMENT</th>
      <th>AMT_GOODS_PRICE</th>
      <th>WEEKDAY_APPR_PROCESS_START</th>
      <th>HOUR_APPR_PROCESS_START</th>
      <th>FLAG_LAST_APPL_PER_CONTRACT</th>
      <th>NFLAG_LAST_APPL_IN_DAY</th>
      <th>RATE_DOWN_PAYMENT</th>
      <th>RATE_INTEREST_PRIMARY</th>
      <th>RATE_INTEREST_PRIVILEGED</th>
      <th>NAME_CASH_LOAN_PURPOSE</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>DAYS_DECISION</th>
      <th>NAME_PAYMENT_TYPE</th>
      <th>CODE_REJECT_REASON</th>
      <th>NAME_TYPE_SUITE</th>
      <th>NAME_CLIENT_TYPE</th>
      <th>NAME_GOODS_CATEGORY</th>
      <th>NAME_PORTFOLIO</th>
      <th>NAME_PRODUCT_TYPE</th>
      <th>CHANNEL_TYPE</th>
      <th>SELLERPLACE_AREA</th>
      <th>NAME_SELLER_INDUSTRY</th>
      <th>CNT_PAYMENT</th>
      <th>NAME_YIELD_GROUP</th>
      <th>PRODUCT_COMBINATION</th>
      <th>DAYS_FIRST_DRAWING</th>
      <th>DAYS_FIRST_DUE</th>
      <th>DAYS_LAST_DUE_1ST_VERSION</th>
      <th>DAYS_LAST_DUE</th>
      <th>DAYS_TERMINATION</th>
      <th>NFLAG_INSURED_ON_APPROVAL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2030495</td>
      <td>271877</td>
      <td>Consumer loans</td>
      <td>1730.430000</td>
      <td>17145.000000</td>
      <td>17145.000000</td>
      <td>0.000000</td>
      <td>17145.000000</td>
      <td>SATURDAY</td>
      <td>15</td>
      <td>Y</td>
      <td>1</td>
      <td>0.000000</td>
      <td>0.182832</td>
      <td>0.867336</td>
      <td>XAP</td>
      <td>Approved</td>
      <td>-73</td>
      <td>Cash through the bank</td>
      <td>XAP</td>
      <td>NaN</td>
      <td>Repeater</td>
      <td>Mobile</td>
      <td>POS</td>
      <td>XNA</td>
      <td>Country-wide</td>
      <td>35</td>
      <td>Connectivity</td>
      <td>12.000000</td>
      <td>middle</td>
      <td>POS mobile with interest</td>
      <td>365243.000000</td>
      <td>-42.000000</td>
      <td>300.000000</td>
      <td>-42.000000</td>
      <td>-37.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2802425</td>
      <td>108129</td>
      <td>Cash loans</td>
      <td>25188.615000</td>
      <td>607500.000000</td>
      <td>679671.000000</td>
      <td>nan</td>
      <td>607500.000000</td>
      <td>THURSDAY</td>
      <td>11</td>
      <td>Y</td>
      <td>1</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>XNA</td>
      <td>Approved</td>
      <td>-164</td>
      <td>XNA</td>
      <td>XAP</td>
      <td>Unaccompanied</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>x-sell</td>
      <td>Contact center</td>
      <td>-1</td>
      <td>XNA</td>
      <td>36.000000</td>
      <td>low_action</td>
      <td>Cash X-Sell: low</td>
      <td>365243.000000</td>
      <td>-134.000000</td>
      <td>916.000000</td>
      <td>365243.000000</td>
      <td>365243.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2523466</td>
      <td>122040</td>
      <td>Cash loans</td>
      <td>15060.735000</td>
      <td>112500.000000</td>
      <td>136444.500000</td>
      <td>nan</td>
      <td>112500.000000</td>
      <td>TUESDAY</td>
      <td>11</td>
      <td>Y</td>
      <td>1</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>XNA</td>
      <td>Approved</td>
      <td>-301</td>
      <td>Cash through the bank</td>
      <td>XAP</td>
      <td>Spouse, partner</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>x-sell</td>
      <td>Credit and cash offices</td>
      <td>-1</td>
      <td>XNA</td>
      <td>12.000000</td>
      <td>high</td>
      <td>Cash X-Sell: high</td>
      <td>365243.000000</td>
      <td>-271.000000</td>
      <td>59.000000</td>
      <td>365243.000000</td>
      <td>365243.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2819243</td>
      <td>176158</td>
      <td>Cash loans</td>
      <td>47041.335000</td>
      <td>450000.000000</td>
      <td>470790.000000</td>
      <td>nan</td>
      <td>450000.000000</td>
      <td>MONDAY</td>
      <td>7</td>
      <td>Y</td>
      <td>1</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>XNA</td>
      <td>Approved</td>
      <td>-512</td>
      <td>Cash through the bank</td>
      <td>XAP</td>
      <td>NaN</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>x-sell</td>
      <td>Credit and cash offices</td>
      <td>-1</td>
      <td>XNA</td>
      <td>12.000000</td>
      <td>middle</td>
      <td>Cash X-Sell: middle</td>
      <td>365243.000000</td>
      <td>-482.000000</td>
      <td>-152.000000</td>
      <td>-182.000000</td>
      <td>-177.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1784265</td>
      <td>202054</td>
      <td>Cash loans</td>
      <td>31924.395000</td>
      <td>337500.000000</td>
      <td>404055.000000</td>
      <td>nan</td>
      <td>337500.000000</td>
      <td>THURSDAY</td>
      <td>9</td>
      <td>Y</td>
      <td>1</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>Repairs</td>
      <td>Refused</td>
      <td>-781</td>
      <td>Cash through the bank</td>
      <td>HC</td>
      <td>NaN</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>walk-in</td>
      <td>Credit and cash offices</td>
      <td>-1</td>
      <td>XNA</td>
      <td>24.000000</td>
      <td>high</td>
      <td>Cash Street: high</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
      <td>nan</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 1670214 entries, 0 to 1670213
Data columns (total 37 columns):
 #   Column                       Non-Null Count    Dtype  
---  ------                       --------------    -----  
 0   SK_ID_PREV                   1670214 non-null  int64  
 1   SK_ID_CURR                   1670214 non-null  int64  
 2   NAME_CONTRACT_TYPE           1670214 non-null  object 
 3   AMT_ANNUITY                  1297979 non-null  float64
 4   AMT_APPLICATION              1670214 non-null  float64
 5   AMT_CREDIT                   1670213 non-null  float64
 6   AMT_DOWN_PAYMENT             774370 non-null   float64
 7   AMT_GOODS_PRICE              1284699 non-null  float64
 8   WEEKDAY_APPR_PROCESS_START   1670214 non-null  object 
 9   HOUR_APPR_PROCESS_START      1670214 non-null  int64  
 10  FLAG_LAST_APPL_PER_CONTRACT  1670214 non-null  object 
 11  NFLAG_LAST_APPL_IN_DAY       1670214 non-null  int64  
 12  RATE_DOWN_PAYMENT            774370 non-null   float64
 13  RATE_INTEREST_PRIMARY        5951 non-null     float64
 14  RATE_INTEREST_PRIVILEGED     5951 non-null     float64
 15  NAME_CASH_LOAN_PURPOSE       1670214 non-null  object 
 16  NAME_CONTRACT_STATUS         1670214 non-null  object 
 17  DAYS_DECISION                1670214 non-null  int64  
 18  NAME_PAYMENT_TYPE            1670214 non-null  object 
 19  CODE_REJECT_REASON           1670214 non-null  object 
 20  NAME_TYPE_SUITE              849809 non-null   object 
 21  NAME_CLIENT_TYPE             1670214 non-null  object 
 22  NAME_GOODS_CATEGORY          1670214 non-null  object 
 23  NAME_PORTFOLIO               1670214 non-null  object 
 24  NAME_PRODUCT_TYPE            1670214 non-null  object 
 25  CHANNEL_TYPE                 1670214 non-null  object 
 26  SELLERPLACE_AREA             1670214 non-null  int64  
 27  NAME_SELLER_INDUSTRY         1670214 non-null  object 
 28  CNT_PAYMENT                  1297984 non-null  float64
 29  NAME_YIELD_GROUP             1670214 non-null  object 
 30  PRODUCT_COMBINATION          1669868 non-null  object 
 31  DAYS_FIRST_DRAWING           997149 non-null   float64
 32  DAYS_FIRST_DUE               997149 non-null   float64
 33  DAYS_LAST_DUE_1ST_VERSION    997149 non-null   float64
 34  DAYS_LAST_DUE                997149 non-null   float64
 35  DAYS_TERMINATION             997149 non-null   float64
 36  NFLAG_INSURED_ON_APPROVAL    997149 non-null   float64
dtypes: float64(15), int64(6), object(16)
memory usage: 471.5+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for missing values
</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                           0
SK_ID_CURR                           0
NAME_CONTRACT_TYPE                   0
AMT_ANNUITY                     372235
AMT_APPLICATION                      0
AMT_CREDIT                           1
AMT_DOWN_PAYMENT                895844
AMT_GOODS_PRICE                 385515
WEEKDAY_APPR_PROCESS_START           0
HOUR_APPR_PROCESS_START              0
FLAG_LAST_APPL_PER_CONTRACT          0
NFLAG_LAST_APPL_IN_DAY               0
RATE_DOWN_PAYMENT               895844
RATE_INTEREST_PRIMARY          1664263
RATE_INTEREST_PRIVILEGED       1664263
NAME_CASH_LOAN_PURPOSE               0
NAME_CONTRACT_STATUS                 0
DAYS_DECISION                        0
NAME_PAYMENT_TYPE                    0
CODE_REJECT_REASON                   0
NAME_TYPE_SUITE                 820405
NAME_CLIENT_TYPE                     0
NAME_GOODS_CATEGORY                  0
NAME_PORTFOLIO                       0
NAME_PRODUCT_TYPE                    0
CHANNEL_TYPE                         0
SELLERPLACE_AREA                     0
NAME_SELLER_INDUSTRY                 0
CNT_PAYMENT                     372230
NAME_YIELD_GROUP                     0
PRODUCT_COMBINATION                346
DAYS_FIRST_DRAWING              673065
DAYS_FIRST_DUE                  673065
DAYS_LAST_DUE_1ST_VERSION       673065
DAYS_LAST_DUE                   673065
DAYS_TERMINATION                673065
NFLAG_INSURED_ON_APPROVAL       673065
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Finding the % of missing values
</span>
<span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                     0.000000
SK_ID_CURR                     0.000000
NAME_CONTRACT_TYPE             0.000000
AMT_ANNUITY                   22.290000
AMT_APPLICATION                0.000000
AMT_CREDIT                     0.000000
AMT_DOWN_PAYMENT              53.640000
AMT_GOODS_PRICE               23.080000
WEEKDAY_APPR_PROCESS_START     0.000000
HOUR_APPR_PROCESS_START        0.000000
FLAG_LAST_APPL_PER_CONTRACT    0.000000
NFLAG_LAST_APPL_IN_DAY         0.000000
RATE_DOWN_PAYMENT             53.640000
RATE_INTEREST_PRIMARY         99.640000
RATE_INTEREST_PRIVILEGED      99.640000
NAME_CASH_LOAN_PURPOSE         0.000000
NAME_CONTRACT_STATUS           0.000000
DAYS_DECISION                  0.000000
NAME_PAYMENT_TYPE              0.000000
CODE_REJECT_REASON             0.000000
NAME_TYPE_SUITE               49.120000
NAME_CLIENT_TYPE               0.000000
NAME_GOODS_CATEGORY            0.000000
NAME_PORTFOLIO                 0.000000
NAME_PRODUCT_TYPE              0.000000
CHANNEL_TYPE                   0.000000
SELLERPLACE_AREA               0.000000
NAME_SELLER_INDUSTRY           0.000000
CNT_PAYMENT                   22.290000
NAME_YIELD_GROUP               0.000000
PRODUCT_COMBINATION            0.020000
DAYS_FIRST_DRAWING            40.300000
DAYS_FIRST_DUE                40.300000
DAYS_LAST_DUE_1ST_VERSION     40.300000
DAYS_LAST_DUE                 40.300000
DAYS_TERMINATION              40.300000
NFLAG_INSURED_ON_APPROVAL     40.300000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Assigning NULL percentage value to variable
</span><span class="n">prevapp_null</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># find columns with more than 50% missing values
</span><span class="n">columnprev</span> <span class="o">=</span> <span class="n">prevapp_null</span><span class="p">[</span><span class="n">prevapp_null</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="p">].</span><span class="n">index</span> 

<span class="c1"># drop columns with high null percentage
</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">columnprev</span><span class="p">,</span><span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1">#check null percentage after dropping
</span><span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                     0.000000
SK_ID_CURR                     0.000000
NAME_CONTRACT_TYPE             0.000000
AMT_ANNUITY                   22.290000
AMT_APPLICATION                0.000000
AMT_CREDIT                     0.000000
AMT_GOODS_PRICE               23.080000
WEEKDAY_APPR_PROCESS_START     0.000000
HOUR_APPR_PROCESS_START        0.000000
FLAG_LAST_APPL_PER_CONTRACT    0.000000
NFLAG_LAST_APPL_IN_DAY         0.000000
NAME_CASH_LOAN_PURPOSE         0.000000
NAME_CONTRACT_STATUS           0.000000
DAYS_DECISION                  0.000000
NAME_PAYMENT_TYPE              0.000000
CODE_REJECT_REASON             0.000000
NAME_TYPE_SUITE               49.120000
NAME_CLIENT_TYPE               0.000000
NAME_GOODS_CATEGORY            0.000000
NAME_PORTFOLIO                 0.000000
NAME_PRODUCT_TYPE              0.000000
CHANNEL_TYPE                   0.000000
SELLERPLACE_AREA               0.000000
NAME_SELLER_INDUSTRY           0.000000
CNT_PAYMENT                   22.290000
NAME_YIELD_GROUP               0.000000
PRODUCT_COMBINATION            0.020000
DAYS_FIRST_DRAWING            40.300000
DAYS_FIRST_DUE                40.300000
DAYS_LAST_DUE_1ST_VERSION     40.300000
DAYS_LAST_DUE                 40.300000
DAYS_TERMINATION              40.300000
NFLAG_INSURED_ON_APPROVAL     40.300000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking the shape of the dataframe after the columns are dropped
</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(1670214, 33)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">4 columns have been dropped.</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#getting the list of columns that have missing values &gt; 0 
</span>
<span class="n">null_count</span> <span class="o">=</span> <span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
<span class="n">null_ap</span> <span class="o">=</span> <span class="n">null_count</span><span class="p">[</span><span class="n">null_count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">null_ap</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>AMT_ANNUITY                  372235
AMT_CREDIT                        1
AMT_GOODS_PRICE              385515
NAME_TYPE_SUITE              820405
CNT_PAYMENT                  372230
PRODUCT_COMBINATION             346
DAYS_FIRST_DRAWING           673065
DAYS_FIRST_DUE               673065
DAYS_LAST_DUE_1ST_VERSION    673065
DAYS_LAST_DUE                673065
DAYS_TERMINATION             673065
NFLAG_INSURED_ON_APPROVAL    673065
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span><span class="p">.</span><span class="n">describe</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_PREV</th>
      <td>1670214.000000</td>
      <td>1923089.135331</td>
      <td>532597.958696</td>
      <td>1000001.000000</td>
      <td>1461857.250000</td>
      <td>1923110.500000</td>
      <td>2384279.750000</td>
      <td>2845382.000000</td>
    </tr>
    <tr>
      <th>SK_ID_CURR</th>
      <td>1670214.000000</td>
      <td>278357.174099</td>
      <td>102814.823849</td>
      <td>100001.000000</td>
      <td>189329.000000</td>
      <td>278714.500000</td>
      <td>367514.000000</td>
      <td>456255.000000</td>
    </tr>
    <tr>
      <th>AMT_ANNUITY</th>
      <td>1297979.000000</td>
      <td>15955.120659</td>
      <td>14782.137335</td>
      <td>0.000000</td>
      <td>6321.780000</td>
      <td>11250.000000</td>
      <td>20658.420000</td>
      <td>418058.145000</td>
    </tr>
    <tr>
      <th>AMT_APPLICATION</th>
      <td>1670214.000000</td>
      <td>175233.860360</td>
      <td>292779.762387</td>
      <td>0.000000</td>
      <td>18720.000000</td>
      <td>71046.000000</td>
      <td>180360.000000</td>
      <td>6905160.000000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT</th>
      <td>1670213.000000</td>
      <td>196114.021218</td>
      <td>318574.616546</td>
      <td>0.000000</td>
      <td>24160.500000</td>
      <td>80541.000000</td>
      <td>216418.500000</td>
      <td>6905160.000000</td>
    </tr>
    <tr>
      <th>AMT_GOODS_PRICE</th>
      <td>1284699.000000</td>
      <td>227847.279283</td>
      <td>315396.557937</td>
      <td>0.000000</td>
      <td>50841.000000</td>
      <td>112320.000000</td>
      <td>234000.000000</td>
      <td>6905160.000000</td>
    </tr>
    <tr>
      <th>HOUR_APPR_PROCESS_START</th>
      <td>1670214.000000</td>
      <td>12.484182</td>
      <td>3.334028</td>
      <td>0.000000</td>
      <td>10.000000</td>
      <td>12.000000</td>
      <td>15.000000</td>
      <td>23.000000</td>
    </tr>
    <tr>
      <th>NFLAG_LAST_APPL_IN_DAY</th>
      <td>1670214.000000</td>
      <td>0.996468</td>
      <td>0.059330</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>DAYS_DECISION</th>
      <td>1670214.000000</td>
      <td>-880.679668</td>
      <td>779.099667</td>
      <td>-2922.000000</td>
      <td>-1300.000000</td>
      <td>-581.000000</td>
      <td>-280.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>SELLERPLACE_AREA</th>
      <td>1670214.000000</td>
      <td>313.951115</td>
      <td>7127.443459</td>
      <td>-1.000000</td>
      <td>-1.000000</td>
      <td>3.000000</td>
      <td>82.000000</td>
      <td>4000000.000000</td>
    </tr>
    <tr>
      <th>CNT_PAYMENT</th>
      <td>1297984.000000</td>
      <td>16.054082</td>
      <td>14.567288</td>
      <td>0.000000</td>
      <td>6.000000</td>
      <td>12.000000</td>
      <td>24.000000</td>
      <td>84.000000</td>
    </tr>
    <tr>
      <th>DAYS_FIRST_DRAWING</th>
      <td>997149.000000</td>
      <td>342209.855039</td>
      <td>88916.115834</td>
      <td>-2922.000000</td>
      <td>365243.000000</td>
      <td>365243.000000</td>
      <td>365243.000000</td>
      <td>365243.000000</td>
    </tr>
    <tr>
      <th>DAYS_FIRST_DUE</th>
      <td>997149.000000</td>
      <td>13826.269337</td>
      <td>72444.869708</td>
      <td>-2892.000000</td>
      <td>-1628.000000</td>
      <td>-831.000000</td>
      <td>-411.000000</td>
      <td>365243.000000</td>
    </tr>
    <tr>
      <th>DAYS_LAST_DUE_1ST_VERSION</th>
      <td>997149.000000</td>
      <td>33767.774054</td>
      <td>106857.034789</td>
      <td>-2801.000000</td>
      <td>-1242.000000</td>
      <td>-361.000000</td>
      <td>129.000000</td>
      <td>365243.000000</td>
    </tr>
    <tr>
      <th>DAYS_LAST_DUE</th>
      <td>997149.000000</td>
      <td>76582.403064</td>
      <td>149647.415123</td>
      <td>-2889.000000</td>
      <td>-1314.000000</td>
      <td>-537.000000</td>
      <td>-74.000000</td>
      <td>365243.000000</td>
    </tr>
    <tr>
      <th>DAYS_TERMINATION</th>
      <td>997149.000000</td>
      <td>81992.343838</td>
      <td>153303.516729</td>
      <td>-2874.000000</td>
      <td>-1270.000000</td>
      <td>-499.000000</td>
      <td>-44.000000</td>
      <td>365243.000000</td>
    </tr>
    <tr>
      <th>NFLAG_INSURED_ON_APPROVAL</th>
      <td>997149.000000</td>
      <td>0.332570</td>
      <td>0.471134</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p><code class="language-plaintext highlighter-rouge">DAYS_DECISION, SELLERPLACE_AREA, DAYS_FIRST_DRAWING, DAYS_FIRST_DUE, DAYS_LAST_DUE_1ST_VERSION, DAYS_LAST_DUE, DAYS_TERMINATION have negative values.</code> <br /><br />
<strong>Description of The Dataset:</strong> <br />
SK_ID_PREV â†’	ID of previous credit in Home Credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit). <br />
SK_ID_CURR â†’	ID of loan in our sample. <br />
NAME_CONTRACT_TYPE â†’	Identification if loan is cash or revolving. <br />
AMT_ANNUITY â†’	Loan annuity. <br />
AMT_APPLICATION â†’	For how much credit did client ask on the previous application. <br />
AMT_CREDIT â†’	Credit amount of the loan. <br />
AMT_GOODS_PRICE	â†’ For consumer loans it is the price of the goods for which the loan is given. <br />
WEEKDAY_APPR_PROCESS_START â†’	On which day of the week did the client apply for the loan. <br />
HOUR_APPR_PROCESS_START â†’	Approximately at what hour did the client apply for the loan. <br />
FLAG_LAST_APPL_PER_CONTRACT â†’	Flag if it was last application for the previous contract. Sometimes by mistake of client or our clerk there could be more applications for one single contract. <br />
NFLAG_LAST_APPL_IN_DAY â†’	Flag if the application was the last application per day of the client. Sometimes clients apply for more applications a day. Rarely it could also be error in our system that one application is in the database twice. <br />
NAME_CASH_LOAN_PURPOSE â†’	Purpose of the cash loan. <br />
NAME_CONTRACT_STATUS â†’	Contract status during the month. <br />
DAYS_DECISION â†’	Relative to current application when was the decision about previous application made. <br />
NAME_PAYMENT_TYPE â†’	Payment method that client chose to pay for the previous application. <br />
CODE_REJECT_REASON â†’	Why was the previous application rejected. <br />
NAME_TYPE_SUITE	Who was accompanying client when he was applying for the loan. <br />
NAME_CLIENT_TYPE â†’	Was the client old or new client when applying for the previous application. <br />
NAME_GOODS_CATEGORY â†’	What kind of goods did the client apply for in the previous application. <br />
NAME_PORTFOLIO â†’	Was the previous application for CASH, POS, CAR, â€¦ <br />
NAME_PRODUCT_TYPE â†’	Was the previous application x-sell o walk-in. <br />
CHANNEL_TYPE â†’	Through which channel we acquired the client on the previous application. <br />
SELLERPLACE_AREA â†’	Selling area of seller place of the previous application. <br />
NAME_SELLER_INDUSTRY â†’	The industry of the seller. <br />
CNT_PAYMENT â†’	Term of previous credit at application of the previous application. <br />
NAME_YIELD_GROUP â†’	Grouped interest rate into small medium and high of the previous application. <br />
PRODUCT_COMBINATION â†’	Detailed product combination of the previous application. <br />
DAYS_FIRST_DRAWING â†’	Relative to application date of current application when was the first disbursement of the previous application. <br />
DAYS_FIRST_DUE â†’	Relative to application date of current application when was the first due supposed to be of the previous application. <br />
DAYS_LAST_DUE_1ST_VERSION â†’	Relative to application date of current application when was the first due of the previous application. <br />
DAYS_LAST_DUE â†’	Relative to application date of current application when was the last due date of the previous application. <br />
DAYS_TERMINATION â†’	Relative to application date of current application when was the expected termination of the previous application. Description of the data set. <br />
SK_ID_PREV â†’	ID of previous credit in Home Credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit). <br />
SK_ID_CURR â†’	ID of loan in our sample. <br />
NAME_CONTRACT_TYPE	Identification if loan is cash or revolving. <br />
AMT_ANNUITY â†’	Loan annuity. <br />
AMT_APPLICATION â†’	For how much credit did client ask on the previous application. <br />
AMT_CREDIT â†’	Credit amount of the loan. <br />
AMT_GOODS_PRICE â†’	For consumer loans it is the price of the goods for which the loan is given. <br />
WEEKDAY_APPR_PROCESS_START â†’	On which day of the week did the client apply for the loan. <br />
HOUR_APPR_PROCESS_START â†’	Approximately at what hour did the client apply for the loan. <br />
FLAG_LAST_APPL_PER_CONTRACT â†’	Flag if it was last application for the previous contract. Sometimes by mistake of client or our clerk there could be more applications for one single contract. <br />
NFLAG_LAST_APPL_IN_DAY â†’	Flag if the application was the last application per day of the client. Sometimes clients apply for more applications a day. Rarely it could also be error in our system that one application is in the database twice. <br />
NAME_CASH_LOAN_PURPOSE â†’	Purpose of the cash loan. <br />
NAME_CONTRACT_STATUS â†’	Contract status during the month. <br />
DAYS_DECISION â†’	Relative to current application when was the decision about previous application made. <br />
NAME_PAYMENT_TYPE	â†’ Payment method that client chose to pay for the previous application. <br />
CODE_REJECT_REASON â†’	Why was the previous application rejected. <br />
NAME_TYPE_SUITE â†’	Who was accompanying client when he was applying for the loan. <br />
NAME_CLIENT_TYPE â†’	Was the client old or new client when applying for the previous application. <br />
NAME_GOODS_CATEGORY â†’	What kind of goods did the client apply for in the previous application. <br />
NAME_PORTFOLIO â†’	Was the previous application for CASH, POS, CAR, â€¦ <br />
NAME_PRODUCT_TYPE	â†’ Was the previous application x-sell o walk-in. <br />
CHANNEL_TYPE â†’	Through which channel we acquired the client on the previous application. <br />
SELLERPLACE_AREA	â†’ Selling area of seller place of the previous application. <br />
NAME_SELLER_INDUSTRY â†’	The industry of the seller. <br />
CNT_PAYMENT â†’	Term of previous credit at application of the previous application. <br />
NAME_YIELD_GROUP â†’	Grouped interest rate into small medium and high of the previous application. <br />
PRODUCT_COMBINATION â†’	Detailed product combination of the previous application. <br />
DAYS_FIRST_DRAWING â†’	Relative to application date of current application when was the first disbursement of the previous application. <br />
DAYS_FIRST_DUE â†’	Relative to application date of current application when was the first due supposed to be of the previous application. <br />
DAYS_LAST_DUE_1ST_VERSION â†’	Relative to application date of current application when was the first due of the previous application. <br />
DAYS_LAST_DUE â†’	Relative to application date of current application when was the last due date of the previous application. <br />
DAYS_TERMINATION â†’	Relative to application date of current application when was the expected termination of the previous application. <br />
NFLAG_INSURED_ON_APPROVAL â†’	Did the client requested insurance during the previous application. <br />
NFLAG_INSURED_ON_APPROVAL â†’	Did the client requested insurance during the previous application.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the columns
</span>
<span class="c1"># For the numerical values, replacing the missing values with mean of their respective columns
</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_ANNUITY'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_ANNUITY'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_CREDIT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_CREDIT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'CNT_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'CNT_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_FIRST_DRAWING'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_FIRST_DRAWING'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_FIRST_DUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_FIRST_DUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE_1ST_VERSION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE_1ST_VERSION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_TERMINATION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'DAYS_TERMINATION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">[</span><span class="s">'NFLAG_INSURED_ON_APPROVAL'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'NFLAG_INSURED_ON_APPROVAL'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># For the categorical values, replacing the missing values with most frequently appearing values
</span>
<span class="c1"># Getting the mode of the categorical columns and for no of family members
</span><span class="k">print</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    Unaccompanied
dtype: object
0    Cash
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the below with the most frequently appearing values from above 
</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">]),</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Unaccompanied"</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">prev_appln</span><span class="p">[</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">]),</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Cash"</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_PREV                     0
SK_ID_CURR                     0
NAME_CONTRACT_TYPE             0
AMT_ANNUITY                    0
AMT_APPLICATION                0
AMT_CREDIT                     0
AMT_GOODS_PRICE                0
WEEKDAY_APPR_PROCESS_START     0
HOUR_APPR_PROCESS_START        0
FLAG_LAST_APPL_PER_CONTRACT    0
NFLAG_LAST_APPL_IN_DAY         0
NAME_CASH_LOAN_PURPOSE         0
NAME_CONTRACT_STATUS           0
DAYS_DECISION                  0
NAME_PAYMENT_TYPE              0
CODE_REJECT_REASON             0
NAME_TYPE_SUITE                0
NAME_CLIENT_TYPE               0
NAME_GOODS_CATEGORY            0
NAME_PORTFOLIO                 0
NAME_PRODUCT_TYPE              0
CHANNEL_TYPE                   0
SELLERPLACE_AREA               0
NAME_SELLER_INDUSTRY           0
CNT_PAYMENT                    0
NAME_YIELD_GROUP               0
PRODUCT_COMBINATION            0
DAYS_FIRST_DRAWING             0
DAYS_FIRST_DUE                 0
DAYS_LAST_DUE_1ST_VERSION      0
DAYS_LAST_DUE                  0
DAYS_TERMINATION               0
NFLAG_INSURED_ON_APPROVAL      0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Checking the no. of unique SK_ID_CURR values
</span><span class="n">count3</span> <span class="o">=</span> <span class="n">prev_appln</span><span class="p">[</span><span class="s">"SK_ID_CURR"</span><span class="p">].</span><span class="n">unique</span><span class="p">()</span>
<span class="n">count3</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(338857,)
</code></pre></div></div>

<p>For each unique SK_ID_CURR there are duplicate rows that provide the data for multiple dates so we need to keep only that row that has the most recent information and drop the old information. In this dataset we will keep only those rows that have the max DAYS_DECISION which is Relative to current application when was the decision about previous application made(-1 means the freshest balance date)) and delete the other rows for each unique SK_ID_CURR.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span> <span class="o">=</span> <span class="n">prev_appln</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">group_keys</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">DAYS_DECISION</span><span class="p">.</span><span class="n">idxmax</span><span class="p">()])</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(338857, 33)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span><span class="p">[</span><span class="s">'index'</span><span class="p">]</span> <span class="o">=</span> <span class="n">prev_appln</span><span class="p">.</span><span class="n">index</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">prev_appln</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_PREV'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">prev_appln</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>NAME_CONTRACT_TYPE</th>
      <th>AMT_ANNUITY</th>
      <th>AMT_APPLICATION</th>
      <th>AMT_CREDIT</th>
      <th>AMT_GOODS_PRICE</th>
      <th>WEEKDAY_APPR_PROCESS_START</th>
      <th>HOUR_APPR_PROCESS_START</th>
      <th>FLAG_LAST_APPL_PER_CONTRACT</th>
      <th>NFLAG_LAST_APPL_IN_DAY</th>
      <th>NAME_CASH_LOAN_PURPOSE</th>
      <th>NAME_CONTRACT_STATUS</th>
      <th>DAYS_DECISION</th>
      <th>NAME_PAYMENT_TYPE</th>
      <th>CODE_REJECT_REASON</th>
      <th>NAME_TYPE_SUITE</th>
      <th>NAME_CLIENT_TYPE</th>
      <th>NAME_GOODS_CATEGORY</th>
      <th>NAME_PORTFOLIO</th>
      <th>NAME_PRODUCT_TYPE</th>
      <th>CHANNEL_TYPE</th>
      <th>SELLERPLACE_AREA</th>
      <th>NAME_SELLER_INDUSTRY</th>
      <th>CNT_PAYMENT</th>
      <th>NAME_YIELD_GROUP</th>
      <th>PRODUCT_COMBINATION</th>
      <th>DAYS_FIRST_DRAWING</th>
      <th>DAYS_FIRST_DUE</th>
      <th>DAYS_LAST_DUE_1ST_VERSION</th>
      <th>DAYS_LAST_DUE</th>
      <th>DAYS_TERMINATION</th>
      <th>NFLAG_INSURED_ON_APPROVAL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100001</th>
      <td>100001</td>
      <td>Consumer loans</td>
      <td>3951.000000</td>
      <td>24835.500000</td>
      <td>23787.000000</td>
      <td>24835.500000</td>
      <td>FRIDAY</td>
      <td>13</td>
      <td>Y</td>
      <td>1</td>
      <td>XAP</td>
      <td>Approved</td>
      <td>-1740</td>
      <td>Cash through the bank</td>
      <td>XAP</td>
      <td>Family</td>
      <td>Refreshed</td>
      <td>Mobile</td>
      <td>POS</td>
      <td>XNA</td>
      <td>Country-wide</td>
      <td>23</td>
      <td>Connectivity</td>
      <td>8.000000</td>
      <td>high</td>
      <td>POS mobile with interest</td>
      <td>365243.000000</td>
      <td>-1709.000000</td>
      <td>-1499.000000</td>
      <td>-1619.000000</td>
      <td>-1612.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>100002</th>
      <td>100002</td>
      <td>Consumer loans</td>
      <td>9251.775000</td>
      <td>179055.000000</td>
      <td>179055.000000</td>
      <td>179055.000000</td>
      <td>SATURDAY</td>
      <td>9</td>
      <td>Y</td>
      <td>1</td>
      <td>XAP</td>
      <td>Approved</td>
      <td>-606</td>
      <td>XNA</td>
      <td>XAP</td>
      <td>Unaccompanied</td>
      <td>New</td>
      <td>Vehicles</td>
      <td>POS</td>
      <td>XNA</td>
      <td>Stone</td>
      <td>500</td>
      <td>Auto technology</td>
      <td>24.000000</td>
      <td>low_normal</td>
      <td>POS other with interest</td>
      <td>365243.000000</td>
      <td>-565.000000</td>
      <td>125.000000</td>
      <td>-25.000000</td>
      <td>-17.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>100003</th>
      <td>100003</td>
      <td>Cash loans</td>
      <td>98356.995000</td>
      <td>900000.000000</td>
      <td>1035882.000000</td>
      <td>900000.000000</td>
      <td>FRIDAY</td>
      <td>12</td>
      <td>Y</td>
      <td>1</td>
      <td>XNA</td>
      <td>Approved</td>
      <td>-746</td>
      <td>XNA</td>
      <td>XAP</td>
      <td>Unaccompanied</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>x-sell</td>
      <td>Credit and cash offices</td>
      <td>-1</td>
      <td>XNA</td>
      <td>12.000000</td>
      <td>low_normal</td>
      <td>Cash X-Sell: low</td>
      <td>365243.000000</td>
      <td>-716.000000</td>
      <td>-386.000000</td>
      <td>-536.000000</td>
      <td>-527.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>100004</th>
      <td>100004</td>
      <td>Consumer loans</td>
      <td>5357.250000</td>
      <td>24282.000000</td>
      <td>20106.000000</td>
      <td>24282.000000</td>
      <td>FRIDAY</td>
      <td>5</td>
      <td>Y</td>
      <td>1</td>
      <td>XAP</td>
      <td>Approved</td>
      <td>-815</td>
      <td>Cash through the bank</td>
      <td>XAP</td>
      <td>Unaccompanied</td>
      <td>New</td>
      <td>Mobile</td>
      <td>POS</td>
      <td>XNA</td>
      <td>Regional / Local</td>
      <td>30</td>
      <td>Connectivity</td>
      <td>4.000000</td>
      <td>middle</td>
      <td>POS mobile without interest</td>
      <td>365243.000000</td>
      <td>-784.000000</td>
      <td>-694.000000</td>
      <td>-724.000000</td>
      <td>-714.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>100005</th>
      <td>100005</td>
      <td>Cash loans</td>
      <td>15955.120659</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>227847.279283</td>
      <td>FRIDAY</td>
      <td>10</td>
      <td>Y</td>
      <td>1</td>
      <td>XNA</td>
      <td>Canceled</td>
      <td>-315</td>
      <td>XNA</td>
      <td>XAP</td>
      <td>Unaccompanied</td>
      <td>Repeater</td>
      <td>XNA</td>
      <td>XNA</td>
      <td>XNA</td>
      <td>Credit and cash offices</td>
      <td>-1</td>
      <td>XNA</td>
      <td>16.054082</td>
      <td>XNA</td>
      <td>Cash</td>
      <td>342209.855039</td>
      <td>13826.269337</td>
      <td>33767.774054</td>
      <td>76582.403064</td>
      <td>81992.343838</td>
      <td>0.332570</td>
    </tr>
  </tbody>
</table>
</div>

<p>The previous_application data set is now clean with no missing values and ready to be merged with the other datasets.
___</p>

<h3 id="step-5-loading-and-preparing-application_train-dataset">STEP 5: Loading and preparing <em>Application_train</em> dataset</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Loading the dataset
</span>
<span class="n">app_train</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/application_train.csv'</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">head</span><span class="p">().</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SK_ID_CURR</th>
      <td>100002</td>
      <td>100003</td>
      <td>100004</td>
      <td>100006</td>
      <td>100007</td>
    </tr>
    <tr>
      <th>TARGET</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>NAME_CONTRACT_TYPE</th>
      <td>Cash loans</td>
      <td>Cash loans</td>
      <td>Revolving loans</td>
      <td>Cash loans</td>
      <td>Cash loans</td>
    </tr>
    <tr>
      <th>CODE_GENDER</th>
      <td>M</td>
      <td>F</td>
      <td>M</td>
      <td>F</td>
      <td>M</td>
    </tr>
    <tr>
      <th>FLAG_OWN_CAR</th>
      <td>N</td>
      <td>N</td>
      <td>Y</td>
      <td>N</td>
      <td>N</td>
    </tr>
    <tr>
      <th>FLAG_OWN_REALTY</th>
      <td>Y</td>
      <td>N</td>
      <td>Y</td>
      <td>Y</td>
      <td>Y</td>
    </tr>
    <tr>
      <th>CNT_CHILDREN</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>AMT_INCOME_TOTAL</th>
      <td>202500.000000</td>
      <td>270000.000000</td>
      <td>67500.000000</td>
      <td>135000.000000</td>
      <td>121500.000000</td>
    </tr>
    <tr>
      <th>AMT_CREDIT</th>
      <td>406597.500000</td>
      <td>1293502.500000</td>
      <td>135000.000000</td>
      <td>312682.500000</td>
      <td>513000.000000</td>
    </tr>
    <tr>
      <th>AMT_ANNUITY</th>
      <td>24700.500000</td>
      <td>35698.500000</td>
      <td>6750.000000</td>
      <td>29686.500000</td>
      <td>21865.500000</td>
    </tr>
    <tr>
      <th>AMT_GOODS_PRICE</th>
      <td>351000.000000</td>
      <td>1129500.000000</td>
      <td>135000.000000</td>
      <td>297000.000000</td>
      <td>513000.000000</td>
    </tr>
    <tr>
      <th>NAME_TYPE_SUITE</th>
      <td>Unaccompanied</td>
      <td>Family</td>
      <td>Unaccompanied</td>
      <td>Unaccompanied</td>
      <td>Unaccompanied</td>
    </tr>
    <tr>
      <th>NAME_INCOME_TYPE</th>
      <td>Working</td>
      <td>State servant</td>
      <td>Working</td>
      <td>Working</td>
      <td>Working</td>
    </tr>
    <tr>
      <th>NAME_EDUCATION_TYPE</th>
      <td>Secondary / secondary special</td>
      <td>Higher education</td>
      <td>Secondary / secondary special</td>
      <td>Secondary / secondary special</td>
      <td>Secondary / secondary special</td>
    </tr>
    <tr>
      <th>NAME_FAMILY_STATUS</th>
      <td>Single / not married</td>
      <td>Married</td>
      <td>Single / not married</td>
      <td>Civil marriage</td>
      <td>Single / not married</td>
    </tr>
    <tr>
      <th>NAME_HOUSING_TYPE</th>
      <td>House / apartment</td>
      <td>House / apartment</td>
      <td>House / apartment</td>
      <td>House / apartment</td>
      <td>House / apartment</td>
    </tr>
    <tr>
      <th>REGION_POPULATION_RELATIVE</th>
      <td>0.018801</td>
      <td>0.003541</td>
      <td>0.010032</td>
      <td>0.008019</td>
      <td>0.028663</td>
    </tr>
    <tr>
      <th>DAYS_BIRTH</th>
      <td>-9461</td>
      <td>-16765</td>
      <td>-19046</td>
      <td>-19005</td>
      <td>-19932</td>
    </tr>
    <tr>
      <th>DAYS_EMPLOYED</th>
      <td>-637</td>
      <td>-1188</td>
      <td>-225</td>
      <td>-3039</td>
      <td>-3038</td>
    </tr>
    <tr>
      <th>DAYS_REGISTRATION</th>
      <td>-3648.000000</td>
      <td>-1186.000000</td>
      <td>-4260.000000</td>
      <td>-9833.000000</td>
      <td>-4311.000000</td>
    </tr>
    <tr>
      <th>DAYS_ID_PUBLISH</th>
      <td>-2120</td>
      <td>-291</td>
      <td>-2531</td>
      <td>-2437</td>
      <td>-3458</td>
    </tr>
    <tr>
      <th>OWN_CAR_AGE</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>26.000000</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLAG_MOBIL</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>FLAG_EMP_PHONE</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>FLAG_WORK_PHONE</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_CONT_MOBILE</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>FLAG_PHONE</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_EMAIL</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>OCCUPATION_TYPE</th>
      <td>Laborers</td>
      <td>Core staff</td>
      <td>Laborers</td>
      <td>Laborers</td>
      <td>Core staff</td>
    </tr>
    <tr>
      <th>CNT_FAM_MEMBERS</th>
      <td>1.000000</td>
      <td>2.000000</td>
      <td>1.000000</td>
      <td>2.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>REGION_RATING_CLIENT</th>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>REGION_RATING_CLIENT_W_CITY</th>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>WEEKDAY_APPR_PROCESS_START</th>
      <td>WEDNESDAY</td>
      <td>MONDAY</td>
      <td>MONDAY</td>
      <td>WEDNESDAY</td>
      <td>THURSDAY</td>
    </tr>
    <tr>
      <th>HOUR_APPR_PROCESS_START</th>
      <td>10</td>
      <td>11</td>
      <td>9</td>
      <td>17</td>
      <td>11</td>
    </tr>
    <tr>
      <th>REG_REGION_NOT_LIVE_REGION</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>REG_REGION_NOT_WORK_REGION</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>LIVE_REGION_NOT_WORK_REGION</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>REG_CITY_NOT_LIVE_CITY</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>REG_CITY_NOT_WORK_CITY</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>LIVE_CITY_NOT_WORK_CITY</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>ORGANIZATION_TYPE</th>
      <td>Business Entity Type 3</td>
      <td>School</td>
      <td>Government</td>
      <td>Business Entity Type 3</td>
      <td>Religion</td>
    </tr>
    <tr>
      <th>EXT_SOURCE_1</th>
      <td>0.083037</td>
      <td>0.311267</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>EXT_SOURCE_2</th>
      <td>0.262949</td>
      <td>0.622246</td>
      <td>0.555912</td>
      <td>0.650442</td>
      <td>0.322738</td>
    </tr>
    <tr>
      <th>EXT_SOURCE_3</th>
      <td>0.139376</td>
      <td>NaN</td>
      <td>0.729567</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>APARTMENTS_AVG</th>
      <td>0.024700</td>
      <td>0.095900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>BASEMENTAREA_AVG</th>
      <td>0.036900</td>
      <td>0.052900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BEGINEXPLUATATION_AVG</th>
      <td>0.972200</td>
      <td>0.985100</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BUILD_AVG</th>
      <td>0.619200</td>
      <td>0.796000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>COMMONAREA_AVG</th>
      <td>0.014300</td>
      <td>0.060500</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ELEVATORS_AVG</th>
      <td>0.000000</td>
      <td>0.080000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ENTRANCES_AVG</th>
      <td>0.069000</td>
      <td>0.034500</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMAX_AVG</th>
      <td>0.083300</td>
      <td>0.291700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMIN_AVG</th>
      <td>0.125000</td>
      <td>0.333300</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LANDAREA_AVG</th>
      <td>0.036900</td>
      <td>0.013000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAPARTMENTS_AVG</th>
      <td>0.020200</td>
      <td>0.077300</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAREA_AVG</th>
      <td>0.019000</td>
      <td>0.054900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAPARTMENTS_AVG</th>
      <td>0.000000</td>
      <td>0.003900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAREA_AVG</th>
      <td>0.000000</td>
      <td>0.009800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>APARTMENTS_MODE</th>
      <td>0.025200</td>
      <td>0.092400</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>BASEMENTAREA_MODE</th>
      <td>0.038300</td>
      <td>0.053800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BEGINEXPLUATATION_MODE</th>
      <td>0.972200</td>
      <td>0.985100</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BUILD_MODE</th>
      <td>0.634100</td>
      <td>0.804000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>COMMONAREA_MODE</th>
      <td>0.014400</td>
      <td>0.049700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ELEVATORS_MODE</th>
      <td>0.000000</td>
      <td>0.080600</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ENTRANCES_MODE</th>
      <td>0.069000</td>
      <td>0.034500</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMAX_MODE</th>
      <td>0.083300</td>
      <td>0.291700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMIN_MODE</th>
      <td>0.125000</td>
      <td>0.333300</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LANDAREA_MODE</th>
      <td>0.037700</td>
      <td>0.012800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAPARTMENTS_MODE</th>
      <td>0.022000</td>
      <td>0.079000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAREA_MODE</th>
      <td>0.019800</td>
      <td>0.055400</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAPARTMENTS_MODE</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAREA_MODE</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>APARTMENTS_MEDI</th>
      <td>0.025000</td>
      <td>0.096800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>BASEMENTAREA_MEDI</th>
      <td>0.036900</td>
      <td>0.052900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BEGINEXPLUATATION_MEDI</th>
      <td>0.972200</td>
      <td>0.985100</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YEARS_BUILD_MEDI</th>
      <td>0.624300</td>
      <td>0.798700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>COMMONAREA_MEDI</th>
      <td>0.014400</td>
      <td>0.060800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ELEVATORS_MEDI</th>
      <td>0.000000</td>
      <td>0.080000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>ENTRANCES_MEDI</th>
      <td>0.069000</td>
      <td>0.034500</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMAX_MEDI</th>
      <td>0.083300</td>
      <td>0.291700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FLOORSMIN_MEDI</th>
      <td>0.125000</td>
      <td>0.333300</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LANDAREA_MEDI</th>
      <td>0.037500</td>
      <td>0.013200</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAPARTMENTS_MEDI</th>
      <td>0.020500</td>
      <td>0.078700</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>LIVINGAREA_MEDI</th>
      <td>0.019300</td>
      <td>0.055800</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAPARTMENTS_MEDI</th>
      <td>0.000000</td>
      <td>0.003900</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>NONLIVINGAREA_MEDI</th>
      <td>0.000000</td>
      <td>0.010000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>FONDKAPREMONT_MODE</th>
      <td>reg oper account</td>
      <td>reg oper account</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>HOUSETYPE_MODE</th>
      <td>block of flats</td>
      <td>block of flats</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>TOTALAREA_MODE</th>
      <td>0.014900</td>
      <td>0.071400</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>WALLSMATERIAL_MODE</th>
      <td>Stone, brick</td>
      <td>Block</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>EMERGENCYSTATE_MODE</th>
      <td>No</td>
      <td>No</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>
      <td>2.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>
      <td>2.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>
      <td>2.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>
      <td>2.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>DAYS_LAST_PHONE_CHANGE</th>
      <td>-1134.000000</td>
      <td>-828.000000</td>
      <td>-815.000000</td>
      <td>-617.000000</td>
      <td>-1106.000000</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_2</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_3</th>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_4</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_5</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_7</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_9</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_10</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_11</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_12</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_15</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_16</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_17</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_18</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_19</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_20</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>FLAG_DOCUMENT_21</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_MON</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>NaN</td>
      <td>0.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dataset info
</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 307511 entries, 0 to 307510
Columns: 122 entries, SK_ID_CURR to AMT_REQ_CREDIT_BUREAU_YEAR
dtypes: float64(65), int64(41), object(16)
memory usage: 286.2+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#checking if the dataset has missing values
</span><span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                           0
TARGET                               0
NAME_CONTRACT_TYPE                   0
CODE_GENDER                          0
FLAG_OWN_CAR                         0
FLAG_OWN_REALTY                      0
CNT_CHILDREN                         0
AMT_INCOME_TOTAL                     0
AMT_CREDIT                           0
AMT_ANNUITY                         12
AMT_GOODS_PRICE                    278
NAME_TYPE_SUITE                   1292
NAME_INCOME_TYPE                     0
NAME_EDUCATION_TYPE                  0
NAME_FAMILY_STATUS                   0
NAME_HOUSING_TYPE                    0
REGION_POPULATION_RELATIVE           0
DAYS_BIRTH                           0
DAYS_EMPLOYED                        0
DAYS_REGISTRATION                    0
DAYS_ID_PUBLISH                      0
OWN_CAR_AGE                     202929
FLAG_MOBIL                           0
FLAG_EMP_PHONE                       0
FLAG_WORK_PHONE                      0
FLAG_CONT_MOBILE                     0
FLAG_PHONE                           0
FLAG_EMAIL                           0
OCCUPATION_TYPE                  96391
CNT_FAM_MEMBERS                      2
REGION_RATING_CLIENT                 0
REGION_RATING_CLIENT_W_CITY          0
WEEKDAY_APPR_PROCESS_START           0
HOUR_APPR_PROCESS_START              0
REG_REGION_NOT_LIVE_REGION           0
REG_REGION_NOT_WORK_REGION           0
LIVE_REGION_NOT_WORK_REGION          0
REG_CITY_NOT_LIVE_CITY               0
REG_CITY_NOT_WORK_CITY               0
LIVE_CITY_NOT_WORK_CITY              0
ORGANIZATION_TYPE                    0
EXT_SOURCE_1                    173378
EXT_SOURCE_2                       660
EXT_SOURCE_3                     60965
APARTMENTS_AVG                  156061
BASEMENTAREA_AVG                179943
YEARS_BEGINEXPLUATATION_AVG     150007
YEARS_BUILD_AVG                 204488
COMMONAREA_AVG                  214865
ELEVATORS_AVG                   163891
ENTRANCES_AVG                   154828
FLOORSMAX_AVG                   153020
FLOORSMIN_AVG                   208642
LANDAREA_AVG                    182590
LIVINGAPARTMENTS_AVG            210199
LIVINGAREA_AVG                  154350
NONLIVINGAPARTMENTS_AVG         213514
NONLIVINGAREA_AVG               169682
APARTMENTS_MODE                 156061
BASEMENTAREA_MODE               179943
YEARS_BEGINEXPLUATATION_MODE    150007
YEARS_BUILD_MODE                204488
COMMONAREA_MODE                 214865
ELEVATORS_MODE                  163891
ENTRANCES_MODE                  154828
FLOORSMAX_MODE                  153020
FLOORSMIN_MODE                  208642
LANDAREA_MODE                   182590
LIVINGAPARTMENTS_MODE           210199
LIVINGAREA_MODE                 154350
NONLIVINGAPARTMENTS_MODE        213514
NONLIVINGAREA_MODE              169682
APARTMENTS_MEDI                 156061
BASEMENTAREA_MEDI               179943
YEARS_BEGINEXPLUATATION_MEDI    150007
YEARS_BUILD_MEDI                204488
COMMONAREA_MEDI                 214865
ELEVATORS_MEDI                  163891
ENTRANCES_MEDI                  154828
FLOORSMAX_MEDI                  153020
FLOORSMIN_MEDI                  208642
LANDAREA_MEDI                   182590
LIVINGAPARTMENTS_MEDI           210199
LIVINGAREA_MEDI                 154350
NONLIVINGAPARTMENTS_MEDI        213514
NONLIVINGAREA_MEDI              169682
FONDKAPREMONT_MODE              210295
HOUSETYPE_MODE                  154297
TOTALAREA_MODE                  148431
WALLSMATERIAL_MODE              156341
EMERGENCYSTATE_MODE             145755
OBS_30_CNT_SOCIAL_CIRCLE          1021
DEF_30_CNT_SOCIAL_CIRCLE          1021
OBS_60_CNT_SOCIAL_CIRCLE          1021
DEF_60_CNT_SOCIAL_CIRCLE          1021
DAYS_LAST_PHONE_CHANGE               1
FLAG_DOCUMENT_2                      0
FLAG_DOCUMENT_3                      0
FLAG_DOCUMENT_4                      0
FLAG_DOCUMENT_5                      0
FLAG_DOCUMENT_6                      0
FLAG_DOCUMENT_7                      0
FLAG_DOCUMENT_8                      0
FLAG_DOCUMENT_9                      0
FLAG_DOCUMENT_10                     0
FLAG_DOCUMENT_11                     0
FLAG_DOCUMENT_12                     0
FLAG_DOCUMENT_13                     0
FLAG_DOCUMENT_14                     0
FLAG_DOCUMENT_15                     0
FLAG_DOCUMENT_16                     0
FLAG_DOCUMENT_17                     0
FLAG_DOCUMENT_18                     0
FLAG_DOCUMENT_19                     0
FLAG_DOCUMENT_20                     0
FLAG_DOCUMENT_21                     0
AMT_REQ_CREDIT_BUREAU_HOUR       41519
AMT_REQ_CREDIT_BUREAU_DAY        41519
AMT_REQ_CREDIT_BUREAU_WEEK       41519
AMT_REQ_CREDIT_BUREAU_MON        41519
AMT_REQ_CREDIT_BUREAU_QRT        41519
AMT_REQ_CREDIT_BUREAU_YEAR       41519
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Finding the % of missing values in each column
</span>
<span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0.000000
TARGET                          0.000000
NAME_CONTRACT_TYPE              0.000000
CODE_GENDER                     0.000000
FLAG_OWN_CAR                    0.000000
FLAG_OWN_REALTY                 0.000000
CNT_CHILDREN                    0.000000
AMT_INCOME_TOTAL                0.000000
AMT_CREDIT                      0.000000
AMT_ANNUITY                     0.000000
AMT_GOODS_PRICE                 0.090000
NAME_TYPE_SUITE                 0.420000
NAME_INCOME_TYPE                0.000000
NAME_EDUCATION_TYPE             0.000000
NAME_FAMILY_STATUS              0.000000
NAME_HOUSING_TYPE               0.000000
REGION_POPULATION_RELATIVE      0.000000
DAYS_BIRTH                      0.000000
DAYS_EMPLOYED                   0.000000
DAYS_REGISTRATION               0.000000
DAYS_ID_PUBLISH                 0.000000
OWN_CAR_AGE                    65.990000
FLAG_MOBIL                      0.000000
FLAG_EMP_PHONE                  0.000000
FLAG_WORK_PHONE                 0.000000
FLAG_CONT_MOBILE                0.000000
FLAG_PHONE                      0.000000
FLAG_EMAIL                      0.000000
OCCUPATION_TYPE                31.350000
CNT_FAM_MEMBERS                 0.000000
REGION_RATING_CLIENT            0.000000
REGION_RATING_CLIENT_W_CITY     0.000000
WEEKDAY_APPR_PROCESS_START      0.000000
HOUR_APPR_PROCESS_START         0.000000
REG_REGION_NOT_LIVE_REGION      0.000000
REG_REGION_NOT_WORK_REGION      0.000000
LIVE_REGION_NOT_WORK_REGION     0.000000
REG_CITY_NOT_LIVE_CITY          0.000000
REG_CITY_NOT_WORK_CITY          0.000000
LIVE_CITY_NOT_WORK_CITY         0.000000
ORGANIZATION_TYPE               0.000000
EXT_SOURCE_1                   56.380000
EXT_SOURCE_2                    0.210000
EXT_SOURCE_3                   19.830000
APARTMENTS_AVG                 50.750000
BASEMENTAREA_AVG               58.520000
YEARS_BEGINEXPLUATATION_AVG    48.780000
YEARS_BUILD_AVG                66.500000
COMMONAREA_AVG                 69.870000
ELEVATORS_AVG                  53.300000
ENTRANCES_AVG                  50.350000
FLOORSMAX_AVG                  49.760000
FLOORSMIN_AVG                  67.850000
LANDAREA_AVG                   59.380000
LIVINGAPARTMENTS_AVG           68.350000
LIVINGAREA_AVG                 50.190000
NONLIVINGAPARTMENTS_AVG        69.430000
NONLIVINGAREA_AVG              55.180000
APARTMENTS_MODE                50.750000
BASEMENTAREA_MODE              58.520000
YEARS_BEGINEXPLUATATION_MODE   48.780000
YEARS_BUILD_MODE               66.500000
COMMONAREA_MODE                69.870000
ELEVATORS_MODE                 53.300000
ENTRANCES_MODE                 50.350000
FLOORSMAX_MODE                 49.760000
FLOORSMIN_MODE                 67.850000
LANDAREA_MODE                  59.380000
LIVINGAPARTMENTS_MODE          68.350000
LIVINGAREA_MODE                50.190000
NONLIVINGAPARTMENTS_MODE       69.430000
NONLIVINGAREA_MODE             55.180000
APARTMENTS_MEDI                50.750000
BASEMENTAREA_MEDI              58.520000
YEARS_BEGINEXPLUATATION_MEDI   48.780000
YEARS_BUILD_MEDI               66.500000
COMMONAREA_MEDI                69.870000
ELEVATORS_MEDI                 53.300000
ENTRANCES_MEDI                 50.350000
FLOORSMAX_MEDI                 49.760000
FLOORSMIN_MEDI                 67.850000
LANDAREA_MEDI                  59.380000
LIVINGAPARTMENTS_MEDI          68.350000
LIVINGAREA_MEDI                50.190000
NONLIVINGAPARTMENTS_MEDI       69.430000
NONLIVINGAREA_MEDI             55.180000
FONDKAPREMONT_MODE             68.390000
HOUSETYPE_MODE                 50.180000
TOTALAREA_MODE                 48.270000
WALLSMATERIAL_MODE             50.840000
EMERGENCYSTATE_MODE            47.400000
OBS_30_CNT_SOCIAL_CIRCLE        0.330000
DEF_30_CNT_SOCIAL_CIRCLE        0.330000
OBS_60_CNT_SOCIAL_CIRCLE        0.330000
DEF_60_CNT_SOCIAL_CIRCLE        0.330000
DAYS_LAST_PHONE_CHANGE          0.000000
FLAG_DOCUMENT_2                 0.000000
FLAG_DOCUMENT_3                 0.000000
FLAG_DOCUMENT_4                 0.000000
FLAG_DOCUMENT_5                 0.000000
FLAG_DOCUMENT_6                 0.000000
FLAG_DOCUMENT_7                 0.000000
FLAG_DOCUMENT_8                 0.000000
FLAG_DOCUMENT_9                 0.000000
FLAG_DOCUMENT_10                0.000000
FLAG_DOCUMENT_11                0.000000
FLAG_DOCUMENT_12                0.000000
FLAG_DOCUMENT_13                0.000000
FLAG_DOCUMENT_14                0.000000
FLAG_DOCUMENT_15                0.000000
FLAG_DOCUMENT_16                0.000000
FLAG_DOCUMENT_17                0.000000
FLAG_DOCUMENT_18                0.000000
FLAG_DOCUMENT_19                0.000000
FLAG_DOCUMENT_20                0.000000
FLAG_DOCUMENT_21                0.000000
AMT_REQ_CREDIT_BUREAU_HOUR     13.500000
AMT_REQ_CREDIT_BUREAU_DAY      13.500000
AMT_REQ_CREDIT_BUREAU_WEEK     13.500000
AMT_REQ_CREDIT_BUREAU_MON      13.500000
AMT_REQ_CREDIT_BUREAU_QRT      13.500000
AMT_REQ_CREDIT_BUREAU_YEAR     13.500000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Assigning NULL percentage value to a variable
</span><span class="n">app_null</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># find columns with more than 50% missing values
</span><span class="n">column</span> <span class="o">=</span> <span class="n">app_null</span><span class="p">[</span><span class="n">app_null</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="p">].</span><span class="n">index</span> 

<span class="c1"># drop columns with high null percentage
</span><span class="n">app_train</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">column</span><span class="p">,</span><span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1">#check null percentage after dropping
</span><span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0.000000
TARGET                          0.000000
NAME_CONTRACT_TYPE              0.000000
CODE_GENDER                     0.000000
FLAG_OWN_CAR                    0.000000
FLAG_OWN_REALTY                 0.000000
CNT_CHILDREN                    0.000000
AMT_INCOME_TOTAL                0.000000
AMT_CREDIT                      0.000000
AMT_ANNUITY                     0.000000
AMT_GOODS_PRICE                 0.090000
NAME_TYPE_SUITE                 0.420000
NAME_INCOME_TYPE                0.000000
NAME_EDUCATION_TYPE             0.000000
NAME_FAMILY_STATUS              0.000000
NAME_HOUSING_TYPE               0.000000
REGION_POPULATION_RELATIVE      0.000000
DAYS_BIRTH                      0.000000
DAYS_EMPLOYED                   0.000000
DAYS_REGISTRATION               0.000000
DAYS_ID_PUBLISH                 0.000000
FLAG_MOBIL                      0.000000
FLAG_EMP_PHONE                  0.000000
FLAG_WORK_PHONE                 0.000000
FLAG_CONT_MOBILE                0.000000
FLAG_PHONE                      0.000000
FLAG_EMAIL                      0.000000
OCCUPATION_TYPE                31.350000
CNT_FAM_MEMBERS                 0.000000
REGION_RATING_CLIENT            0.000000
REGION_RATING_CLIENT_W_CITY     0.000000
WEEKDAY_APPR_PROCESS_START      0.000000
HOUR_APPR_PROCESS_START         0.000000
REG_REGION_NOT_LIVE_REGION      0.000000
REG_REGION_NOT_WORK_REGION      0.000000
LIVE_REGION_NOT_WORK_REGION     0.000000
REG_CITY_NOT_LIVE_CITY          0.000000
REG_CITY_NOT_WORK_CITY          0.000000
LIVE_CITY_NOT_WORK_CITY         0.000000
ORGANIZATION_TYPE               0.000000
EXT_SOURCE_2                    0.210000
EXT_SOURCE_3                   19.830000
YEARS_BEGINEXPLUATATION_AVG    48.780000
FLOORSMAX_AVG                  49.760000
YEARS_BEGINEXPLUATATION_MODE   48.780000
FLOORSMAX_MODE                 49.760000
YEARS_BEGINEXPLUATATION_MEDI   48.780000
FLOORSMAX_MEDI                 49.760000
TOTALAREA_MODE                 48.270000
EMERGENCYSTATE_MODE            47.400000
OBS_30_CNT_SOCIAL_CIRCLE        0.330000
DEF_30_CNT_SOCIAL_CIRCLE        0.330000
OBS_60_CNT_SOCIAL_CIRCLE        0.330000
DEF_60_CNT_SOCIAL_CIRCLE        0.330000
DAYS_LAST_PHONE_CHANGE          0.000000
FLAG_DOCUMENT_2                 0.000000
FLAG_DOCUMENT_3                 0.000000
FLAG_DOCUMENT_4                 0.000000
FLAG_DOCUMENT_5                 0.000000
FLAG_DOCUMENT_6                 0.000000
FLAG_DOCUMENT_7                 0.000000
FLAG_DOCUMENT_8                 0.000000
FLAG_DOCUMENT_9                 0.000000
FLAG_DOCUMENT_10                0.000000
FLAG_DOCUMENT_11                0.000000
FLAG_DOCUMENT_12                0.000000
FLAG_DOCUMENT_13                0.000000
FLAG_DOCUMENT_14                0.000000
FLAG_DOCUMENT_15                0.000000
FLAG_DOCUMENT_16                0.000000
FLAG_DOCUMENT_17                0.000000
FLAG_DOCUMENT_18                0.000000
FLAG_DOCUMENT_19                0.000000
FLAG_DOCUMENT_20                0.000000
FLAG_DOCUMENT_21                0.000000
AMT_REQ_CREDIT_BUREAU_HOUR     13.500000
AMT_REQ_CREDIT_BUREAU_DAY      13.500000
AMT_REQ_CREDIT_BUREAU_WEEK     13.500000
AMT_REQ_CREDIT_BUREAU_MON      13.500000
AMT_REQ_CREDIT_BUREAU_QRT      13.500000
AMT_REQ_CREDIT_BUREAU_YEAR     13.500000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># finding the shape of the dataset after dropping the columns with more than 50% missing values
</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">shape</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 81)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">41 columns were dropped from the dataset (they had &gt; 50% of missing values).</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">app_train</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 307511 entries, 0 to 307510
Data columns (total 81 columns):
 #   Column                        Non-Null Count   Dtype  
---  ------                        --------------   -----  
 0   SK_ID_CURR                    307511 non-null  int64  
 1   TARGET                        307511 non-null  int64  
 2   NAME_CONTRACT_TYPE            307511 non-null  object 
 3   CODE_GENDER                   307511 non-null  object 
 4   FLAG_OWN_CAR                  307511 non-null  object 
 5   FLAG_OWN_REALTY               307511 non-null  object 
 6   CNT_CHILDREN                  307511 non-null  int64  
 7   AMT_INCOME_TOTAL              307511 non-null  float64
 8   AMT_CREDIT                    307511 non-null  float64
 9   AMT_ANNUITY                   307499 non-null  float64
 10  AMT_GOODS_PRICE               307233 non-null  float64
 11  NAME_TYPE_SUITE               306219 non-null  object 
 12  NAME_INCOME_TYPE              307511 non-null  object 
 13  NAME_EDUCATION_TYPE           307511 non-null  object 
 14  NAME_FAMILY_STATUS            307511 non-null  object 
 15  NAME_HOUSING_TYPE             307511 non-null  object 
 16  REGION_POPULATION_RELATIVE    307511 non-null  float64
 17  DAYS_BIRTH                    307511 non-null  int64  
 18  DAYS_EMPLOYED                 307511 non-null  int64  
 19  DAYS_REGISTRATION             307511 non-null  float64
 20  DAYS_ID_PUBLISH               307511 non-null  int64  
 21  FLAG_MOBIL                    307511 non-null  int64  
 22  FLAG_EMP_PHONE                307511 non-null  int64  
 23  FLAG_WORK_PHONE               307511 non-null  int64  
 24  FLAG_CONT_MOBILE              307511 non-null  int64  
 25  FLAG_PHONE                    307511 non-null  int64  
 26  FLAG_EMAIL                    307511 non-null  int64  
 27  OCCUPATION_TYPE               211120 non-null  object 
 28  CNT_FAM_MEMBERS               307509 non-null  float64
 29  REGION_RATING_CLIENT          307511 non-null  int64  
 30  REGION_RATING_CLIENT_W_CITY   307511 non-null  int64  
 31  WEEKDAY_APPR_PROCESS_START    307511 non-null  object 
 32  HOUR_APPR_PROCESS_START       307511 non-null  int64  
 33  REG_REGION_NOT_LIVE_REGION    307511 non-null  int64  
 34  REG_REGION_NOT_WORK_REGION    307511 non-null  int64  
 35  LIVE_REGION_NOT_WORK_REGION   307511 non-null  int64  
 36  REG_CITY_NOT_LIVE_CITY        307511 non-null  int64  
 37  REG_CITY_NOT_WORK_CITY        307511 non-null  int64  
 38  LIVE_CITY_NOT_WORK_CITY       307511 non-null  int64  
 39  ORGANIZATION_TYPE             307511 non-null  object 
 40  EXT_SOURCE_2                  306851 non-null  float64
 41  EXT_SOURCE_3                  246546 non-null  float64
 42  YEARS_BEGINEXPLUATATION_AVG   157504 non-null  float64
 43  FLOORSMAX_AVG                 154491 non-null  float64
 44  YEARS_BEGINEXPLUATATION_MODE  157504 non-null  float64
 45  FLOORSMAX_MODE                154491 non-null  float64
 46  YEARS_BEGINEXPLUATATION_MEDI  157504 non-null  float64
 47  FLOORSMAX_MEDI                154491 non-null  float64
 48  TOTALAREA_MODE                159080 non-null  float64
 49  EMERGENCYSTATE_MODE           161756 non-null  object 
 50  OBS_30_CNT_SOCIAL_CIRCLE      306490 non-null  float64
 51  DEF_30_CNT_SOCIAL_CIRCLE      306490 non-null  float64
 52  OBS_60_CNT_SOCIAL_CIRCLE      306490 non-null  float64
 53  DEF_60_CNT_SOCIAL_CIRCLE      306490 non-null  float64
 54  DAYS_LAST_PHONE_CHANGE        307510 non-null  float64
 55  FLAG_DOCUMENT_2               307511 non-null  int64  
 56  FLAG_DOCUMENT_3               307511 non-null  int64  
 57  FLAG_DOCUMENT_4               307511 non-null  int64  
 58  FLAG_DOCUMENT_5               307511 non-null  int64  
 59  FLAG_DOCUMENT_6               307511 non-null  int64  
 60  FLAG_DOCUMENT_7               307511 non-null  int64  
 61  FLAG_DOCUMENT_8               307511 non-null  int64  
 62  FLAG_DOCUMENT_9               307511 non-null  int64  
 63  FLAG_DOCUMENT_10              307511 non-null  int64  
 64  FLAG_DOCUMENT_11              307511 non-null  int64  
 65  FLAG_DOCUMENT_12              307511 non-null  int64  
 66  FLAG_DOCUMENT_13              307511 non-null  int64  
 67  FLAG_DOCUMENT_14              307511 non-null  int64  
 68  FLAG_DOCUMENT_15              307511 non-null  int64  
 69  FLAG_DOCUMENT_16              307511 non-null  int64  
 70  FLAG_DOCUMENT_17              307511 non-null  int64  
 71  FLAG_DOCUMENT_18              307511 non-null  int64  
 72  FLAG_DOCUMENT_19              307511 non-null  int64  
 73  FLAG_DOCUMENT_20              307511 non-null  int64  
 74  FLAG_DOCUMENT_21              307511 non-null  int64  
 75  AMT_REQ_CREDIT_BUREAU_HOUR    265992 non-null  float64
 76  AMT_REQ_CREDIT_BUREAU_DAY     265992 non-null  float64
 77  AMT_REQ_CREDIT_BUREAU_WEEK    265992 non-null  float64
 78  AMT_REQ_CREDIT_BUREAU_MON     265992 non-null  float64
 79  AMT_REQ_CREDIT_BUREAU_QRT     265992 non-null  float64
 80  AMT_REQ_CREDIT_BUREAU_YEAR    265992 non-null  float64
dtypes: float64(27), int64(41), object(13)
memory usage: 190.0+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#getting the list of columns that have missing values &gt; 0 
</span>
<span class="n">null_counts</span> <span class="o">=</span> <span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
<span class="n">null_app</span> <span class="o">=</span> <span class="n">null_counts</span><span class="p">[</span><span class="n">null_counts</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">null_app</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>AMT_ANNUITY                         12
AMT_GOODS_PRICE                    278
NAME_TYPE_SUITE                   1292
OCCUPATION_TYPE                  96391
CNT_FAM_MEMBERS                      2
EXT_SOURCE_2                       660
EXT_SOURCE_3                     60965
YEARS_BEGINEXPLUATATION_AVG     150007
FLOORSMAX_AVG                   153020
YEARS_BEGINEXPLUATATION_MODE    150007
FLOORSMAX_MODE                  153020
YEARS_BEGINEXPLUATATION_MEDI    150007
FLOORSMAX_MEDI                  153020
TOTALAREA_MODE                  148431
EMERGENCYSTATE_MODE             145755
OBS_30_CNT_SOCIAL_CIRCLE          1021
DEF_30_CNT_SOCIAL_CIRCLE          1021
OBS_60_CNT_SOCIAL_CIRCLE          1021
DEF_60_CNT_SOCIAL_CIRCLE          1021
DAYS_LAST_PHONE_CHANGE               1
AMT_REQ_CREDIT_BUREAU_HOUR       41519
AMT_REQ_CREDIT_BUREAU_DAY        41519
AMT_REQ_CREDIT_BUREAU_WEEK       41519
AMT_REQ_CREDIT_BUREAU_MON        41519
AMT_REQ_CREDIT_BUREAU_QRT        41519
AMT_REQ_CREDIT_BUREAU_YEAR       41519
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the above columns
</span>
<span class="c1"># For the numerical values, replacing the missing values with mean of their respective columns
</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_ANNUITY'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_ANNUITY'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'EXT_SOURCE_2'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'EXT_SOURCE_2'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'EXT_SOURCE_3'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'EXT_SOURCE_3'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_AVG'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_AVG'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_AVG'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_AVG'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_MODE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_MODE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_MODE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_MODE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_MEDI'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'YEARS_BEGINEXPLUATATION_MEDI'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_MEDI'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'FLOORSMAX_MEDI'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'TOTALAREA_MODE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'TOTALAREA_MODE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'OBS_30_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'OBS_30_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'DEF_30_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'DEF_30_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'OBS_60_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'OBS_60_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'DEF_60_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'DEF_60_CNT_SOCIAL_CIRCLE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'DAYS_LAST_PHONE_CHANGE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'DAYS_LAST_PHONE_CHANGE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_HOUR'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_HOUR'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_DAY'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_DAY'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_WEEK'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_WEEK'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_MON'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_MON'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_QRT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_QRT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_YEAR'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'AMT_REQ_CREDIT_BUREAU_YEAR'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># For the categorical values and the CNT_FAM_MEMBERS (no of family members), replacing the missing values with most frequently appearing values
</span>
<span class="c1"># Getting the mode of the categorical columns and for no of family members
</span><span class="k">print</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'OCCUPATION_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'EMERGENCYSTATE_MODE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'CNT_FAM_MEMBERS'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    Unaccompanied
dtype: object
0    Laborers
dtype: object
0    No
dtype: object
0   2.000000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the below with the most frequently appearing values from above 
</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">]),</span><span class="s">'NAME_TYPE_SUITE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Unaccompanied"</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'OCCUPATION_TYPE'</span><span class="p">]),</span><span class="s">'OCCUPATION_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Laborers"</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'EMERGENCYSTATE_MODE'</span><span class="p">]),</span><span class="s">'EMERGENCYSTATE_MODE'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">app_train</span><span class="p">[</span><span class="s">'CNT_FAM_MEMBERS'</span><span class="p">]),</span><span class="s">'CNT_FAM_MEMBERS'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># checking for the null values again to see if there are any more missing values
</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0
TARGET                          0
NAME_CONTRACT_TYPE              0
CODE_GENDER                     0
FLAG_OWN_CAR                    0
FLAG_OWN_REALTY                 0
CNT_CHILDREN                    0
AMT_INCOME_TOTAL                0
AMT_CREDIT                      0
AMT_ANNUITY                     0
AMT_GOODS_PRICE                 0
NAME_TYPE_SUITE                 0
NAME_INCOME_TYPE                0
NAME_EDUCATION_TYPE             0
NAME_FAMILY_STATUS              0
NAME_HOUSING_TYPE               0
REGION_POPULATION_RELATIVE      0
DAYS_BIRTH                      0
DAYS_EMPLOYED                   0
DAYS_REGISTRATION               0
DAYS_ID_PUBLISH                 0
FLAG_MOBIL                      0
FLAG_EMP_PHONE                  0
FLAG_WORK_PHONE                 0
FLAG_CONT_MOBILE                0
FLAG_PHONE                      0
FLAG_EMAIL                      0
OCCUPATION_TYPE                 0
CNT_FAM_MEMBERS                 0
REGION_RATING_CLIENT            0
REGION_RATING_CLIENT_W_CITY     0
WEEKDAY_APPR_PROCESS_START      0
HOUR_APPR_PROCESS_START         0
REG_REGION_NOT_LIVE_REGION      0
REG_REGION_NOT_WORK_REGION      0
LIVE_REGION_NOT_WORK_REGION     0
REG_CITY_NOT_LIVE_CITY          0
REG_CITY_NOT_WORK_CITY          0
LIVE_CITY_NOT_WORK_CITY         0
ORGANIZATION_TYPE               0
EXT_SOURCE_2                    0
EXT_SOURCE_3                    0
YEARS_BEGINEXPLUATATION_AVG     0
FLOORSMAX_AVG                   0
YEARS_BEGINEXPLUATATION_MODE    0
FLOORSMAX_MODE                  0
YEARS_BEGINEXPLUATATION_MEDI    0
FLOORSMAX_MEDI                  0
TOTALAREA_MODE                  0
EMERGENCYSTATE_MODE             0
OBS_30_CNT_SOCIAL_CIRCLE        0
DEF_30_CNT_SOCIAL_CIRCLE        0
OBS_60_CNT_SOCIAL_CIRCLE        0
DEF_60_CNT_SOCIAL_CIRCLE        0
DAYS_LAST_PHONE_CHANGE          0
FLAG_DOCUMENT_2                 0
FLAG_DOCUMENT_3                 0
FLAG_DOCUMENT_4                 0
FLAG_DOCUMENT_5                 0
FLAG_DOCUMENT_6                 0
FLAG_DOCUMENT_7                 0
FLAG_DOCUMENT_8                 0
FLAG_DOCUMENT_9                 0
FLAG_DOCUMENT_10                0
FLAG_DOCUMENT_11                0
FLAG_DOCUMENT_12                0
FLAG_DOCUMENT_13                0
FLAG_DOCUMENT_14                0
FLAG_DOCUMENT_15                0
FLAG_DOCUMENT_16                0
FLAG_DOCUMENT_17                0
FLAG_DOCUMENT_18                0
FLAG_DOCUMENT_19                0
FLAG_DOCUMENT_20                0
FLAG_DOCUMENT_21                0
AMT_REQ_CREDIT_BUREAU_HOUR      0
AMT_REQ_CREDIT_BUREAU_DAY       0
AMT_REQ_CREDIT_BUREAU_WEEK      0
AMT_REQ_CREDIT_BUREAU_MON       0
AMT_REQ_CREDIT_BUREAU_QRT       0
AMT_REQ_CREDIT_BUREAU_YEAR      0
dtype: int64
</code></pre></div></div>

<p><strong>Description of the columns in dataset for better understanding:</strong> <br /></p>

<ol>
  <li>SK_ID_CURR â†’ ID of loan in our sample.</li>
  <li>TARGET â†’ What the client actually paid on previous credit on this installment.</li>
  <li>NAME_CONTRACT_TYPE â†’ Relative to application date of current. application when was the expected termination of the previous application</li>
  <li>CODE_GENDER â†’ Gender of the client.</li>
  <li>FLAG_OWN_CAR â†’ Flag if the client owns a car.</li>
  <li>FLAG_OWN_REALTY â†’ Flag if client owns a house or flat.</li>
  <li>CNT_CHILDREN â†’ Number of children the client has.</li>
  <li>AMT_INCOME_TOTAL â†’ Income of the client.</li>
  <li>AMT_CREDIT â†’ Credit amount of the loan.</li>
  <li>AMT_ANNUITY â†’ Loan annuity.</li>
  <li>AMT_GOODS_PRICE â†’ For consumer loans it is the price of the goods for which the loan is given.</li>
  <li>NAME_TYPE_SUITE â†’ Who was accompanying client when he was applying for the loan.</li>
  <li>NAME_INCOME_TYPE â†’ Clients income type (businessman, working, maternity leave,â€¦).</li>
  <li>NAME_EDUCATION_TYPE â†’ Level of highest education the client achieved.</li>
  <li>NAME_FAMILY_STATUS â†’ Family status of the client.</li>
  <li>NAME_HOUSING_TYPE â†’ What is the housing situation of the client (renting, living with parents, â€¦).</li>
  <li>REGION_POPULATION_RELATIVE â†’ Normalized population of region where client lives (higher number means the client lives in more populated region).</li>
  <li>DAYS_BIRTH â†’ Clientâ€™s age in days at the time of application.</li>
  <li>DAYS_EMPLOYED â†’ How many days before the application the person started current employment.</li>
  <li>DAYS_REGISTRATION â†’ How many days before the application did client change his registration.</li>
  <li>DAYS_ID_PUBLISH â†’ How many days before the application did client change the identity document with which he applied for the loan.</li>
  <li>FLAG_MOBIL â†’ Did client provide mobile phone (1=YES, 0=NO).</li>
  <li>FLAG_EMP_PHONE â†’ Did client provide work phone (1=YES, 0=NO).</li>
  <li>FLAG_WORK_PHONE â†’ Did client provide home phone (1=YES, 0=NO).</li>
  <li>FLAG_CONT_MOBILE â†’ Was mobile phone reachable (1=YES, 0=NO).</li>
  <li>FLAG_PHONE Did â†’ client provide home phone (1=YES, 0=NO).</li>
  <li>FLAG_EMAIL Did â†’ client provide email (1=YES, 0=NO).</li>
  <li>OCCUPATION_TYPE â†’ What kind of occupation does the client have.</li>
  <li>CNT_FAM_MEMBERS â†’ How many family members does client have.</li>
  <li>REGION_RATING_CLIENT â†’ Our rating of the region where client lives (1,2,3).</li>
  <li>REGION_RATING_CLIENT_W_CITY â†’ Our rating of the region where client lives with taking city into account (1,2,3).</li>
  <li>WEEKDAY_APPR_PROCESS_START â†’ On which day of the week did the client apply for the loan.</li>
  <li>HOUR_APPR_PROCESS_START â†’ Approximately at what hour did the client apply for the loan.</li>
  <li>REG_REGION_NOT_LIVE_REGION â†’ Flag if clientâ€™s permanent address does not match contact address (1=different, 0=same, at region level).</li>
  <li>REG_REGION_NOT_WORK_REGION â†’ Flag if clientâ€™s permanent address does not match work address (1=different, 0=same, at region level).</li>
  <li>LIVE_REGION_NOT_WORK_REGION â†’ Flag if clientâ€™s contact address does not match work address (1=different, 0=same, at region level).</li>
  <li>REG_CITY_NOT_LIVE_CITY â†’ Flag if clientâ€™s permanent address does not match contact address (1=different, 0=same, at city level).</li>
  <li>REG_CITY_NOT_WORK_CITY â†’ Flag if clientâ€™s permanent address does not match work address (1=different, 0=same, at city level).</li>
  <li>LIVE_CITY_NOT_WORK_CITY â†’ Flag if clientâ€™s contact address does not match work address (1=different, 0=same, at city level).</li>
  <li>ORGANIZATION_TYPE â†’ Type of organization where client works.</li>
  <li>EXT_SOURCE_2 â†’ Normalized score from external data source.</li>
  <li>EXT_SOURCE_3 â†’ Normalized score from external data source.</li>
  <li>YEARS_BEGINEXPLUATATION_AVG â†’ Normalized information about building where the client lives, years.</li>
  <li>FLOORSMAX_AVG â†’ Normalized information about building where the client lives, number of floor.</li>
  <li>YEARS_BEGINEXPLUATATION_MODE â†’ Normalized information about building where the client lives, years.</li>
  <li>FLOORSMAX_MODE â†’ Normalized information about building where the client lives, number of floor.</li>
  <li>YEARS_BEGINEXPLUATATION_MEDI â†’ Normalized information about building where the client lives, year.</li>
  <li>FLOORSMAX_MEDI â†’ Normalized information about building where the client lives, number of floor.</li>
  <li>TOTALAREA_MODE â†’ Normalized information about building where the client lives, total area.</li>
  <li>EMERGENCYSTATE_MODE â†’ Normalized information about building where the client lives, Emergency exit Y/N.</li>
  <li>OBS_30_CNT_SOCIAL_CIRCLE â†’ How many observation of clientâ€™s social surroundings with observable 30 DPD (days past due) default.</li>
  <li>DEF_30_CNT_SOCIAL_CIRCLE â†’ How many observation of clientâ€™s social surroundings defaulted on 30 DPD (days past due).</li>
  <li>OBS_60_CNT_SOCIAL_CIRCLE â†’ How many observation of clientâ€™s social surroundings with observable 60 DPD (days past due) default.</li>
  <li>DEF_60_CNT_SOCIAL_CIRCLE â†’ How many observation of clientâ€™s social surroundings defaulted on 60 (days past due) DPD.</li>
  <li>DAYS_LAST_PHONE_CHANGE â†’ How many days before application did client change phone.</li>
  <li>FLAG_DOCUMENT_2 â†’ Did client provide document 2.</li>
  <li>FLAG_DOCUMENT_3 â†’ Did client provide document 3.</li>
  <li>FLAG_DOCUMENT_4 â†’ Did client provide document 4.</li>
  <li>FLAG_DOCUMENT_5 â†’ Did client provide document 5.</li>
  <li>FLAG_DOCUMENT_6 â†’ Did client provide document 6.</li>
  <li>FLAG_DOCUMENT_7 â†’ Did client provide document 7.</li>
  <li>FLAG_DOCUMENT_8 â†’ Did client provide document 8.</li>
  <li>FLAG_DOCUMENT_9 â†’ Did client provide document 9.</li>
  <li>FLAG_DOCUMENT_10 â†’ Did client provide document 10.</li>
  <li>FLAG_DOCUMENT_11 â†’ Did client provide document 11.</li>
  <li>FLAG_DOCUMENT_12 â†’ Did client provide document 12.</li>
  <li>FLAG_DOCUMENT_13 â†’ Did client provide document 13.</li>
  <li>FLAG_DOCUMENT_14 â†’ Did client provide document 14.</li>
  <li>FLAG_DOCUMENT_15 â†’ Did client provide document 15.</li>
  <li>FLAG_DOCUMENT_16 â†’ Did client provide document 16.</li>
  <li>FLAG_DOCUMENT_17 â†’ Did client provide document 17.</li>
  <li>FLAG_DOCUMENT_18 â†’ Did client provide document 18.</li>
  <li>FLAG_DOCUMENT_19 â†’ Did client provide document 19.</li>
  <li>FLAG_DOCUMENT_20 â†’ Did client provide document 20.</li>
  <li>FLAG_DOCUMENT_21 â†’ Did client provide document 21.</li>
  <li>AMT_REQ_CREDIT_BUREAU_HOUR â†’ Number of enquiries to Credit Bureau about the client one hour before application.</li>
  <li>AMT_REQ_CREDIT_BUREAU_DAY â†’ Number of enquiries to Credit Bureau about the client one day before application (excluding one hour before application).</li>
  <li>AMT_REQ_CREDIT_BUREAU_WEEK â†’ Number of enquiries to Credit Bureau about the client one week before application (excluding one day before application).</li>
  <li>AMT_REQ_CREDIT_BUREAU_MON â†’ Number of enquiries to Credit Bureau about the client one month before application (excluding one week before application).</li>
  <li>AMT_REQ_CREDIT_BUREAU_QRT â†’ Number of enquiries to Credit Bureau about the client 3 month before application (excluding one month before application).</li>
  <li>AMT_REQ_CREDIT_BUREAU_YEAR â†’ Number of enquiries to Credit Bureau about the client one day year (excluding last 3 months before application).</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Decribe the data set
</span>
<span class="n">app_train</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>TARGET</th>
      <th>CNT_CHILDREN</th>
      <th>AMT_INCOME_TOTAL</th>
      <th>AMT_CREDIT</th>
      <th>AMT_ANNUITY</th>
      <th>AMT_GOODS_PRICE</th>
      <th>REGION_POPULATION_RELATIVE</th>
      <th>DAYS_BIRTH</th>
      <th>DAYS_EMPLOYED</th>
      <th>DAYS_REGISTRATION</th>
      <th>DAYS_ID_PUBLISH</th>
      <th>FLAG_MOBIL</th>
      <th>FLAG_EMP_PHONE</th>
      <th>FLAG_WORK_PHONE</th>
      <th>FLAG_CONT_MOBILE</th>
      <th>FLAG_PHONE</th>
      <th>FLAG_EMAIL</th>
      <th>CNT_FAM_MEMBERS</th>
      <th>REGION_RATING_CLIENT</th>
      <th>REGION_RATING_CLIENT_W_CITY</th>
      <th>HOUR_APPR_PROCESS_START</th>
      <th>REG_REGION_NOT_LIVE_REGION</th>
      <th>REG_REGION_NOT_WORK_REGION</th>
      <th>LIVE_REGION_NOT_WORK_REGION</th>
      <th>REG_CITY_NOT_LIVE_CITY</th>
      <th>REG_CITY_NOT_WORK_CITY</th>
      <th>LIVE_CITY_NOT_WORK_CITY</th>
      <th>EXT_SOURCE_2</th>
      <th>EXT_SOURCE_3</th>
      <th>YEARS_BEGINEXPLUATATION_AVG</th>
      <th>FLOORSMAX_AVG</th>
      <th>YEARS_BEGINEXPLUATATION_MODE</th>
      <th>FLOORSMAX_MODE</th>
      <th>YEARS_BEGINEXPLUATATION_MEDI</th>
      <th>FLOORSMAX_MEDI</th>
      <th>TOTALAREA_MODE</th>
      <th>OBS_30_CNT_SOCIAL_CIRCLE</th>
      <th>DEF_30_CNT_SOCIAL_CIRCLE</th>
      <th>OBS_60_CNT_SOCIAL_CIRCLE</th>
      <th>DEF_60_CNT_SOCIAL_CIRCLE</th>
      <th>DAYS_LAST_PHONE_CHANGE</th>
      <th>FLAG_DOCUMENT_2</th>
      <th>FLAG_DOCUMENT_3</th>
      <th>FLAG_DOCUMENT_4</th>
      <th>FLAG_DOCUMENT_5</th>
      <th>FLAG_DOCUMENT_6</th>
      <th>FLAG_DOCUMENT_7</th>
      <th>FLAG_DOCUMENT_8</th>
      <th>FLAG_DOCUMENT_9</th>
      <th>FLAG_DOCUMENT_10</th>
      <th>FLAG_DOCUMENT_11</th>
      <th>FLAG_DOCUMENT_12</th>
      <th>FLAG_DOCUMENT_13</th>
      <th>FLAG_DOCUMENT_14</th>
      <th>FLAG_DOCUMENT_15</th>
      <th>FLAG_DOCUMENT_16</th>
      <th>FLAG_DOCUMENT_17</th>
      <th>FLAG_DOCUMENT_18</th>
      <th>FLAG_DOCUMENT_19</th>
      <th>FLAG_DOCUMENT_20</th>
      <th>FLAG_DOCUMENT_21</th>
      <th>AMT_REQ_CREDIT_BUREAU_HOUR</th>
      <th>AMT_REQ_CREDIT_BUREAU_DAY</th>
      <th>AMT_REQ_CREDIT_BUREAU_WEEK</th>
      <th>AMT_REQ_CREDIT_BUREAU_MON</th>
      <th>AMT_REQ_CREDIT_BUREAU_QRT</th>
      <th>AMT_REQ_CREDIT_BUREAU_YEAR</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
      <td>307511.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>278180.518577</td>
      <td>0.080729</td>
      <td>0.417052</td>
      <td>168797.919297</td>
      <td>599025.999706</td>
      <td>27108.573909</td>
      <td>538396.207429</td>
      <td>0.020868</td>
      <td>-16036.995067</td>
      <td>63815.045904</td>
      <td>-4986.120328</td>
      <td>-2994.202373</td>
      <td>0.999997</td>
      <td>0.819889</td>
      <td>0.199368</td>
      <td>0.998133</td>
      <td>0.281066</td>
      <td>0.056720</td>
      <td>2.152664</td>
      <td>2.052463</td>
      <td>2.031521</td>
      <td>12.063419</td>
      <td>0.015144</td>
      <td>0.050769</td>
      <td>0.040659</td>
      <td>0.078173</td>
      <td>0.230454</td>
      <td>0.179555</td>
      <td>0.514393</td>
      <td>0.510853</td>
      <td>0.977735</td>
      <td>0.226282</td>
      <td>0.977065</td>
      <td>0.222315</td>
      <td>0.977752</td>
      <td>0.225897</td>
      <td>0.102547</td>
      <td>1.422245</td>
      <td>0.143421</td>
      <td>1.405292</td>
      <td>0.100049</td>
      <td>-962.858788</td>
      <td>0.000042</td>
      <td>0.710023</td>
      <td>0.000081</td>
      <td>0.015115</td>
      <td>0.088055</td>
      <td>0.000192</td>
      <td>0.081376</td>
      <td>0.003896</td>
      <td>0.000023</td>
      <td>0.003912</td>
      <td>0.000007</td>
      <td>0.003525</td>
      <td>0.002936</td>
      <td>0.001210</td>
      <td>0.009928</td>
      <td>0.000267</td>
      <td>0.008130</td>
      <td>0.000595</td>
      <td>0.000507</td>
      <td>0.000335</td>
      <td>0.006402</td>
      <td>0.007000</td>
      <td>0.034362</td>
      <td>0.267395</td>
      <td>0.265474</td>
      <td>1.899974</td>
    </tr>
    <tr>
      <th>std</th>
      <td>102790.175348</td>
      <td>0.272419</td>
      <td>0.722121</td>
      <td>237123.146279</td>
      <td>402490.776996</td>
      <td>14493.454517</td>
      <td>369279.426396</td>
      <td>0.013831</td>
      <td>4363.988632</td>
      <td>141275.766519</td>
      <td>3522.886321</td>
      <td>1509.450419</td>
      <td>0.001803</td>
      <td>0.384280</td>
      <td>0.399526</td>
      <td>0.043164</td>
      <td>0.449521</td>
      <td>0.231307</td>
      <td>0.910679</td>
      <td>0.509034</td>
      <td>0.502737</td>
      <td>3.265832</td>
      <td>0.122126</td>
      <td>0.219526</td>
      <td>0.197499</td>
      <td>0.268444</td>
      <td>0.421124</td>
      <td>0.383817</td>
      <td>0.190855</td>
      <td>0.174464</td>
      <td>0.042385</td>
      <td>0.102521</td>
      <td>0.046215</td>
      <td>0.101860</td>
      <td>0.042867</td>
      <td>0.102823</td>
      <td>0.077292</td>
      <td>2.397000</td>
      <td>0.445956</td>
      <td>2.375849</td>
      <td>0.361689</td>
      <td>826.807143</td>
      <td>0.006502</td>
      <td>0.453752</td>
      <td>0.009016</td>
      <td>0.122010</td>
      <td>0.283376</td>
      <td>0.013850</td>
      <td>0.273412</td>
      <td>0.062295</td>
      <td>0.004771</td>
      <td>0.062424</td>
      <td>0.002550</td>
      <td>0.059268</td>
      <td>0.054110</td>
      <td>0.034760</td>
      <td>0.099144</td>
      <td>0.016327</td>
      <td>0.089798</td>
      <td>0.024387</td>
      <td>0.022518</td>
      <td>0.018299</td>
      <td>0.077983</td>
      <td>0.103009</td>
      <td>0.190366</td>
      <td>0.851923</td>
      <td>0.738507</td>
      <td>1.738528</td>
    </tr>
    <tr>
      <th>min</th>
      <td>100002.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>25650.000000</td>
      <td>45000.000000</td>
      <td>1615.500000</td>
      <td>40500.000000</td>
      <td>0.000290</td>
      <td>-25229.000000</td>
      <td>-17912.000000</td>
      <td>-24672.000000</td>
      <td>-7197.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000527</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>-4292.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>189145.500000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>112500.000000</td>
      <td>270000.000000</td>
      <td>16524.000000</td>
      <td>238500.000000</td>
      <td>0.010006</td>
      <td>-19682.000000</td>
      <td>-2760.000000</td>
      <td>-7479.500000</td>
      <td>-4299.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>2.000000</td>
      <td>2.000000</td>
      <td>10.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.392974</td>
      <td>0.417100</td>
      <td>0.977735</td>
      <td>0.166700</td>
      <td>0.977065</td>
      <td>0.166700</td>
      <td>0.977752</td>
      <td>0.166700</td>
      <td>0.067000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>-1570.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>278202.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>147150.000000</td>
      <td>513531.000000</td>
      <td>24903.000000</td>
      <td>450000.000000</td>
      <td>0.018850</td>
      <td>-15750.000000</td>
      <td>-1213.000000</td>
      <td>-4504.000000</td>
      <td>-3254.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>2.000000</td>
      <td>2.000000</td>
      <td>12.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.565467</td>
      <td>0.510853</td>
      <td>0.977735</td>
      <td>0.226282</td>
      <td>0.977065</td>
      <td>0.222315</td>
      <td>0.977752</td>
      <td>0.225897</td>
      <td>0.102547</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>-757.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.899974</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>367142.500000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>202500.000000</td>
      <td>808650.000000</td>
      <td>34596.000000</td>
      <td>679500.000000</td>
      <td>0.028663</td>
      <td>-12413.000000</td>
      <td>-289.000000</td>
      <td>-2010.000000</td>
      <td>-1720.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>3.000000</td>
      <td>2.000000</td>
      <td>2.000000</td>
      <td>14.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.663422</td>
      <td>0.636376</td>
      <td>0.982100</td>
      <td>0.226282</td>
      <td>0.981600</td>
      <td>0.222315</td>
      <td>0.982100</td>
      <td>0.225897</td>
      <td>0.102547</td>
      <td>2.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>0.000000</td>
      <td>-274.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.267395</td>
      <td>0.265474</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>456255.000000</td>
      <td>1.000000</td>
      <td>19.000000</td>
      <td>117000000.000000</td>
      <td>4050000.000000</td>
      <td>258025.500000</td>
      <td>4050000.000000</td>
      <td>0.072508</td>
      <td>-7489.000000</td>
      <td>365243.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>20.000000</td>
      <td>3.000000</td>
      <td>3.000000</td>
      <td>23.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>0.855000</td>
      <td>0.896010</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>348.000000</td>
      <td>34.000000</td>
      <td>344.000000</td>
      <td>24.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>4.000000</td>
      <td>9.000000</td>
      <td>8.000000</td>
      <td>27.000000</td>
      <td>261.000000</td>
      <td>25.000000</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="step-6-loading-the-bureau_merged-dataset">STEP 6: Loading the <em>bureau_merged</em> dataset</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_merged</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'/content/grive/MyDrive/HomeLoanDefault/bureau_merged.csv'</span><span class="p">)</span>
<span class="n">bureau_merged</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SK_ID_CURR</th>
      <th>SK_ID_CURR.1</th>
      <th>CREDIT_ACTIVE</th>
      <th>CREDIT_CURRENCY</th>
      <th>DAYS_CREDIT</th>
      <th>CREDIT_DAY_OVERDUE</th>
      <th>DAYS_CREDIT_ENDDATE</th>
      <th>DAYS_ENDDATE_FACT</th>
      <th>CNT_CREDIT_PROLONG</th>
      <th>AMT_CREDIT_SUM</th>
      <th>AMT_CREDIT_SUM_DEBT</th>
      <th>AMT_CREDIT_SUM_LIMIT</th>
      <th>AMT_CREDIT_SUM_OVERDUE</th>
      <th>CREDIT_TYPE</th>
      <th>DAYS_CREDIT_UPDATE</th>
      <th>MONTHS_BALANCE</th>
      <th>STATUS</th>
      <th>index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>100001</td>
      <td>100001</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-49</td>
      <td>0</td>
      <td>1778.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>378000.000000</td>
      <td>373239.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-16</td>
      <td>0.000000</td>
      <td>0</td>
      <td>5896635.000000</td>
    </tr>
    <tr>
      <th>1</th>
      <td>100002</td>
      <td>100002</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-103</td>
      <td>0</td>
      <td>510.517362</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>31988.565000</td>
      <td>0.000000</td>
      <td>31988.565000</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-24</td>
      <td>0.000000</td>
      <td>0</td>
      <td>6158909.000000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>100003</td>
      <td>100003</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-606</td>
      <td>0</td>
      <td>1216.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>810000.000000</td>
      <td>0.000000</td>
      <td>810000.000000</td>
      <td>0.000000</td>
      <td>Credit card</td>
      <td>-43</td>
      <td>nan</td>
      <td>NaN</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>3</th>
      <td>100004</td>
      <td>100004</td>
      <td>Closed</td>
      <td>currency 1</td>
      <td>-408</td>
      <td>0</td>
      <td>-382.000000</td>
      <td>-382.000000</td>
      <td>0</td>
      <td>94537.800000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-382</td>
      <td>nan</td>
      <td>NaN</td>
      <td>nan</td>
    </tr>
    <tr>
      <th>4</th>
      <td>100005</td>
      <td>100005</td>
      <td>Active</td>
      <td>currency 1</td>
      <td>-62</td>
      <td>0</td>
      <td>122.000000</td>
      <td>-1017.437148</td>
      <td>0</td>
      <td>29826.000000</td>
      <td>25321.500000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>Consumer credit</td>
      <td>-31</td>
      <td>0.000000</td>
      <td>X</td>
      <td>6735202.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bureau_merged</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'SK_ID_CURR.1'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="step-7-merging-all-the-datasets-into-final-data-set">STEP 7: Merging all the datasets into final data set</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Merging Application Train with Bureau and Bureau Balance Merged data sets
# Left merge the two datasets
</span>
<span class="n">app_bureau</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">app_train</span><span class="p">,</span> <span class="n">bureau_merged</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_train</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">bureau_merged</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">app_bureau</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 81) (305811, 17) (307511, 97)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Merging the above with Pos_cash balance data set
# Left merge the two datasets
</span>
<span class="n">app_POS</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">app_bureau</span><span class="p">,</span> <span class="n">POS_cashBal</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_bureau</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">POS_cashBal</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">app_POS</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 97) (337252, 7) (307511, 103)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Merging the above with creditcard balance data set
# Left merge the two datasets
</span>
<span class="n">app_credit</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">app_POS</span><span class="p">,</span> <span class="n">creditcard_bal</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_POS</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">creditcard_bal</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">app_credit</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 103) (103558, 22) (307511, 124)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Merging the above with installment payments balance data set
# Left merge the two datasets
</span>
<span class="n">app_instal</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">app_credit</span><span class="p">,</span> <span class="n">instal_paymt</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_credit</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">instal_paymt</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">app_instal</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 124) (339587, 7) (307511, 130)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Merging the above with previous application data set
# Left merge the two datasets
</span>
<span class="n">finaldata</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">app_instal</span><span class="p">,</span> <span class="n">prev_appln</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s">'SK_ID_CURR'</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s">'left'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">app_instal</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">prev_appln</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">finaldata</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 130) (338857, 32) (307511, 161)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">finaldata</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                           0
TARGET                               0
NAME_CONTRACT_TYPE_x                 0
CODE_GENDER                          0
FLAG_OWN_CAR                         0
FLAG_OWN_REALTY                      0
CNT_CHILDREN                         0
AMT_INCOME_TOTAL                     0
AMT_CREDIT_x                         0
AMT_ANNUITY_x                        0
AMT_GOODS_PRICE_x                    0
NAME_TYPE_SUITE_x                    0
NAME_INCOME_TYPE                     0
NAME_EDUCATION_TYPE                  0
NAME_FAMILY_STATUS                   0
NAME_HOUSING_TYPE                    0
REGION_POPULATION_RELATIVE           0
DAYS_BIRTH                           0
DAYS_EMPLOYED                        0
DAYS_REGISTRATION                    0
DAYS_ID_PUBLISH                      0
FLAG_MOBIL                           0
FLAG_EMP_PHONE                       0
FLAG_WORK_PHONE                      0
FLAG_CONT_MOBILE                     0
FLAG_PHONE                           0
FLAG_EMAIL                           0
OCCUPATION_TYPE                      0
CNT_FAM_MEMBERS                      0
REGION_RATING_CLIENT                 0
REGION_RATING_CLIENT_W_CITY          0
WEEKDAY_APPR_PROCESS_START_x         0
HOUR_APPR_PROCESS_START_x            0
REG_REGION_NOT_LIVE_REGION           0
REG_REGION_NOT_WORK_REGION           0
LIVE_REGION_NOT_WORK_REGION          0
REG_CITY_NOT_LIVE_CITY               0
REG_CITY_NOT_WORK_CITY               0
LIVE_CITY_NOT_WORK_CITY              0
ORGANIZATION_TYPE                    0
EXT_SOURCE_2                         0
EXT_SOURCE_3                         0
YEARS_BEGINEXPLUATATION_AVG          0
FLOORSMAX_AVG                        0
YEARS_BEGINEXPLUATATION_MODE         0
FLOORSMAX_MODE                       0
YEARS_BEGINEXPLUATATION_MEDI         0
FLOORSMAX_MEDI                       0
TOTALAREA_MODE                       0
EMERGENCYSTATE_MODE                  0
OBS_30_CNT_SOCIAL_CIRCLE             0
DEF_30_CNT_SOCIAL_CIRCLE             0
OBS_60_CNT_SOCIAL_CIRCLE             0
DEF_60_CNT_SOCIAL_CIRCLE             0
DAYS_LAST_PHONE_CHANGE               0
FLAG_DOCUMENT_2                      0
FLAG_DOCUMENT_3                      0
FLAG_DOCUMENT_4                      0
FLAG_DOCUMENT_5                      0
FLAG_DOCUMENT_6                      0
FLAG_DOCUMENT_7                      0
FLAG_DOCUMENT_8                      0
FLAG_DOCUMENT_9                      0
FLAG_DOCUMENT_10                     0
FLAG_DOCUMENT_11                     0
FLAG_DOCUMENT_12                     0
FLAG_DOCUMENT_13                     0
FLAG_DOCUMENT_14                     0
FLAG_DOCUMENT_15                     0
FLAG_DOCUMENT_16                     0
FLAG_DOCUMENT_17                     0
FLAG_DOCUMENT_18                     0
FLAG_DOCUMENT_19                     0
FLAG_DOCUMENT_20                     0
FLAG_DOCUMENT_21                     0
AMT_REQ_CREDIT_BUREAU_HOUR           0
AMT_REQ_CREDIT_BUREAU_DAY            0
AMT_REQ_CREDIT_BUREAU_WEEK           0
AMT_REQ_CREDIT_BUREAU_MON            0
AMT_REQ_CREDIT_BUREAU_QRT            0
AMT_REQ_CREDIT_BUREAU_YEAR           0
CREDIT_ACTIVE                    44020
CREDIT_CURRENCY                  44020
DAYS_CREDIT                      44020
CREDIT_DAY_OVERDUE               44020
DAYS_CREDIT_ENDDATE              44020
DAYS_ENDDATE_FACT                44020
CNT_CREDIT_PROLONG               44020
AMT_CREDIT_SUM                   44020
AMT_CREDIT_SUM_DEBT              44020
AMT_CREDIT_SUM_LIMIT             44020
AMT_CREDIT_SUM_OVERDUE           44020
CREDIT_TYPE                      44020
DAYS_CREDIT_UPDATE               44020
MONTHS_BALANCE_x                215396
STATUS                          215396
index                           215396
MONTHS_BALANCE_y                 18067
CNT_INSTALMENT                   18067
CNT_INSTALMENT_FUTURE            18067
NAME_CONTRACT_STATUS_x           18067
SK_DPD_x                         18067
SK_DPD_DEF_x                     18067
MONTHS_BALANCE                  220606
AMT_BALANCE                     220606
AMT_CREDIT_LIMIT_ACTUAL         220606
AMT_DRAWINGS_ATM_CURRENT        220606
AMT_DRAWINGS_CURRENT            220606
AMT_DRAWINGS_OTHER_CURRENT      220606
AMT_DRAWINGS_POS_CURRENT        220606
AMT_INST_MIN_REGULARITY         220606
AMT_PAYMENT_CURRENT             220606
AMT_PAYMENT_TOTAL_CURRENT       220606
AMT_RECEIVABLE_PRINCIPAL        220606
AMT_RECIVABLE                   220606
AMT_TOTAL_RECEIVABLE            220606
CNT_DRAWINGS_ATM_CURRENT        220606
CNT_DRAWINGS_CURRENT            220606
CNT_DRAWINGS_OTHER_CURRENT      220606
CNT_DRAWINGS_POS_CURRENT        220606
CNT_INSTALMENT_MATURE_CUM       220606
NAME_CONTRACT_STATUS_y          220606
SK_DPD_y                        220606
SK_DPD_DEF_y                    220606
NUM_INSTALMENT_VERSION           15868
NUM_INSTALMENT_NUMBER            15868
DAYS_INSTALMENT                  15868
DAYS_ENTRY_PAYMENT               15868
AMT_INSTALMENT                   15868
AMT_PAYMENT                      15868
NAME_CONTRACT_TYPE_y             16454
AMT_ANNUITY_y                    16454
AMT_APPLICATION                  16454
AMT_CREDIT_y                     16454
AMT_GOODS_PRICE_y                16454
WEEKDAY_APPR_PROCESS_START_y     16454
HOUR_APPR_PROCESS_START_y        16454
FLAG_LAST_APPL_PER_CONTRACT      16454
NFLAG_LAST_APPL_IN_DAY           16454
NAME_CASH_LOAN_PURPOSE           16454
NAME_CONTRACT_STATUS             16454
DAYS_DECISION                    16454
NAME_PAYMENT_TYPE                16454
CODE_REJECT_REASON               16454
NAME_TYPE_SUITE_y                16454
NAME_CLIENT_TYPE                 16454
NAME_GOODS_CATEGORY              16454
NAME_PORTFOLIO                   16454
NAME_PRODUCT_TYPE                16454
CHANNEL_TYPE                     16454
SELLERPLACE_AREA                 16454
NAME_SELLER_INDUSTRY             16454
CNT_PAYMENT                      16454
NAME_YIELD_GROUP                 16454
PRODUCT_COMBINATION              16454
DAYS_FIRST_DRAWING               16454
DAYS_FIRST_DUE                   16454
DAYS_LAST_DUE_1ST_VERSION        16454
DAYS_LAST_DUE                    16454
DAYS_TERMINATION                 16454
NFLAG_INSURED_ON_APPROVAL        16454
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Assigning NULL percentage value to a variable
</span><span class="n">app_data</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">finaldata</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">finaldata</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>

<span class="c1"># find columns with more than 50% missing values
</span><span class="n">coldata</span> <span class="o">=</span> <span class="n">app_data</span><span class="p">[</span><span class="n">app_data</span> <span class="o">&gt;=</span> <span class="mi">50</span><span class="p">].</span><span class="n">index</span> 

<span class="c1"># drop columns with high null percentage
</span><span class="n">finaldata</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">coldata</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1">#check null percentage after dropping
</span><span class="nb">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="p">(</span><span class="n">finaldata</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">finaldata</span><span class="p">.</span><span class="n">index</span><span class="p">)),</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0.000000
TARGET                          0.000000
NAME_CONTRACT_TYPE_x            0.000000
CODE_GENDER                     0.000000
FLAG_OWN_CAR                    0.000000
FLAG_OWN_REALTY                 0.000000
CNT_CHILDREN                    0.000000
AMT_INCOME_TOTAL                0.000000
AMT_CREDIT_x                    0.000000
AMT_ANNUITY_x                   0.000000
AMT_GOODS_PRICE_x               0.000000
NAME_TYPE_SUITE_x               0.000000
NAME_INCOME_TYPE                0.000000
NAME_EDUCATION_TYPE             0.000000
NAME_FAMILY_STATUS              0.000000
NAME_HOUSING_TYPE               0.000000
REGION_POPULATION_RELATIVE      0.000000
DAYS_BIRTH                      0.000000
DAYS_EMPLOYED                   0.000000
DAYS_REGISTRATION               0.000000
DAYS_ID_PUBLISH                 0.000000
FLAG_MOBIL                      0.000000
FLAG_EMP_PHONE                  0.000000
FLAG_WORK_PHONE                 0.000000
FLAG_CONT_MOBILE                0.000000
FLAG_PHONE                      0.000000
FLAG_EMAIL                      0.000000
OCCUPATION_TYPE                 0.000000
CNT_FAM_MEMBERS                 0.000000
REGION_RATING_CLIENT            0.000000
REGION_RATING_CLIENT_W_CITY     0.000000
WEEKDAY_APPR_PROCESS_START_x    0.000000
HOUR_APPR_PROCESS_START_x       0.000000
REG_REGION_NOT_LIVE_REGION      0.000000
REG_REGION_NOT_WORK_REGION      0.000000
LIVE_REGION_NOT_WORK_REGION     0.000000
REG_CITY_NOT_LIVE_CITY          0.000000
REG_CITY_NOT_WORK_CITY          0.000000
LIVE_CITY_NOT_WORK_CITY         0.000000
ORGANIZATION_TYPE               0.000000
EXT_SOURCE_2                    0.000000
EXT_SOURCE_3                    0.000000
YEARS_BEGINEXPLUATATION_AVG     0.000000
FLOORSMAX_AVG                   0.000000
YEARS_BEGINEXPLUATATION_MODE    0.000000
FLOORSMAX_MODE                  0.000000
YEARS_BEGINEXPLUATATION_MEDI    0.000000
FLOORSMAX_MEDI                  0.000000
TOTALAREA_MODE                  0.000000
EMERGENCYSTATE_MODE             0.000000
OBS_30_CNT_SOCIAL_CIRCLE        0.000000
DEF_30_CNT_SOCIAL_CIRCLE        0.000000
OBS_60_CNT_SOCIAL_CIRCLE        0.000000
DEF_60_CNT_SOCIAL_CIRCLE        0.000000
DAYS_LAST_PHONE_CHANGE          0.000000
FLAG_DOCUMENT_2                 0.000000
FLAG_DOCUMENT_3                 0.000000
FLAG_DOCUMENT_4                 0.000000
FLAG_DOCUMENT_5                 0.000000
FLAG_DOCUMENT_6                 0.000000
FLAG_DOCUMENT_7                 0.000000
FLAG_DOCUMENT_8                 0.000000
FLAG_DOCUMENT_9                 0.000000
FLAG_DOCUMENT_10                0.000000
FLAG_DOCUMENT_11                0.000000
FLAG_DOCUMENT_12                0.000000
FLAG_DOCUMENT_13                0.000000
FLAG_DOCUMENT_14                0.000000
FLAG_DOCUMENT_15                0.000000
FLAG_DOCUMENT_16                0.000000
FLAG_DOCUMENT_17                0.000000
FLAG_DOCUMENT_18                0.000000
FLAG_DOCUMENT_19                0.000000
FLAG_DOCUMENT_20                0.000000
FLAG_DOCUMENT_21                0.000000
AMT_REQ_CREDIT_BUREAU_HOUR      0.000000
AMT_REQ_CREDIT_BUREAU_DAY       0.000000
AMT_REQ_CREDIT_BUREAU_WEEK      0.000000
AMT_REQ_CREDIT_BUREAU_MON       0.000000
AMT_REQ_CREDIT_BUREAU_QRT       0.000000
AMT_REQ_CREDIT_BUREAU_YEAR      0.000000
CREDIT_ACTIVE                  14.310000
CREDIT_CURRENCY                14.310000
DAYS_CREDIT                    14.310000
CREDIT_DAY_OVERDUE             14.310000
DAYS_CREDIT_ENDDATE            14.310000
DAYS_ENDDATE_FACT              14.310000
CNT_CREDIT_PROLONG             14.310000
AMT_CREDIT_SUM                 14.310000
AMT_CREDIT_SUM_DEBT            14.310000
AMT_CREDIT_SUM_LIMIT           14.310000
AMT_CREDIT_SUM_OVERDUE         14.310000
CREDIT_TYPE                    14.310000
DAYS_CREDIT_UPDATE             14.310000
MONTHS_BALANCE_y                5.880000
CNT_INSTALMENT                  5.880000
CNT_INSTALMENT_FUTURE           5.880000
NAME_CONTRACT_STATUS_x          5.880000
SK_DPD_x                        5.880000
SK_DPD_DEF_x                    5.880000
NUM_INSTALMENT_VERSION          5.160000
NUM_INSTALMENT_NUMBER           5.160000
DAYS_INSTALMENT                 5.160000
DAYS_ENTRY_PAYMENT              5.160000
AMT_INSTALMENT                  5.160000
AMT_PAYMENT                     5.160000
NAME_CONTRACT_TYPE_y            5.350000
AMT_ANNUITY_y                   5.350000
AMT_APPLICATION                 5.350000
AMT_CREDIT_y                    5.350000
AMT_GOODS_PRICE_y               5.350000
WEEKDAY_APPR_PROCESS_START_y    5.350000
HOUR_APPR_PROCESS_START_y       5.350000
FLAG_LAST_APPL_PER_CONTRACT     5.350000
NFLAG_LAST_APPL_IN_DAY          5.350000
NAME_CASH_LOAN_PURPOSE          5.350000
NAME_CONTRACT_STATUS            5.350000
DAYS_DECISION                   5.350000
NAME_PAYMENT_TYPE               5.350000
CODE_REJECT_REASON              5.350000
NAME_TYPE_SUITE_y               5.350000
NAME_CLIENT_TYPE                5.350000
NAME_GOODS_CATEGORY             5.350000
NAME_PORTFOLIO                  5.350000
NAME_PRODUCT_TYPE               5.350000
CHANNEL_TYPE                    5.350000
SELLERPLACE_AREA                5.350000
NAME_SELLER_INDUSTRY            5.350000
CNT_PAYMENT                     5.350000
NAME_YIELD_GROUP                5.350000
PRODUCT_COMBINATION             5.350000
DAYS_FIRST_DRAWING              5.350000
DAYS_FIRST_DUE                  5.350000
DAYS_LAST_DUE_1ST_VERSION       5.350000
DAYS_LAST_DUE                   5.350000
DAYS_TERMINATION                5.350000
NFLAG_INSURED_ON_APPROVAL       5.350000
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">finaldata</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(307511, 137)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">null_count</span> <span class="o">=</span> <span class="n">finaldata</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
<span class="n">null_data</span> <span class="o">=</span> <span class="n">null_count</span><span class="p">[</span><span class="n">null_count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">null_data</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CREDIT_ACTIVE                   44020
CREDIT_CURRENCY                 44020
DAYS_CREDIT                     44020
CREDIT_DAY_OVERDUE              44020
DAYS_CREDIT_ENDDATE             44020
DAYS_ENDDATE_FACT               44020
CNT_CREDIT_PROLONG              44020
AMT_CREDIT_SUM                  44020
AMT_CREDIT_SUM_DEBT             44020
AMT_CREDIT_SUM_LIMIT            44020
AMT_CREDIT_SUM_OVERDUE          44020
CREDIT_TYPE                     44020
DAYS_CREDIT_UPDATE              44020
MONTHS_BALANCE_y                18067
CNT_INSTALMENT                  18067
CNT_INSTALMENT_FUTURE           18067
NAME_CONTRACT_STATUS_x          18067
SK_DPD_x                        18067
SK_DPD_DEF_x                    18067
NUM_INSTALMENT_VERSION          15868
NUM_INSTALMENT_NUMBER           15868
DAYS_INSTALMENT                 15868
DAYS_ENTRY_PAYMENT              15868
AMT_INSTALMENT                  15868
AMT_PAYMENT                     15868
NAME_CONTRACT_TYPE_y            16454
AMT_ANNUITY_y                   16454
AMT_APPLICATION                 16454
AMT_CREDIT_y                    16454
AMT_GOODS_PRICE_y               16454
WEEKDAY_APPR_PROCESS_START_y    16454
HOUR_APPR_PROCESS_START_y       16454
FLAG_LAST_APPL_PER_CONTRACT     16454
NFLAG_LAST_APPL_IN_DAY          16454
NAME_CASH_LOAN_PURPOSE          16454
NAME_CONTRACT_STATUS            16454
DAYS_DECISION                   16454
NAME_PAYMENT_TYPE               16454
CODE_REJECT_REASON              16454
NAME_TYPE_SUITE_y               16454
NAME_CLIENT_TYPE                16454
NAME_GOODS_CATEGORY             16454
NAME_PORTFOLIO                  16454
NAME_PRODUCT_TYPE               16454
CHANNEL_TYPE                    16454
SELLERPLACE_AREA                16454
NAME_SELLER_INDUSTRY            16454
CNT_PAYMENT                     16454
NAME_YIELD_GROUP                16454
PRODUCT_COMBINATION             16454
DAYS_FIRST_DRAWING              16454
DAYS_FIRST_DUE                  16454
DAYS_LAST_DUE_1ST_VERSION       16454
DAYS_LAST_DUE                   16454
DAYS_TERMINATION                16454
NFLAG_INSURED_ON_APPROVAL       16454
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">finaldata</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 307511 entries, 0 to 307510
Columns: 137 entries, SK_ID_CURR to NFLAG_INSURED_ON_APPROVAL
dtypes: float64(63), int64(41), object(33)
memory usage: 323.8+ MB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">finaldata</span><span class="p">.</span><span class="n">dtypes</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                        int64
TARGET                            int64
NAME_CONTRACT_TYPE_x             object
CODE_GENDER                      object
FLAG_OWN_CAR                     object
FLAG_OWN_REALTY                  object
CNT_CHILDREN                      int64
AMT_INCOME_TOTAL                float64
AMT_CREDIT_x                    float64
AMT_ANNUITY_x                   float64
AMT_GOODS_PRICE_x               float64
NAME_TYPE_SUITE_x                object
NAME_INCOME_TYPE                 object
NAME_EDUCATION_TYPE              object
NAME_FAMILY_STATUS               object
NAME_HOUSING_TYPE                object
REGION_POPULATION_RELATIVE      float64
DAYS_BIRTH                        int64
DAYS_EMPLOYED                     int64
DAYS_REGISTRATION               float64
DAYS_ID_PUBLISH                   int64
FLAG_MOBIL                        int64
FLAG_EMP_PHONE                    int64
FLAG_WORK_PHONE                   int64
FLAG_CONT_MOBILE                  int64
FLAG_PHONE                        int64
FLAG_EMAIL                        int64
OCCUPATION_TYPE                  object
CNT_FAM_MEMBERS                 float64
REGION_RATING_CLIENT              int64
REGION_RATING_CLIENT_W_CITY       int64
WEEKDAY_APPR_PROCESS_START_x     object
HOUR_APPR_PROCESS_START_x         int64
REG_REGION_NOT_LIVE_REGION        int64
REG_REGION_NOT_WORK_REGION        int64
LIVE_REGION_NOT_WORK_REGION       int64
REG_CITY_NOT_LIVE_CITY            int64
REG_CITY_NOT_WORK_CITY            int64
LIVE_CITY_NOT_WORK_CITY           int64
ORGANIZATION_TYPE                object
EXT_SOURCE_2                    float64
EXT_SOURCE_3                    float64
YEARS_BEGINEXPLUATATION_AVG     float64
FLOORSMAX_AVG                   float64
YEARS_BEGINEXPLUATATION_MODE    float64
FLOORSMAX_MODE                  float64
YEARS_BEGINEXPLUATATION_MEDI    float64
FLOORSMAX_MEDI                  float64
TOTALAREA_MODE                  float64
EMERGENCYSTATE_MODE              object
OBS_30_CNT_SOCIAL_CIRCLE        float64
DEF_30_CNT_SOCIAL_CIRCLE        float64
OBS_60_CNT_SOCIAL_CIRCLE        float64
DEF_60_CNT_SOCIAL_CIRCLE        float64
DAYS_LAST_PHONE_CHANGE          float64
FLAG_DOCUMENT_2                   int64
FLAG_DOCUMENT_3                   int64
FLAG_DOCUMENT_4                   int64
FLAG_DOCUMENT_5                   int64
FLAG_DOCUMENT_6                   int64
FLAG_DOCUMENT_7                   int64
FLAG_DOCUMENT_8                   int64
FLAG_DOCUMENT_9                   int64
FLAG_DOCUMENT_10                  int64
FLAG_DOCUMENT_11                  int64
FLAG_DOCUMENT_12                  int64
FLAG_DOCUMENT_13                  int64
FLAG_DOCUMENT_14                  int64
FLAG_DOCUMENT_15                  int64
FLAG_DOCUMENT_16                  int64
FLAG_DOCUMENT_17                  int64
FLAG_DOCUMENT_18                  int64
FLAG_DOCUMENT_19                  int64
FLAG_DOCUMENT_20                  int64
FLAG_DOCUMENT_21                  int64
AMT_REQ_CREDIT_BUREAU_HOUR      float64
AMT_REQ_CREDIT_BUREAU_DAY       float64
AMT_REQ_CREDIT_BUREAU_WEEK      float64
AMT_REQ_CREDIT_BUREAU_MON       float64
AMT_REQ_CREDIT_BUREAU_QRT       float64
AMT_REQ_CREDIT_BUREAU_YEAR      float64
CREDIT_ACTIVE                    object
CREDIT_CURRENCY                  object
DAYS_CREDIT                     float64
CREDIT_DAY_OVERDUE              float64
DAYS_CREDIT_ENDDATE             float64
DAYS_ENDDATE_FACT               float64
CNT_CREDIT_PROLONG              float64
AMT_CREDIT_SUM                  float64
AMT_CREDIT_SUM_DEBT             float64
AMT_CREDIT_SUM_LIMIT            float64
AMT_CREDIT_SUM_OVERDUE          float64
CREDIT_TYPE                      object
DAYS_CREDIT_UPDATE              float64
MONTHS_BALANCE_y                float64
CNT_INSTALMENT                  float64
CNT_INSTALMENT_FUTURE           float64
NAME_CONTRACT_STATUS_x           object
SK_DPD_x                        float64
SK_DPD_DEF_x                    float64
NUM_INSTALMENT_VERSION          float64
NUM_INSTALMENT_NUMBER           float64
DAYS_INSTALMENT                 float64
DAYS_ENTRY_PAYMENT              float64
AMT_INSTALMENT                  float64
AMT_PAYMENT                     float64
NAME_CONTRACT_TYPE_y             object
AMT_ANNUITY_y                   float64
AMT_APPLICATION                 float64
AMT_CREDIT_y                    float64
AMT_GOODS_PRICE_y               float64
WEEKDAY_APPR_PROCESS_START_y     object
HOUR_APPR_PROCESS_START_y       float64
FLAG_LAST_APPL_PER_CONTRACT      object
NFLAG_LAST_APPL_IN_DAY          float64
NAME_CASH_LOAN_PURPOSE           object
NAME_CONTRACT_STATUS             object
DAYS_DECISION                   float64
NAME_PAYMENT_TYPE                object
CODE_REJECT_REASON               object
NAME_TYPE_SUITE_y                object
NAME_CLIENT_TYPE                 object
NAME_GOODS_CATEGORY              object
NAME_PORTFOLIO                   object
NAME_PRODUCT_TYPE                object
CHANNEL_TYPE                     object
SELLERPLACE_AREA                float64
NAME_SELLER_INDUSTRY             object
CNT_PAYMENT                     float64
NAME_YIELD_GROUP                 object
PRODUCT_COMBINATION              object
DAYS_FIRST_DRAWING              float64
DAYS_FIRST_DUE                  float64
DAYS_LAST_DUE_1ST_VERSION       float64
DAYS_LAST_DUE                   float64
DAYS_TERMINATION                float64
NFLAG_INSURED_ON_APPROVAL       float64
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the columns
</span>
<span class="c1"># For the numerical values, replacing the missing values with mean of their respective columns
</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_DAY_OVERDUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_DAY_OVERDUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT_ENDDATE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT_ENDDATE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_ENDDATE_FACT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_ENDDATE_FACT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_CREDIT_PROLONG'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_CREDIT_PROLONG'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_DEBT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_DEBT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_LIMIT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_LIMIT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_OVERDUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_SUM_OVERDUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT_UPDATE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_CREDIT_UPDATE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'MONTHS_BALANCE_y'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'MONTHS_BALANCE_y'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_INSTALMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_INSTALMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_FUTURE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_INSTALMENT_FUTURE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'SK_DPD_x'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'SK_DPD_x'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'SK_DPD_DEF_x'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'SK_DPD_DEF_x'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'NUM_INSTALMENT_VERSION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NUM_INSTALMENT_VERSION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'NUM_INSTALMENT_NUMBER'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NUM_INSTALMENT_NUMBER'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_INSTALMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_INSTALMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_ENTRY_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_ENTRY_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_INSTALMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_INSTALMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_ANNUITY_y'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_ANNUITY_y'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_APPLICATION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_APPLICATION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_y'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_CREDIT_y'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE_y'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'AMT_GOODS_PRICE_y'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'HOUR_APPR_PROCESS_START_y'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'HOUR_APPR_PROCESS_START_y'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'NFLAG_LAST_APPL_IN_DAY'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NFLAG_LAST_APPL_IN_DAY'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_DECISION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_DECISION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'SELLERPLACE_AREA'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'SELLERPLACE_AREA'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_PAYMENT'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CNT_PAYMENT'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_FIRST_DRAWING'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_FIRST_DRAWING'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_FIRST_DUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_FIRST_DUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE_1ST_VERSION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE_1ST_VERSION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_LAST_DUE'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_TERMINATION'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'DAYS_TERMINATION'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">finaldata</span><span class="p">[</span><span class="s">'NFLAG_INSURED_ON_APPROVAL'</span><span class="p">].</span><span class="n">fillna</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NFLAG_INSURED_ON_APPROVAL'</span><span class="p">].</span><span class="n">mean</span><span class="p">(),</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># For the categorical values replacing the missing values with most frequently appearing values
</span>
<span class="c1"># Getting the mode of the categorical columns 
</span><span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_ACTIVE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_CURRENCY'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_STATUS_x'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_TYPE_y'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'WEEKDAY_APPR_PROCESS_START_y'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'FLAG_LAST_APPL_PER_CONTRACT'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CASH_LOAN_PURPOSE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_STATUS'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PAYMENT_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CODE_REJECT_REASON'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE_y'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CLIENT_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_GOODS_CATEGORY'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PORTFOLIO'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PRODUCT_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CHANNEL_TYPE'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_SELLER_INDUSTRY'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_YIELD_GROUP'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">].</span><span class="n">mode</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0    Active
dtype: object
0    currency 1
dtype: object
0    Consumer credit
dtype: object
0    Completed
dtype: object
0    Cash loans
dtype: object
0    MONDAY
dtype: object
0    Y
dtype: object
0    XAP
dtype: object
0    Approved
dtype: object
0    Cash through the bank
dtype: object
0    XAP
dtype: object
0    Unaccompanied
dtype: object
0    Repeater
dtype: object
0    XNA
dtype: object
0    POS
dtype: object
0    XNA
dtype: object
0    Credit and cash offices
dtype: object
0    XNA
dtype: object
0    XNA
dtype: object
0    Cash
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Replacing the missing values for the below with the most frequently appearing values from above 
</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_ACTIVE'</span><span class="p">]),</span><span class="s">'CREDIT_ACTIVE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Active"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_CURRENCY'</span><span class="p">]),</span><span class="s">'CREDIT_CURRENCY'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"currency 1"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CREDIT_TYPE'</span><span class="p">]),</span><span class="s">'CREDIT_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Consumer credit"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_STATUS_x'</span><span class="p">]),</span><span class="s">'NAME_CONTRACT_STATUS_x'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Completed"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_TYPE_y'</span><span class="p">]),</span><span class="s">'NAME_CONTRACT_TYPE_y'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Cash loans"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'WEEKDAY_APPR_PROCESS_START_y'</span><span class="p">]),</span><span class="s">'WEEKDAY_APPR_PROCESS_START_y'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"MONDAY"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'FLAG_LAST_APPL_PER_CONTRACT'</span><span class="p">]),</span><span class="s">'FLAG_LAST_APPL_PER_CONTRACT'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Y"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CASH_LOAN_PURPOSE'</span><span class="p">]),</span><span class="s">'NAME_CASH_LOAN_PURPOSE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XAP"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CONTRACT_STATUS'</span><span class="p">]),</span><span class="s">'NAME_CONTRACT_STATUS'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Approved"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PAYMENT_TYPE'</span><span class="p">]),</span><span class="s">'NAME_PAYMENT_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Cash through the bank"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CODE_REJECT_REASON'</span><span class="p">]),</span><span class="s">'CODE_REJECT_REASON'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XAP"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_TYPE_SUITE_y'</span><span class="p">]),</span><span class="s">'NAME_TYPE_SUITE_y'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Unaccompanied"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_CLIENT_TYPE'</span><span class="p">]),</span><span class="s">'NAME_CLIENT_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Repeater"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_GOODS_CATEGORY'</span><span class="p">]),</span><span class="s">'NAME_GOODS_CATEGORY'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XNA"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PORTFOLIO'</span><span class="p">]),</span><span class="s">'NAME_PORTFOLIO'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"POS"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_PRODUCT_TYPE'</span><span class="p">]),</span><span class="s">'NAME_PRODUCT_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XNA"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'CHANNEL_TYPE'</span><span class="p">]),</span><span class="s">'CHANNEL_TYPE'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Credit and cash offices"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_SELLER_INDUSTRY'</span><span class="p">]),</span><span class="s">'NAME_SELLER_INDUSTRY'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XNA"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'NAME_YIELD_GROUP'</span><span class="p">]),</span><span class="s">'NAME_YIELD_GROUP'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"XNA"</span>
<span class="n">finaldata</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">pd</span><span class="p">.</span><span class="n">isnull</span><span class="p">(</span><span class="n">finaldata</span><span class="p">[</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">]),</span><span class="s">'PRODUCT_COMBINATION'</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Cash"</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">finaldata</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SK_ID_CURR                      0
TARGET                          0
NAME_CONTRACT_TYPE_x            0
CODE_GENDER                     0
FLAG_OWN_CAR                    0
FLAG_OWN_REALTY                 0
CNT_CHILDREN                    0
AMT_INCOME_TOTAL                0
AMT_CREDIT_x                    0
AMT_ANNUITY_x                   0
AMT_GOODS_PRICE_x               0
NAME_TYPE_SUITE_x               0
NAME_INCOME_TYPE                0
NAME_EDUCATION_TYPE             0
NAME_FAMILY_STATUS              0
NAME_HOUSING_TYPE               0
REGION_POPULATION_RELATIVE      0
DAYS_BIRTH                      0
DAYS_EMPLOYED                   0
DAYS_REGISTRATION               0
DAYS_ID_PUBLISH                 0
FLAG_MOBIL                      0
FLAG_EMP_PHONE                  0
FLAG_WORK_PHONE                 0
FLAG_CONT_MOBILE                0
FLAG_PHONE                      0
FLAG_EMAIL                      0
OCCUPATION_TYPE                 0
CNT_FAM_MEMBERS                 0
REGION_RATING_CLIENT            0
REGION_RATING_CLIENT_W_CITY     0
WEEKDAY_APPR_PROCESS_START_x    0
HOUR_APPR_PROCESS_START_x       0
REG_REGION_NOT_LIVE_REGION      0
REG_REGION_NOT_WORK_REGION      0
LIVE_REGION_NOT_WORK_REGION     0
REG_CITY_NOT_LIVE_CITY          0
REG_CITY_NOT_WORK_CITY          0
LIVE_CITY_NOT_WORK_CITY         0
ORGANIZATION_TYPE               0
EXT_SOURCE_2                    0
EXT_SOURCE_3                    0
YEARS_BEGINEXPLUATATION_AVG     0
FLOORSMAX_AVG                   0
YEARS_BEGINEXPLUATATION_MODE    0
FLOORSMAX_MODE                  0
YEARS_BEGINEXPLUATATION_MEDI    0
FLOORSMAX_MEDI                  0
TOTALAREA_MODE                  0
EMERGENCYSTATE_MODE             0
OBS_30_CNT_SOCIAL_CIRCLE        0
DEF_30_CNT_SOCIAL_CIRCLE        0
OBS_60_CNT_SOCIAL_CIRCLE        0
DEF_60_CNT_SOCIAL_CIRCLE        0
DAYS_LAST_PHONE_CHANGE          0
FLAG_DOCUMENT_2                 0
FLAG_DOCUMENT_3                 0
FLAG_DOCUMENT_4                 0
FLAG_DOCUMENT_5                 0
FLAG_DOCUMENT_6                 0
FLAG_DOCUMENT_7                 0
FLAG_DOCUMENT_8                 0
FLAG_DOCUMENT_9                 0
FLAG_DOCUMENT_10                0
FLAG_DOCUMENT_11                0
FLAG_DOCUMENT_12                0
FLAG_DOCUMENT_13                0
FLAG_DOCUMENT_14                0
FLAG_DOCUMENT_15                0
FLAG_DOCUMENT_16                0
FLAG_DOCUMENT_17                0
FLAG_DOCUMENT_18                0
FLAG_DOCUMENT_19                0
FLAG_DOCUMENT_20                0
FLAG_DOCUMENT_21                0
AMT_REQ_CREDIT_BUREAU_HOUR      0
AMT_REQ_CREDIT_BUREAU_DAY       0
AMT_REQ_CREDIT_BUREAU_WEEK      0
AMT_REQ_CREDIT_BUREAU_MON       0
AMT_REQ_CREDIT_BUREAU_QRT       0
AMT_REQ_CREDIT_BUREAU_YEAR      0
CREDIT_ACTIVE                   0
CREDIT_CURRENCY                 0
DAYS_CREDIT                     0
CREDIT_DAY_OVERDUE              0
DAYS_CREDIT_ENDDATE             0
DAYS_ENDDATE_FACT               0
CNT_CREDIT_PROLONG              0
AMT_CREDIT_SUM                  0
AMT_CREDIT_SUM_DEBT             0
AMT_CREDIT_SUM_LIMIT            0
AMT_CREDIT_SUM_OVERDUE          0
CREDIT_TYPE                     0
DAYS_CREDIT_UPDATE              0
MONTHS_BALANCE_y                0
CNT_INSTALMENT                  0
CNT_INSTALMENT_FUTURE           0
NAME_CONTRACT_STATUS_x          0
SK_DPD_x                        0
SK_DPD_DEF_x                    0
NUM_INSTALMENT_VERSION          0
NUM_INSTALMENT_NUMBER           0
DAYS_INSTALMENT                 0
DAYS_ENTRY_PAYMENT              0
AMT_INSTALMENT                  0
AMT_PAYMENT                     0
NAME_CONTRACT_TYPE_y            0
AMT_ANNUITY_y                   0
AMT_APPLICATION                 0
AMT_CREDIT_y                    0
AMT_GOODS_PRICE_y               0
WEEKDAY_APPR_PROCESS_START_y    0
HOUR_APPR_PROCESS_START_y       0
FLAG_LAST_APPL_PER_CONTRACT     0
NFLAG_LAST_APPL_IN_DAY          0
NAME_CASH_LOAN_PURPOSE          0
NAME_CONTRACT_STATUS            0
DAYS_DECISION                   0
NAME_PAYMENT_TYPE               0
CODE_REJECT_REASON              0
NAME_TYPE_SUITE_y               0
NAME_CLIENT_TYPE                0
NAME_GOODS_CATEGORY             0
NAME_PORTFOLIO                  0
NAME_PRODUCT_TYPE               0
CHANNEL_TYPE                    0
SELLERPLACE_AREA                0
NAME_SELLER_INDUSTRY            0
CNT_PAYMENT                     0
NAME_YIELD_GROUP                0
PRODUCT_COMBINATION             0
DAYS_FIRST_DRAWING              0
DAYS_FIRST_DUE                  0
DAYS_LAST_DUE_1ST_VERSION       0
DAYS_LAST_DUE                   0
DAYS_TERMINATION                0
NFLAG_INSURED_ON_APPROVAL       0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Export the file
</span><span class="n">finaldata</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">'final_homeloan_data.csv'</span><span class="p">)</span>
<span class="kn">from</span> <span class="nn">google.colab</span> <span class="kn">import</span> <span class="n">files</span>
<span class="n">files</span><span class="p">.</span><span class="n">download</span><span class="p">(</span><span class="s">"final_homeloan_data.csv"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;IPython.core.display.Javascript object&gt;



&lt;IPython.core.display.Javascript object&gt;
</code></pre></div></div>

:ET